<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/31/2016 11:15:36 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="IRC-PC010"
  DTS:CreatorName="DS\UItake"
  DTS:DTSID="{268E11D0-7B62-4BF5-9061-3503EADD715A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Research data import"
  DTS:PackageType="5"
  DTS:VersionBuild="252"
  DTS:VersionGUID="{A9991156-BB41-40F1-851D-13A75B1BC75E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Additional]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{1764ABF5-5C77-45C2-8477-566C5CA22A69}"
      DTS:ObjectName="Additional">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{3714BA30-1DCE-467C-BF5F-4FEC1F35E26C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="enttype"
              DTS:DTSID="{BF4C9F86-72D9-4F14-971D-84032084E6DB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="adid"
              DTS:DTSID="{293C01CF-B259-4656-8CAC-697DE1D725BA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data1"
              DTS:DTSID="{FD490D5E-E5CA-48B2-B875-2B5B6AB31E90}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data2"
              DTS:DTSID="{1938F5A0-542A-4610-B1F6-7BA097230FBF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data3"
              DTS:DTSID="{C53A61F5-F924-4FD9-9CE9-86007BAADA15}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data4"
              DTS:DTSID="{B82C9901-16D5-485D-80FA-1EE9B9584373}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data5"
              DTS:DTSID="{1FD17AA9-5488-41E2-A419-1F29C785AFA0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data6"
              DTS:DTSID="{22C3F5F0-1DAC-46BA-BA4F-2113F99BB255}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data7"
              DTS:DTSID="{39D6931B-A245-40EF-840C-F9403FF5789D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Clinical]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{7CA67060-23B6-4F19-9E20-3A8AF214F26A}"
      DTS:ObjectName="Clinical">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{11068537-10D1-4346-8E43-AF84A68323DF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{3DA9A494-B183-48F5-BDBE-79CDB647969D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="sysdate"
              DTS:DTSID="{33655AAC-0017-4CFC-B9A9-95B7AE0DD522}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="constype"
              DTS:DTSID="{4C94C448-BE3B-4711-8B57-E3AF18B2F174}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="consid"
              DTS:DTSID="{797C803E-ED4E-44D4-9CA5-91AEC3D26A8D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{811DA352-CD9E-4236-BE38-2981FA381AB0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{B3D37F8F-26DC-4102-A2CB-103BCF3C8398}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="44"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="textid"
              DTS:DTSID="{594F6284-F863-4415-8DFA-DEB6626708B8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="episode"
              DTS:DTSID="{5A4045F6-3240-4FCC-B1DE-8636808E4262}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="enttype"
              DTS:DTSID="{AB7C7452-7A68-4DCC-841E-73974DEBBDA5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="adid"
              DTS:DTSID="{F0FB61DB-8075-4C82-A3AF-71CFAA49963A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Consultation]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{25DE3BCA-170D-454A-B01F-DA717C8C41D1}"
      DTS:ObjectName="Consultation">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{9E729D61-ED84-471E-95C1-FB11CFA9A4DD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{B1CBF098-AA21-42E7-9D76-FDA2D8CB76BC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="sysdate"
              DTS:DTSID="{581AB655-6D65-4532-9880-A00936B6AFC7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="constype"
              DTS:DTSID="{81CE177D-D155-415B-B4F0-8E46ECF986F0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="consid"
              DTS:DTSID="{EE848031-8B41-486A-994E-86B907F00A7A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{0DA8DD29-941E-42C9-8C75-E613BE003CD5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="duration"
              DTS:DTSID="{ACA2A223-0D20-4A1A-B402-C652C46193E7}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Define Clinical]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{135BA3E8-F074-43A2-9C5A-A92E5E64643B}"
      DTS:ObjectName="Define Clinical">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{065EC79E-9706-4693-A033-31B6F21A7803}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{826EA85A-98E8-4854-9E1A-69077EC0A9C5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{24D7867E-EE26-4DCB-A11F-D6FABC55F97F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Define Referral]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F579467F-2226-4CF9-A4B3-00A2BAC5AE1F}"
      DTS:ObjectName="Define Referral">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{3BF2DA08-5C1D-466D-993D-24E5131BE62C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{4215AF94-91E9-4106-83C9-6B816D413DCF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{FBA4FFB5-AB04-40D2-ADA8-64A51E826F97}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Define Results]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{FCC7728E-2CEB-4CD7-94B4-DF688A5C6189}"
      DTS:ObjectName="Define Results">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{A367D02A-CC83-4635-AFA3-AAA03FCFCD45}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="indexdate"
              DTS:DTSID="{6397948D-E09B-479D-902D-794C24B098D0}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Define Test]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9B5D4D68-1573-4700-A22B-D83E04F08372}"
      DTS:ObjectName="Define Test">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{B693FB87-13E2-4623-9FC9-C5A426117A55}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{4E984A45-7FD2-444E-9F30-8D79B9A4608E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{8275E545-238E-418B-BA6F-F1BE5BDEDDBD}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Immunisation]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{ACD53FC6-DD68-4053-8B9F-FC74E0CAC1FB}"
      DTS:ObjectName="Immunisation">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{BB3B00AE-51A1-4167-87A7-35E36E6E1074}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{C8BA37EA-9CB2-4ECF-A9B9-7FC8D7259289}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="sysdate"
              DTS:DTSID="{72464FE1-DB13-4696-9C8A-6BE645EF9932}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="constype"
              DTS:DTSID="{E725F483-CD53-41B8-990C-BC903851E6A0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="consid"
              DTS:DTSID="{ACF01197-DF9F-406E-9FC3-46E5C2B77587}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{5B417069-7BFD-46DA-AB5B-94C714FA440B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{36D6D377-4577-4D74-A318-682B1FDA8AAA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="44"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="textid"
              DTS:DTSID="{96AB0C5E-5349-4422-92E7-90B255FBB170}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="immstype"
              DTS:DTSID="{F5669D84-D340-4CA8-A24C-47499664070A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="stage"
              DTS:DTSID="{23BBFBFA-8890-4072-B21A-3936C3F4E4C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="status"
              DTS:DTSID="{E7B3CCFB-FC11-467C-B42F-B0DA44A95F91}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="compound"
              DTS:DTSID="{D57D9053-DAAF-4925-8E57-FB260267FF5E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="source"
              DTS:DTSID="{04A6F01E-DA67-432C-8FD0-E00B6711CC02}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="reason"
              DTS:DTSID="{2D88A30E-E741-44AC-9B37-944D5549052A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="method"
              DTS:DTSID="{1C8E5BB0-B4EF-419B-AAA3-29C4D63A79C9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="batch"
              DTS:DTSID="{BD842B71-9695-40E9-B8E7-C4EE72DBC714}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Patient]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EB2F9D52-D94A-4764-9671-E34B7B699456}"
      DTS:ObjectName="Patient">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{DF67CCA5-734B-4A9F-9363-7B5DCB3176E9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vmid"
              DTS:DTSID="{5E882431-2673-4E64-9013-8E2FB264F7DA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="gender"
              DTS:DTSID="{35187279-EE17-4BAD-9E46-523A21443EC8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="yob"
              DTS:DTSID="{1D651A11-B914-4C3F-9341-87AEC7ED26A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="mob"
              DTS:DTSID="{24038011-124D-4216-B3EF-3DB09D979999}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="marital"
              DTS:DTSID="{42B30CD7-A7EA-4921-BADB-68B8DE49135A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="famnum"
              DTS:DTSID="{745DF468-EAF5-46C0-83B9-5C9A9A8558D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="chsreg"
              DTS:DTSID="{B2183D18-67EF-4DAC-B880-0B8B524A9061}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="chsdate"
              DTS:DTSID="{CABFC9EC-6F08-4D98-907A-C37FDE89E487}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="prescr"
              DTS:DTSID="{CFFB6F6F-4F2A-48EF-A3B8-8E904D368790}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="capsup"
              DTS:DTSID="{AF786F3F-248A-49E7-8E6D-02FC5FB82BFD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="ses"
              DTS:DTSID="{32E27502-D064-45EC-9A4B-AA0AA52EBBA2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="frd"
              DTS:DTSID="{DF565A0A-DA4E-4F0C-99D8-8744E83893F6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="crd"
              DTS:DTSID="{D164ABCE-7E21-4E84-A3E7-2E5507AAA342}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="regstat"
              DTS:DTSID="{F3948469-76CA-4028-91A2-3796046B3DE2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="reggap"
              DTS:DTSID="{F1763066-9155-4B4C-9471-B975FC2ED821}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="internal"
              DTS:DTSID="{40545674-7BD1-4880-9FF4-FDFEB042C474}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="tod"
              DTS:DTSID="{8ABA5640-A20B-4218-8235-9B83EA3F1F83}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="toreason"
              DTS:DTSID="{A6464FD9-530A-4E7C-B08A-9E09CD13BC6D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="deathdate"
              DTS:DTSID="{AA052C6C-417A-48E7-B2EB-02700234F107}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="accept"
              DTS:DTSID="{1F887361-BF02-44DF-A051-B4EB9E75439F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Practice]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{E858F657-4305-4168-B6A2-80FE8157F7C0}"
      DTS:ObjectName="Practice">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="pracid"
              DTS:DTSID="{6E04CB9F-29ED-4603-9E36-49F11B4DCC5E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="region"
              DTS:DTSID="{ED70CAFB-D894-4431-A2A6-D4F8A4424CA8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="lcd"
              DTS:DTSID="{7CD87D03-8F34-4112-BF78-923B598A3BFE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="uts"
              DTS:DTSID="{7A6EE575-9D40-43E7-92B5-54DF8D7B6A55}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Referral]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5D450333-F000-4489-A624-69F06FCE615C}"
      DTS:ObjectName="Referral">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{29A2C463-8A85-4632-ABCF-DED2AA479D9F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{D59F57B3-C99B-4D4B-ACF5-EC5210C282B9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="sysdate"
              DTS:DTSID="{1F8276A2-4236-42E8-8196-1D61919CDF06}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="constype"
              DTS:DTSID="{F44F418B-9287-4FAD-82F7-23F76B7EE272}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="consid"
              DTS:DTSID="{BCAAA3C8-A55C-429F-BDB5-46B1A82849A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{EDE348EA-9A4F-4FEA-9B30-56C0D58FBF83}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{4AA06154-32A8-427C-9A7C-CAA10B260CD7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="44"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="textid"
              DTS:DTSID="{9F79DFC9-B738-4905-892C-166C845F72DF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="source"
              DTS:DTSID="{04717457-8832-44AB-B10E-F1BB3E891E57}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="nhsspec"
              DTS:DTSID="{930AD49A-A9C3-4E1C-81BF-C9AA0A3B25A0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="fhsaspec"
              DTS:DTSID="{920BE911-B064-4092-B551-33C79A892729}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="inpatient"
              DTS:DTSID="{F6D2791A-6568-40E2-9AC2-C037D2A02102}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="attendance"
              DTS:DTSID="{09E6278D-E0F8-4361-976B-8C203AAC7CB3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="urgency"
              DTS:DTSID="{FB11873F-4886-40A1-B94D-50D83A915AC1}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SEEDSQL1.Database]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
      DTS:ObjectName="SEEDSQL1.Database">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=v0018-sql01;Initial Catalog=MSK;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Staff]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{277C79EC-B178-4E39-B391-A09D3B0D03E1}"
      DTS:ObjectName="Staff">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{DCEDC12B-5FBB-4CCA-906E-E96A3A27820A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="gender"
              DTS:DTSID="{795FB691-FD71-4D52-B3CB-59CF66E843EB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="role"
              DTS:DTSID="{52F5314C-7BC8-4D58-9DC7-CE8462176272}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Test]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{DABC12B3-FB92-49BB-AFF9-917466BF9500}"
      DTS:ObjectName="Test">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{165E85BD-F17F-40D6-8186-A0E9374C7A52}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{D26559BC-967E-4E3F-8E43-6B910F84DD89}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="sysdate"
              DTS:DTSID="{5F193716-6E98-4B31-923B-601A1B0E117D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="constype"
              DTS:DTSID="{C532B56E-99B9-458E-95B7-88B71D1F3D8E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="consid"
              DTS:DTSID="{913400AF-01EF-4ACC-A424-81FC9EDA5455}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="medcode"
              DTS:DTSID="{0025997A-BE5E-48D4-ADE5-3BECAB5C510B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{D5196214-BF85-4127-B309-58661583F922}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="44"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="textid"
              DTS:DTSID="{49108CF6-C70B-42A5-8D1A-3148EBA2F247}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="enttype"
              DTS:DTSID="{E982D407-1DD7-420E-9593-405C466420C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="data1"
              DTS:DTSID="{DB1D983C-4FC7-4655-BDFE-20EC599137B4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="data2"
              DTS:DTSID="{07869F71-D2A9-45FE-9B54-EB9927D52A64}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="data3"
              DTS:DTSID="{A983FE07-41B1-4569-9AE2-2261A55FD74A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="data4"
              DTS:DTSID="{6F59B984-905A-4909-8E50-671A85E1BC37}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="data5"
              DTS:DTSID="{81981A1E-9F95-4332-A739-9569D2672E90}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="data6"
              DTS:DTSID="{5D929EA0-0F47-4A5E-8207-7392D1904F21}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="data7"
              DTS:DTSID="{7F6DE5B5-AF46-450E-B0A9-FC7357C85CAE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="data8"
              DTS:DTSID="{D2D263A1-E79E-4C58-A821-BEA13DE3C6F7}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Therapy]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F1977F4F-3C42-4E1C-A361-36656D199118}"
      DTS:ObjectName="Therapy">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="patid"
              DTS:DTSID="{99B0D4A9-23B1-4D45-921C-F0789486C78E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="eventdate"
              DTS:DTSID="{0A98BE9B-2A51-4263-904A-AD85AA906A24}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="sysdate"
              DTS:DTSID="{C4934DB2-2D65-48EB-8F8F-873409EAFF0A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="consid"
              DTS:DTSID="{1BF932A2-D6A6-43E9-A43A-2D5C4E656567}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="prodcode"
              DTS:DTSID="{974970E7-0AD1-49C8-A809-7E583A214413}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="staffid"
              DTS:DTSID="{9BBF65E5-BF58-4994-9C86-2827F7101CBC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="44"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="textid"
              DTS:DTSID="{832532C8-C4B7-4023-991E-0908E901A6EB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="2"
              DTS:TextQualified="True"
              DTS:ObjectName="bnfcode"
              DTS:DTSID="{653D320B-D9E2-497B-A136-63CC6BA58530}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="qty"
              DTS:DTSID="{54B6DB65-3CC9-4EC8-83F6-72344601856A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="ndd"
              DTS:DTSID="{C0DEB5B4-D46C-4431-B0E0-632D69416A85}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="numdays"
              DTS:DTSID="{E7B8A861-FF3F-4DCD-B6DC-60AA0C226316}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="numpacks"
              DTS:DTSID="{1462823F-4A84-4868-9707-ED988670853C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="packtype"
              DTS:DTSID="{8910BC17-606F-4148-B166-D5BEC02DBEFD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="issueseq"
              DTS:DTSID="{E3E250FF-E747-4B7B-A207-6AB3F135D04E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9441A0C8-97F7-4B3F-82F3-3FAE9B6F28AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Add Foreign Keys"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{665A4BEE-C256-4B20-8B2C-3444195AABE5}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Add Foreign Keys"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
          SQLTask:SqlStatementSource="if OBJECT_ID ('dbo.[FK_DefineResults_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblDefineResults] with nocheck add constraint [FK_DefineResults_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_DefineTest_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblDefineTest] with nocheck add constraint [FK_DefineTest_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_DefineClinical_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblDefineClinical] with nocheck add constraint [FK_DefineClinical_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_DefineReferral_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblDefineReferral] with nocheck add constraint [FK_DefineReferral_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;&#xA;if OBJECT_ID ('dbo.FK_Additional_Patient', 'C') is null&#xA;&#x9;alter table [dbo].[tblAdditional] with nocheck add constraint [FK_Additional_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid]) &#xA;if OBJECT_ID ('dbo.[FK_Clinical_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblClinical] with nocheck add constraint [FK_Clinical_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_Clinical_Staff]', 'C') is null&#xA;&#x9;alter table [dbo].[tblClinical] with nocheck add constraint [FK_Clinical_Staff] foreign key ([staffid])&#xA;&#x9;&#x9;references [dbo].[tblStaff] ([staffid])&#xA;if OBJECT_ID ('dbo.[FK_Consultation_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblConsultation] with nocheck add constraint [FK_Consultation_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_Consultation_Staff]', 'C') is null&#xA;&#x9;alter table [dbo].[tblConsultation] with nocheck add constraint [FK_Consultation_Staff] foreign key ([staffid])&#xA;&#x9;&#x9;references [dbo].[tblStaff] ([staffid])&#xA;if OBJECT_ID ('dbo.[FK_Immunisation_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblImmunisation] with nocheck add constraint [FK_Immunisation_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_Immunisation_Staff]', 'C') is null&#xA;&#x9;alter table [dbo].[tblImmunisation] with nocheck add constraint [FK_Immunisation_Staff] foreign key ([staffid])&#xA;&#x9;&#x9;references [dbo].[tblStaff] ([staffid])&#xA;if OBJECT_ID ('dbo.[FK_Referral_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblReferral] with nocheck add constraint [FK_Referral_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_Referral_Staff]', 'C') is null&#xA;&#x9;alter table [dbo].[tblReferral] with nocheck add constraint [FK_Referral_Staff] foreign key ([staffid])&#xA;&#x9;&#x9;references [dbo].[tblStaff] ([staffid])&#xA;if OBJECT_ID ('dbo.[FK_Test_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblTest] with nocheck add constraint [FK_Test_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_Test_Staff]', 'C') is null&#xA;&#x9;alter table [dbo].[tblTest] with nocheck add constraint [FK_Test_Staff] foreign key ([staffid])&#xA;&#x9;&#x9;references [dbo].[tblStaff] ([staffid])&#xA;if OBJECT_ID ('dbo.[FK_Therapy_Patient]', 'C') is null&#xA;&#x9;alter table [dbo].[tblTherapy] with nocheck add constraint [FK_Therapy_Patient] foreign key ([patid])&#xA;&#x9;&#x9;references [dbo].[tblPatient] ([patid])&#xA;if OBJECT_ID ('dbo.[FK_Therapy_Staff]', 'C') is null&#xA;&#x9;alter table [dbo].[tblTherapy] with nocheck add constraint [FK_Therapy_Staff] foreign key ([staffid])&#xA;&#x9;&#x9;references [dbo].[tblStaff] ([staffid])" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C1CD92FB-2F12-4DA7-8744-C04EE25E1795}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
          SQLTask:SqlStatementSource="if OBJECT_ID ('[dbo].[tblDefineResults]') is null&#xA;create table [dbo].[tblDefineResults] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[indexdate] datetime&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblDefineClinical]') is null&#xA;create table [dbo].[tblDefineClinical] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[medcode] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblDefineReferral]') is null&#xA;create table [dbo].[tblDefineReferral] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[medcode] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblDefineTest]') is null&#xA;create table [dbo].[tblDefineTest] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[medcode] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblUploadStage]') is null&#xA;create table [dbo].[tblUploadStage] (&#xA;&#x9;[ID] bigint identity (1, 1)&#xA;&#x9;,[Column0] varchar(max)&#xA;&#x9;,[Column1] varchar(max)&#xA;&#x9;,[Column2] varchar(max)&#xA;&#x9;,[Column3] varchar(max)&#xA;&#x9;,[Column4] varchar(max)&#xA;&#x9;,[Column5] varchar(max)&#xA;&#x9;,[Column6] varchar(max)&#xA;&#x9;,[Column7] varchar(max)&#xA;&#x9;,[Column8] varchar(max)&#xA;&#x9;,[Column9] varchar(max)&#xA;&#x9;,[Column10] varchar(max)&#xA;&#x9;,[Column11] varchar(max)&#xA;&#x9;,[Column12] varchar(max)&#xA;&#x9;,[Column13] varchar(max)&#xA;&#x9;,[Column14] varchar(max)&#xA;&#x9;,[Column15] varchar(max)&#xA;&#x9;,[Column16] varchar(max)&#xA;&#x9;,[Column17] varchar(max)&#xA;&#x9;,[Column18] varchar(max)&#xA;&#x9;,[Column19] varchar(max)&#xA;&#x9;,[Column20] varchar(max)&#xA; )&#xA;&#xA; if OBJECT_ID ('[dbo].[tblPatient]') is null&#xA;create table [dbo].[tblPatient] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[vmid] bigint&#xA;&#x9;,[gender] tinyint&#xA;&#x9;,[yob] smallint&#xA;&#x9;,[mob] tinyint&#xA;&#x9;,[marital] smallint&#xA;&#x9;,[famnum] bigint&#xA;&#x9;,[chsreg] tinyint&#xA;&#x9;,[chsdate] datetime&#xA;&#x9;,[prescr] smallint&#xA;&#x9;,[capsup] smallint&#xA;&#x9;,[ses] tinyint&#xA;&#x9;,[frd] datetime&#xA;&#x9;,[crd] datetime&#xA;&#x9;,[regstat] tinyint&#xA;&#x9;,[reggap] int&#xA;&#x9;,[internal] tinyint&#xA;&#x9;,[tod] datetime&#xA;&#x9;,[toreason] smallint&#xA;&#x9;,[deathdate] datetime&#xA;&#x9;,[accept] tinyint&#xA;&#x9;--, constraint PK_PatientID primary key clustered (patid)&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblPractice]') is null&#xA;create table [dbo].[tblPractice] (&#xA;&#x9;[pracid] smallint&#xA;&#x9;,[region] smallint&#xA;&#x9;,[lcd] datetime&#xA;&#x9;,[uts] datetime&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblStaff]') is null&#xA;create table [dbo].[tblStaff] (&#xA;&#x9;[staffid] bigint&#xA;&#x9;,[gender] tinyint&#xA;&#x9;,[role] smallint&#xA;&#x9;--, constraint PK_StaffID primary key clustered (staffid)&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblConsultation]') is null&#xA;create table [dbo].[tblConsultation] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[sysdate] datetime&#xA;&#x9;,[constype] smallint&#xA;&#x9;,[consid] bigint&#xA;&#x9;,[staffid] bigint&#xA;&#x9;,[duration] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblClinical]') is null&#xA;create table [dbo].[tblClinical] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[sysdate] datetime&#xA;&#x9;,[constype] smallint&#xA;&#x9;,[consid] bigint&#xA;&#x9;,[medcode] bigint&#xA;&#x9;,[staffid] bigint&#xA;&#x9;,[textid] varchar(50)&#xA;&#x9;,[episode] smallint&#xA;&#x9;,[enttype] int&#xA;&#x9;,[adid] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblAdditional]') is null&#xA;create table [dbo].[tblAdditional] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[enttype] int&#xA;&#x9;,[adid] bigint&#xA;&#x9;,[data1] varchar(20)&#xA;&#x9;,[data2] varchar(20)&#xA;&#x9;,[data3] varchar(20)&#xA;&#x9;,[data4] varchar(20)&#xA;&#x9;,[data5] varchar(20)&#xA;&#x9;,[data6] varchar(20)&#xA;&#x9;,[data7] varchar(20)&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblReferral]') is null&#xA;create table [dbo].[tblReferral] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[sysdate] datetime&#xA;&#x9;,[constype] smallint&#xA;&#x9;,[consid] bigint&#xA;&#x9;,[medcode] bigint&#xA;&#x9;,[staffid] bigint&#xA;&#x9;,[textid] varchar(50)&#xA;&#x9;,[source] tinyint&#xA;&#x9;,[nhsspec] smallint&#xA;&#x9;,[fhsaspec] smallint&#xA;&#x9;,[inpatient] tinyint&#xA;&#x9;,[attendance] tinyint&#xA;&#x9;,[urgency] tinyint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblImmunisation]') is null&#xA;create table [dbo].[tblImmunisation](&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[sysdate] datetime&#xA;&#x9;,[constype] smallint&#xA;&#x9;,[consid] bigint&#xA;&#x9;,[medcode] bigint&#xA;&#x9;,[staffid] bigint&#xA;&#x9;,[textid] varchar(50)&#xA;&#x9;,[immstype] smallint&#xA;&#x9;,[stage] tinyint&#xA;&#x9;,[status] tinyint&#xA;&#x9;,[compound] smallint&#xA;&#x9;,[source] smallint&#xA;&#x9;,[reason] smallint&#xA;&#x9;,[method] smallint&#xA;&#x9;,[batch] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblTest]') is null&#xA;create table [dbo].[tblTest] (&#xA;&#x9;[patid] bigint&#xA;      ,[eventdate] datetime&#xA;      ,[sysdate] datetime&#xA;      ,[constype] smallint&#xA;      ,[consid] bigint&#xA;      ,[medcode] bigint&#xA;      ,[staffid] bigint&#xA;      ,[textid] varchar(50)&#xA;      ,[enttype] int&#xA;      ,[data1] smallint&#xA;      ,[data2] float&#xA;      ,[data3] float&#xA;      ,[data4] float&#xA;      ,[data5] float&#xA;      ,[data6] float&#xA;      ,[data7] tinyint&#xA;      ,[data8] varchar(20)&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[tblTherapy]') is null&#xA;create table [dbo].[tblTherapy] (&#xA;&#x9;[patid] bigint&#xA;&#x9;,[eventdate] datetime&#xA;&#x9;,[sysdate] datetime&#xA;&#x9;,[consid] bigint&#xA;&#x9;,[prodcode] bigint&#xA;&#x9;,[staffid] bigint&#xA;&#x9;,[textid] varchar(50)&#xA;&#x9;,[bnfcode] int&#xA;&#x9;,[qty] float --bigint&#xA;&#x9;,[ndd] float&#xA;&#x9;,[numdays] bigint&#xA;&#x9;,[numpacks] float --int&#xA;&#x9;,[packtype] bigint&#xA;&#x9;,[issueseq] bigint&#xA;&#x9;)&#xA;&#xA;if OBJECT_ID ('[dbo].[TableColumnDataType]', 'V') is null&#xA;&#xA;begin&#xA;exec sp_executesql N'&#xA;create view [dbo].[TableColumnDataType]&#xA;as&#xA;select ta.name as TableName&#xA;&#x9;, c.name as ColumnName&#xA;&#x9;, case when ty.name in (''text'', ''varchar'', ''char'', ''nvarchar'', ''nchar'')&#xA;&#x9;&#x9;then ty.name + ''('' + convert(varchar(12), c.max_length) + '')''&#xA;&#x9;&#x9;else ty.name&#xA;&#x9;&#x9;end as DataType&#xA;from [sys].[tables] ta&#xA;&#x9;inner join [sys].[columns] c&#xA;&#x9;&#x9;on ta.[object_id] = c.[object_id]&#xA;&#x9;inner join [sys].[types] ty&#xA;&#x9;&#x9;on c.[system_type_id] = ty.[system_type_id]&#xA;&#x9;&#x9;&#x9;and c.[user_type_id] = ty.[user_type_id]&#xA;'&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Drop tblUploadStage"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A0BB36FE-6937-4B98-9802-C44C09800B8F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop tblUploadStage"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
          SQLTask:SqlStatementSource="drop table dbo.tblUploadStage" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{FBB0CEC7-FC97-4DEC-90A4-C9CC98AA912A}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{7A9BA38F-A25B-4F26-BB40-8882531EF26A}"
        DTS:ObjectName="{7A9BA38F-A25B-4F26-BB40-8882531EF26A}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="\\v0018-sql01\Shared\Data\MSK - CPRD Data Files" />
            <FEFEProperty
              FileSpec="*.txt" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Additional Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{0ec295af-b3af-4fe6-b2b5-36ae46b3c341}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Additional Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Additional", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Additional Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column9
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties.Settings.get_Default():SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties.Sett" +
    "ings")]

namespace SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7241664d5a9f4a128d0aa2c6c969dc09.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ea056ef4-bf9e-44c8-bf43-0f302ce19d3d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7241664d5a9f4a128d0aa2c6c969dc09</RootNamespace>
    <AssemblyName>SC_7241664d5a9f4a128d0aa2c6c969dc09</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7241664d5a9f4a128d0aa2c6c969dc09" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_7241664d5a9f4a128d0aa2c6c969dc09</msb:CodeName>
		<msb:DisplayName>SC_7241664d5a9f4a128d0aa2c6c969dc09</msb:DisplayName>
		<msb:ProjectId>{7B7EE562-3A25-41F1-BB43-8ED77239791C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7241664d5a9f4a128d0aa2c6c969dc09.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7241664d5a9f4a128d0aa2c6c969dc09")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_7241664d5a9f4a128d0aa2c6c969dc09")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7241664d5a9f4a128d0aa2c6c969dc09.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7241664d5a9f4a128d0aa2c6c969dc09.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPeWHFgAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAACjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALg6AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
OgAAAAAAAEgAAAACAAUAtCQAAEwVAAABAAAAAAAAAAA6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8kAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAE4BAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4KwEAAAJ7AwAABBY+BQEAAAZvFQAAChY++QAAAAJ7BgAABG8bAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabxkAAAYCewYAAAQHjmkXMAMUKwMHF5pvFwAABgJ7BgAABAeOaRgw
AxQrAwcYmm8VAAAGAnsGAAAEB45pGTADFCsDBxmabxMAAAYCewYAAAQHjmkaMAMUKwMHGppvEQAA
BgJ7BgAABAeOaRswAxQrAwcbmm8PAAAGAnsGAAAEB45pHDADFCsDBxyabw0AAAYCewYAAAQHjmkd
MAMUKwMHHZpvCwAABgJ7BgAABAeOaR4wAxQrAwcemm8JAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
BwAABgICewMAAAQXWH0DAAAEAnsBAAAEbxQAAAoKBjrP/v//KkoCKBcAAAoCewEAAARvGAAACio6
Ahd9AwAABAIoHgAABioqAgMEBSgZAAAKKiYCFgMoGgAACipaAywIAhYoGwAACipyBQAAcHMcAAAK
eiYCFwMoGgAACipaAywIAhcoGwAACipyBQAAcHMcAAAKeiYCGAMoGgAACipaAywIAhgoGwAACipy
BQAAcHMcAAAKeiYCGQMoGgAACipaAywIAhkoGwAACipyBQAAcHMcAAAKeiYCGgMoGgAACipaAywI
AhooGwAACipyBQAAcHMcAAAKeiYCGwMoGgAACipaAywIAhsoGwAACipyBQAAcHMcAAAKeiYCHAMo
GgAACipaAywIAhwoGwAACipyBQAAcHMcAAAKeiYCHQMoGgAACipaAywIAh0oGwAACipyBQAAcHMc
AAAKeiYCHgMoGgAACipaAywIAh4oGwAACipyBQAAcHMcAAAKeioCHwkDKBoAAAoqXgMsCQIfCSgb
AAAKKnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcyMAAAZ9BAAA
BAICcyUAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8cAAAGAhR9BgAABCoAAAATMAUASQAAAAMA
ABEWCisuBAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAKDgRzBgAABn0GAAAEBhdYCgYDMs4C
byIAAAYCbx8AAAYCKCAAAAYqOgIoIwAACgIDfQcAAAQqggJ7BwAABG8kAAAKbyUAAApytAAAcG8m
AAAKbycAAAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkAAAQtHnLKAABw0AcAAAIoKAAACm8p
AAAKcyoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAigrAAAKKi5zKwAABoAL
AAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAARAgAACN+AACwCAAAQAkA
ACNTdHJpbmdzAAAAAPARAAA8AQAAI1VTACwTAAAQAAAAI0dVSUQAAAA8EwAAEAIAACNCbG9iAAAA
AAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAACwAAACwAAAAfAAAAKwAAABAAAAAD
AAAABAAAABgAAAAZAAAAAQAAAAYAAAABAAAAAABBBAEAAAAAAAYAIgNWBwYAtgNWBwYAbgJDBw8A
ygcAAAYAmwKMBQYABQOMBQYA5gKMBQYAnQOMBQYAQgOMBQYAWwOMBQYAsgKMBQYAzQLxAwoAdgO1
AQYAZAYgAQYAfQg4BQ4AVgDbBgoApAa1ARIAlQa1AQoABQa1AQoAwwi1AQYAUQJDBwYAtQZ2BwYA
+QVrBRYAIQIrBBYAggIrBBYAAwJWBQYANgJWBwYACwQ4BQYAcQYgAQYA3wU4BRoAAQADBxoAGgAD
BxoAPQADBwYA1gE4BQYAbQE4BQYANAmMBQAAAAALAQAAAAABAAEAAQAQAEsFAAAQAAEAAQABABAA
hwYAAEUABAAGAAEAEAClCAAAUQAEAB4AAQAQAEcIAAA9AAcAIwABABAACAgAAD0ACAAlAAAAEAB9
B9kHPQAJACYAAAEQADcI2QdpAAsAKgABAHwGpgABABIEqgABACkErQAGAEcIsAAGAAgItAAGAIcG
uAABALMIvAABALMIvAARAD8FwAARAPMBxAARAF0ByABQIAAAAADGAEAIzAABAHsgAAAAAMYA1AMG
AAIAlCAAAAAAxgBpCAYAAgDuIQAAAADGAN8DBgACAAEiAAAAAIYYLAcGAAIAECIAAAAAhhgsB0EA
AgAbIgAAAACGCP8AEAAFACUiAAAAAIYIFAXRAAYAPCIAAAAAhgjPABAABwBGIgAAAACGCAEF0QAI
AF0iAAAAAIYIwwAQAAkAZyIAAAAAhgjuBNEACgB+IgAAAACGCLcAEAALAIgiAAAAAIYI2wTRAAwA
nyIAAAAAhgirABAADQCpIgAAAACGCMgE0QAOAMAiAAAAAIYInwAQAA8AyiIAAAAAhgi1BNEAEADh
IgAAAACGCJMAEAARAOsiAAAAAIYIogTRABIAAiMAAAAAhgiHABAAEwAMIwAAAACGCI8E0QAUACMj
AAAAAIYIewAQABUALSMAAAAAhgh8BNEAFgBEIwAAAACGCG8AEAAXAE8jAAAAAIYIaQTRABgAZyMA
AAAAhgAdCQYAGQBvIwAAAACGAIQIBgAZAHcjAAAAAIYAhwhRABkAfyMAAAAAhhgsBwYAGQCfIwAA
AADGAVsIBgAZAKEjAAAAAIEASQEGABkAwCMAAAAAxgARCdYAGQCfIwAAAADGAWkIBgAdABUkAAAA
AIYYLAfiAB0AJCQAAAAAhgi+BXgAHgBFJAAAAACGGCwH4gAeAFQkAAAAAIMYLAcGAB8AXCQAAAAA
kwixBugAHwCIJAAAAACTCNsB7QAfAI8kAAAAAJMI5wHyAB8AlyQAAAAAlgiZCPgAIACeJAAAAACG
GCwHBgAgAKYkAAAAAJEYMgf9ACAAAAABAIAFAAABAKoGAAACABIIAAADABMGAAABAOsDAAABAOsD
AAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAAB
AOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAOsDAAABAGEI
AAACADkHAAADAFMIAAAEABMGAAABAMkIAAABAMkIAAABAOsDCQAsBwEAEQAsBwYAGQAsBwoAKQAs
BxAAMQAsBxAAOQAsBxAAQQAsBxAASQAsBxAAUQAsBxAAWQAsBxAAYQAsBxAAaQAsBwYAqQAsBwYA
yQAsBxUA2QAsBwYAgQDNBSAAoQDUAwYAcQAsBxAA4QAkCS0A6QCsATIA4QAeBDYA4QCTCDoAoQDf
AwYA6QAbAgYAiQAsB0EAiQAvBUsAiQAnBQEA8QAsBxAAiQAdCQYAiQCECAYAiQCHCFEAoQAsBwYA
oQAUAVkAoQAmCGAAeQAsBwYAoQAqAWYA+QCeBWsAAQGRAXEACQHFBngAEQF/AX0AEQEwCYYAsQAs
B4wA0QAsBwYALgALAB0BLgATACYBLgAbAEUBLgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4B
LgBLAJYBLgBTAHcBLgBbAMABQwBjAAoC4wBrAAoCYQF7AAoCyQJzAEUB6QJzAEUBGwAlAFUAAwAB
AAUAFQAHABYACAAYAAAAAwEBAQAAGAUFAQAA0wABAQAABQUFAQAAxwABAQAA8gQFAQAAuwABAQAA
3wQFAQAArwABAQAAzAQFAQAAowABAQAAuQQFAQAAlwABAQAApgQFAQAAiwABAQAAkwQFAQAAfwAB
AQAAgAQFAQAAcwABAQAAbQQFAQAA1AUJAQAAtQYOAQAA+wETAQAAnQgYAQEABwADAAEACAAFAAEA
CQAHAAEACgAJAAEACwALAAEADAANAAEADQAPAAEADgARAAEADwATAAEAEAAVAAEAEQAXAAEAEgAZ
AAEAEwAbAAEAFAAdAAEAFQAfAAEAFgAhAAEAFwAjAAEAGAAlAAEAGQAnAAEAGgApAAIAJAArAAIA
JwAtAAIAKAAvAAEAKQAvAAIAKgAxAASAAAABAAAAAAAAAAAAAAAAANsAAAAEAAAAAAAAAAAAAACU
AEABAAAAAA0AAAAAAAAAAAAAAJ0A0wgAAAAADQAAAAAAAAAAAAAAnQAdBgAAAAANAAAAAAAAAAAA
AACdAPAIAAAAAAQAAAAAAAAAAAAAAJQAOAUAAAAADQAAAAAAAAAAAAAAnQBABgAAAAAAAAAAAQAA
AIcHAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29s
bGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2Vy
MTAwAHNldF9Db2x1bW4wAHNldF9Db2x1bW4xAHNldF9Db2x1bW4yAHNldF9Db2x1bW4zAHNldF9D
b2x1bW40AHNldF9Db2x1bW41AHNldF9Db2x1bW42AHNldF9Db2x1bW43AHNldF9Db2x1bW44AFND
XzcyNDE2NjRkNWE5ZjRhMTI4ZDBhYTJjNmM5NjlkYzA5AHNldF9Db2x1bW45ADxNb2R1bGU+AEdl
dE91dHB1dElEAFN5c3RlbS5JTwBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIATWFya091
dHB1dHNGaW5pc2hlZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFN0cmluZwBTcmNGaWxlUGF0aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFNDXzcyNDE2NjRkNWE5ZjRhMTI4ZDBhYTJjNmM5NjlkYzA5LmRsbABzZXRf
Q29sdW1uMF9Jc051bGwAc2V0X0NvbHVtbjFfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABzZXRf
Q29sdW1uM19Jc051bGwAc2V0X0NvbHVtbjRfSXNOdWxsAHNldF9Db2x1bW41X0lzTnVsbABzZXRf
Q29sdW1uNl9Jc051bGwAc2V0X0NvbHVtbjdfSXNOdWxsAHNldF9Db2x1bW44X0lzTnVsbABzZXRf
Q29sdW1uOV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBUcmFuc2FjdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9D
b25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3Vs
dHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNS
dW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTdHJlYW1SZWFk
ZXIAVGV4dFJlYWRlcgB0ZXh0UmVhZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2Ny
aXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ183
MjQxNjY0ZDVhOWY0YTEyOGQwYWEyYzZjOTY5ZGMwOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNzI0MTY2NGQ1YTlmNGExMjhkMGFhMmM2Yzk2OWRjMDku
UHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVz
AFNldHRpbmdzAEFjcXVpcmVDb25uZWN0aW9ucwBCdWZmZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRl
TmV3T3V0cHV0Um93cwBPYmplY3QAU2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRw
dXQAQWRkUm93AFRvQ2hhckFycmF5AGdldF9Bc3NlbWJseQAAAAAAAywAAICbSQBzAE4AdQBsAGwA
IABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBh
AGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMA
bwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAVQwBvAG4AbgBl
AGMAdABpAG8AbgAAcVMAQwBfADcAMgA0ADEANgA2ADQAZAA1AGEAOQBmADQAYQAxADIAOABkADAA
YQBhADIAYwA2AGMAOQA2ADkAZABjADAAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAKmR/MUi4EEimKXndfSn5PQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQQH
ARJBBCABHBwHBwMOHQ4dAwQgAB0DAyAADgMgAAgGIAEdDh0DCSADARJJHQgSTQUgAgEIHAMgAAID
BwEIBgACCBJNDgUgAR0ICAQgABJ9BSAAEoCBBiABEoCFDgQgABJBCAABEoCJEYCNBSAAEoCRByAC
AQ4SgJEIt3pcVhk04IkIiYRdzYCAzJEDBhI5AgYOAgYIAwYSFAMGEhgDBhIMAwYSUQMGElkDBhJd
AwYSIAQgAQEcBCABAQILIAQBCB0IHRJJEk0FIAEBElEEAAASWQQAABJdBQABARJdBAAAEiADAAAB
AygADgMoAAIEKAASQQQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNzI0MTY2NGQ1YTlmNGExMjhkMGFhMmM2Yzk2OWRj
MDkAAAUBAAAAABgBABNVbml2ZXJzaXR5IG9mIExlZWRzAAApAQAkQ29weXJpZ2h0IEAgVW5pdmVy
c2l0eSBvZiBMZWVkcyAyMDE2AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADg
OgAAAAAAAAAAAAD6OgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7DoAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAADgEAAAAAAAAAAAAADgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB0AwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAASAAUAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABVAG4AaQB2AGUAcgBzAGkAdAB5ACAAbwBmACAATABlAGUAZABzAAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcAMgA0ADEANgA2ADQAZAA1
AGEAOQBmADQAYQAxADIAOABkADAAYQBhADIAYwA2AGMAOQA2ADkAZABjADAAOQAAADAACAABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBu
AGEAbABOAGEAbQBlAAAAUwBDAF8ANwAyADQAMQA2ADYANABkADUAYQA5AGYANABhADEAMgA4AGQA
MABhAGEAMgBjADYAYwA5ADYAOQBkAGMAMAA5AC4AZABsAGwAAABuACUAAQBMAGUAZwBhAGwAQwBv
AHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABVAG4AaQB2AGUAcgBzAGkA
dAB5ACAAbwBmACAATABlAGUAZABzACAAMgAwADEANgAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8ANwAyADQAMQA2ADYANABkADUAYQA5AGYANABhADEAMgA4AGQAMABhAGEAMgBj
ADYAYwA5ADYAOQBkAGMAMAA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADcAMgA0ADEANgA2ADQAZAA1AGEAOQBmADQAYQAxADIAOABkADAAYQBhADIAYwA2
AGMAOQA2ADkAZABjADAAOQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAMOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7241664d5a9f4a128d0aa2c6c969dc09</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">cd254dc5551e6effb94be3751f3629fe</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">1b3a74a727653088964566ba96bef1ed810319bd</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Additional]"
                      connectionManagerRefId="Package.ConnectionManagers[Additional]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump into tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Additional Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Additional Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Additional Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Clinical Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{FEAA299C-E16D-4D58-8905-445414EE13CC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clinical Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Clinical", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Clinical Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                    this.Output0Buffer.Column10 = columns.Length > 10 ? columns[10] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column10
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column9
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties.Settings.get_Default():SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties.Sett" +
    "ings")]

namespace SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6a35b8f21aef4e5cbdb9dacede0ebf00.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ab8f5130-6199-4710-8a04-98f580896ecf}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6a35b8f21aef4e5cbdb9dacede0ebf00</RootNamespace>
    <AssemblyName>SC_6a35b8f21aef4e5cbdb9dacede0ebf00</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_6a35b8f21aef4e5cbdb9dacede0ebf00" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_6a35b8f21aef4e5cbdb9dacede0ebf00</msb:CodeName>
		<msb:DisplayName>SC_6a35b8f21aef4e5cbdb9dacede0ebf00</msb:DisplayName>
		<msb:ProjectId>{5A40AEFF-34B4-4C35-B179-5FA2D5CBF372}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_6a35b8f21aef4e5cbdb9dacede0ebf00.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6a35b8f21aef4e5cbdb9dacede0ebf00")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_6a35b8f21aef4e5cbdb9dacede0ebf00")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6a35b8f21aef4e5cbdb9dacede0ebf00.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6a35b8f21aef4e5cbdb9dacede0ebf00.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAORZG1gAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAApjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ7AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
OwAAAAAAAEgAAAACAAUA8CQAAKwVAAABAAAAAAAAAJw6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8mAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAGcBAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4RAEAAAJ7AwAABBY+HgEAAAZvFQAAChY+EgEAAAJ7BgAABG8dAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabxsAAAYCewYAAAQHjmkXMAMUKwMHF5pvGQAABgJ7BgAABAeOaRgw
AxQrAwcYmm8XAAAGAnsGAAAEB45pGTADFCsDBxmabxUAAAYCewYAAAQHjmkaMAMUKwMHGppvEwAA
BgJ7BgAABAeOaRswAxQrAwcbmm8RAAAGAnsGAAAEB45pHDADFCsDBxyabw8AAAYCewYAAAQHjmkd
MAMUKwMHHZpvDQAABgJ7BgAABAeOaR4wAxQrAwcemm8LAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
CQAABgJ7BgAABAeOaR8KMAMUKwQHHwqabwcAAAYCAnsDAAAEF1h9AwAABAJ7AQAABG8UAAAKCgY6
tv7//ypKAigXAAAKAnsBAAAEbxgAAAoqOgIXfQMAAAQCKCAAAAYqKgIDBAUoGQAACiomAhYDKBoA
AAoqWgMsCAIWKBsAAAoqcgUAAHBzHAAACnomAhcDKBoAAAoqWgMsCAIXKBsAAAoqcgUAAHBzHAAA
CnomAhgDKBoAAAoqWgMsCAIYKBsAAAoqcgUAAHBzHAAACnomAhkDKBoAAAoqWgMsCAIZKBsAAAoq
cgUAAHBzHAAACnomAhoDKBoAAAoqWgMsCAIaKBsAAAoqcgUAAHBzHAAACnomAhsDKBoAAAoqWgMs
CAIbKBsAAAoqcgUAAHBzHAAACnomAhwDKBoAAAoqWgMsCAIcKBsAAAoqcgUAAHBzHAAACnomAh0D
KBoAAAoqWgMsCAIdKBsAAAoqcgUAAHBzHAAACnomAh4DKBoAAAoqWgMsCAIeKBsAAAoqcgUAAHBz
HAAACnoqAh8JAygaAAAKKl4DLAkCHwkoGwAACipyBQAAcHMcAAAKeioCHwoDKBoAAAoqXgMsCQIf
CigbAAAKKnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcyUAAAZ9
BAAABAICcycAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8eAAAGAhR9BgAABCoAAAATMAUASQAA
AAMAABEWCisuBAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAKDgRzBgAABn0GAAAEBhdYCgYD
Ms4CbyQAAAYCbyEAAAYCKCIAAAYqOgIoIwAACgIDfQcAAAQqggJ7BwAABG8kAAAKbyUAAApytAAA
cG8mAAAKbycAAAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkAAAQtHnLKAABw0AcAAAIoKAAA
Cm8pAAAKcyoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAigrAAAKKi5zLQAA
BoALAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAhAgAACN+AADwCAAA
YAkAACNTdHJpbmdzAAAAAFASAAA8AQAAI1VTAIwTAAAQAAAAI0dVSUQAAACcEwAAEAIAACNCbG9i
AAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAACwAAAC4AAAAhAAAAKwAAABAA
AAADAAAABAAAABoAAAAbAAAAAQAAAAYAAAABAAAAAABOBAEAAAAAAAYALwN3BwYAwwN3BwYAewJk
Bw8A6wcAAAYAqAKtBQYAEgOtBQYA8wKtBQYAqgOtBQYATwOtBQYAaAOtBQYAvwKtBQYA2gL+AwoA
gwPCAQYAhQYtAQYAnghZBQ4AVgD8BgoAxQbCARIAtgbCAQoAJgbCAQoA5AjCAQYAXgJkBwYA1gaX
BwYAGgaMBRYALgI4BBYAjwI4BBYAEAJ3BQYAQwJ3BwYAGARZBQYAkgYtAQYAAAZZBRoAAQAkBxoA
GgAkBxoAPQAkBwYA4wFZBQYAegFZBQYAVQmtBQAAAAAYAQAAAAABAAEAAQAQAGwFAAAQAAEAAQAB
ABAAqAYAAEUABAAGAAEAEADGCAAAUQAEACAAAQAQAGgIAAA9AAcAJQABABAAKQgAAD0ACAAnAAAA
EACeB/oHPQAJACgAAAEQAFgI+gdpAAsALAABAJ0GpgABAB8EqgABADYErQAGAGgIsAAGACkItAAG
AKgGuAABANQIvAABANQIvAARAGAFwAARAAACxAARAGoByABQIAAAAADGAGEIzAABAHsgAAAAAMYA
4QMGAAIAlCAAAAAAxgCKCAYAAgAHIgAAAADGAOwDBgACABoiAAAAAIYYTQcGAAIAKSIAAAAAhhhN
B0EAAgA0IgAAAACGCJMAEAAFAD4iAAAAAIYIdgTRAAYAVSIAAAAAhggMARAABwBfIgAAAACGCDUF
0QAIAHYiAAAAAIYIAAEQAAkAgCIAAAAAhggiBdEACgCXIgAAAACGCPQAEAALAKEiAAAAAIYIDwXR
AAwAuCIAAAAAhgjoABAADQDCIgAAAACGCPwE0QAOANkiAAAAAIYI3AAQAA8A4yIAAAAAhgjpBNEA
EAD6IgAAAACGCNAAEAARAAQjAAAAAIYI1gTRABIAGyMAAAAAhgjEABAAEwAlIwAAAACGCMME0QAU
ADwjAAAAAIYIuAAQABUARiMAAAAAhgiwBNEAFgBdIwAAAACGCKwAEAAXAGgjAAAAAIYInQTRABgA
gCMAAAAAhgigABAAGQCLIwAAAACGCIoE0QAaAKMjAAAAAIYAPgkGABsAqyMAAAAAhgClCAYAGwCz
IwAAAACGAKgIUQAbALsjAAAAAIYYTQcGABsA2yMAAAAAxgF8CAYAGwDdIwAAAACBAFYBBgAbAPwj
AAAAAMYAMgnWABsA2yMAAAAAxgGKCAYAHwBRJAAAAACGGE0H4gAfAGAkAAAAAIYI3wV4ACAAgSQA
AAAAhhhNB+IAIACQJAAAAACDGE0HBgAhAJgkAAAAAJMI0gboACEAxCQAAAAAkwjoAe0AIQDLJAAA
AACTCPQB8gAhANMkAAAAAJYIugj4ACIA2iQAAAAAhhhNBwYAIgDiJAAAAACRGFMH/QAiAAAAAQCh
BQAAAQDLBgAAAgAzCAAAAwA0BgAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAA
AQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4
AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQD4AwAAAQCCCAAAAgBaBwAAAwB0CAAA
BAA0BgAAAQDqCAAAAQDqCAAAAQD4AwkATQcBABEATQcGABkATQcKACkATQcQADEATQcQADkATQcQ
AEEATQcQAEkATQcQAFEATQcQAFkATQcQAGEATQcQAGkATQcGAKkATQcGAMkATQcVANkATQcGAIEA
7gUgAKEA4QMGAHEATQcQAOEARQktAOkAuQEyAOEAKwQ2AOEAtAg6AKEA7AMGAOkAKAIGAIkATQdB
AIkAUAVLAIkASAUBAPEATQcQAIkAPgkGAIkApQgGAIkAqAhRAKEATQcGAKEAIQFZAKEARwhgAHkA
TQcGAKEANwFmAPkAvwVrAAEBngFxAAkB5gZ4ABEBjAF9ABEBUQmGALEATQeMANEATQcGAC4ACwAd
AS4AEwAmAS4AGwBFAS4AIwBOAS4AKwB3AS4AMwB3AS4AOwB9AS4AQwBOAS4ASwCWAS4AUwB3AS4A
WwDAAUMAYwAKAuMAawAKAmEBewAKAgkDcwBFASkDcwBFARsAJQBVAAMAAQAFABcABwAYAAgAGgAA
AJcAAQEAAHoEBQEAABABAQEAADkFBQEAAAQBAQEAACYFBQEAAPgAAQEAABMFBQEAAOwAAQEAAAAF
BQEAAOAAAQEAAO0EBQEAANQAAQEAANoEBQEAAMgAAQEAAMcEBQEAALwAAQEAALQEBQEAALAAAQEA
AKEEBQEAAKQAAQEAAI4EBQEAAPUFCQEAANYGDgEAAAgCEwEAAL4IGAEBAAcAAwABAAgABQABAAkA
BwABAAoACQABAAsACwABAAwADQABAA0ADwABAA4AEQABAA8AEwABABAAFQABABEAFwABABIAGQAB
ABMAGwABABQAHQABABUAHwABABYAIQABABcAIwABABgAJQABABkAJwABABoAKQABABsAKwABABwA
LQACACYALwACACkAMQACACoAMwABACsAMwACACwANQAEgAAAAQAAAAAAAAAAAAAAAABvAAAABAAA
AAAAAAAAAAAAlABNAQAAAAANAAAAAAAAAAAAAACdAPQIAAAAAA0AAAAAAAAAAAAAAJ0APgYAAAAA
DQAAAAAAAAAAAAAAnQARCQAAAAAEAAAAAAAAAAAAAACUAFkFAAAAAA0AAAAAAAAAAAAAAJ0AYQYA
AAAAAAAAAAEAAACoBwAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1lQ29u
bmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0
aW9uTWFuYWdlcjEwMABTQ182YTM1YjhmMjFhZWY0ZTVjYmRiOWRhY2VkZTBlYmYwMABzZXRfQ29s
dW1uMTAAc2V0X0NvbHVtbjAAc2V0X0NvbHVtbjEAc2V0X0NvbHVtbjIAc2V0X0NvbHVtbjMAc2V0
X0NvbHVtbjQAc2V0X0NvbHVtbjUAc2V0X0NvbHVtbjYAc2V0X0NvbHVtbjcAc2V0X0NvbHVtbjgA
c2V0X0NvbHVtbjkAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAGdldF9Db21wb25lbnRN
ZXRhRGF0YQBtc2NvcmxpYgBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJbnN0YW5jZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFt
ZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBD
bG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFNyY0ZpbGVQYXRo
AGdldF9MZW5ndGgAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNmEzNWI4ZjIxYWVmNGU1Y2Jk
YjlkYWNlZGUwZWJmMDAuZGxsAHNldF9Db2x1bW4xMF9Jc051bGwAc2V0X0NvbHVtbjBfSXNOdWxs
AHNldF9Db2x1bW4xX0lzTnVsbABzZXRfQ29sdW1uMl9Jc051bGwAc2V0X0NvbHVtbjNfSXNOdWxs
AHNldF9Db2x1bW40X0lzTnVsbABzZXRfQ29sdW1uNV9Jc051bGwAc2V0X0NvbHVtbjZfSXNOdWxs
AHNldF9Db2x1bW43X0lzTnVsbABzZXRfQ29sdW1uOF9Jc051bGwAc2V0X0NvbHVtbjlfSXNOdWxs
AFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfQ29ubmVjdGlvbgBBY3F1
aXJlQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIA
dGV4dFJlYWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3Jh
cHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNmEzNWI4ZjIxYWVmNGU1
Y2JkYjlkYWNlZGUwZWJmMDAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDXzZhMzViOGYyMWFlZjRlNWNiZGI5ZGFjZWRlMGViZjAwLlByb3BlcnRpZXMAVmFy
aWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBBY3F1
aXJlQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MA
T2JqZWN0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFy
ZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AEFkZFJvdwBUb0No
YXJBcnJheQBnZXRfQXNzZW1ibHkAAAAAAywAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0
AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMA
cwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBu
AHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAVQwBvAG4AbgBlAGMAdABpAG8AbgAAcVMA
QwBfADYAYQAzADUAYgA4AGYAMgAxAGEAZQBmADQAZQA1AGMAYgBkAGIAOQBkAGEAYwBlAGQAZQAw
AGUAYgBmADAAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAeaRp
+kqQ1kiicRRTuckd0wAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQQHARJBBCABHBwHBwMOHQ4d
AwQgAB0DAyAADgMgAAgGIAEdDh0DCSADARJJHQgSTQUgAgEIHAMgAAIDBwEIBgACCBJNDgUgAR0I
CAQgABJ9BSAAEoCBBiABEoCFDgQgABJBCAABEoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkI
iYRdzYCAzJEDBhI5AgYOAgYIAwYSFAMGEhgDBhIMAwYSUQMGElkDBhJdAwYSIAQgAQEcBCABAQIL
IAQBCB0IHRJJEk0FIAEBElEEAAASWQQAABJdBQABARJdBAAAEiADAAABAygADgMoAAIEKAASQQQI
ABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU0NfNmEzNWI4ZjIxYWVmNGU1Y2JkYjlkYWNlZGUwZWJmMDAAAAUBAAAAABgBABNV
bml2ZXJzaXR5IG9mIExlZWRzAAApAQAkQ29weXJpZ2h0IEAgVW5pdmVyc2l0eSBvZiBMZWVkcyAy
MDE2AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8OwAAAAAAAAAAAACWOwAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAADgEAAAAAAAAAAAAADgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB0AwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAASAAUAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABVAG4AaQB2AGUAcgBzAGkAdAB5ACAAbwBmACAATABlAGUAZABzAAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADYAYQAzADUAYgA4AGYAMgAx
AGEAZQBmADQAZQA1AGMAYgBkAGIAOQBkAGEAYwBlAGQAZQAwAGUAYgBmADAAMAAAADAACAABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBu
AGEAbABOAGEAbQBlAAAAUwBDAF8ANgBhADMANQBiADgAZgAyADEAYQBlAGYANABlADUAYwBiAGQA
YgA5AGQAYQBjAGUAZABlADAAZQBiAGYAMAAwAC4AZABsAGwAAABuACUAAQBMAGUAZwBhAGwAQwBv
AHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABVAG4AaQB2AGUAcgBzAGkA
dAB5ACAAbwBmACAATABlAGUAZABzACAAMgAwADEANgAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8ANgBhADMANQBiADgAZgAyADEAYQBlAGYANABlADUAYwBiAGQAYgA5AGQAYQBj
AGUAZABlADAAZQBiAGYAMAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADYAYQAzADUAYgA4AGYAMgAxAGEAZQBmADQAZQA1AGMAYgBkAGIAOQBkAGEAYwBl
AGQAZQAwAGUAYgBmADAAMAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACoOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_6a35b8f21aef4e5cbdb9dacede0ebf00</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">191266f821201775e43a390d025a70b5</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">bb8354a1fb3f3a742ab24f8c8964214161ba5649</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Clinical]"
                      connectionManagerRefId="Package.ConnectionManagers[Clinical]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column10]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column10]"
                          name="Column10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column10]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column10]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",11),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",11),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Clinical Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Clinical Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Consultation Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{08984af0-c9af-4f28-99f9-0d8c877be12e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consultation Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Consultation", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Consultaion Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column6
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties.Settings.get_Default():SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties.Sett" +
    "ings")]

namespace SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_a15c70b2f9aa43b5b32c573ae02263c4</msb:CodeName>
		<msb:DisplayName>SC_a15c70b2f9aa43b5b32c573ae02263c4</msb:DisplayName>
		<msb:ProjectId>{E878DF02-91D0-4A8A-927C-D74BC4EBA916}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a15c70b2f9aa43b5b32c573ae02263c4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a15c70b2f9aa43b5b32c573ae02263c4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_a15c70b2f9aa43b5b32c573ae02263c4")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a15c70b2f9aa43b5b32c573ae02263c4.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{66c33c2d-8e69-4f04-b4f7-6aa898198d56}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a15c70b2f9aa43b5b32c573ae02263c4</RootNamespace>
    <AssemblyName>SC_a15c70b2f9aa43b5b32c573ae02263c4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a15c70b2f9aa43b5b32c573ae02263c4" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a15c70b2f9aa43b5b32c573ae02263c4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a15c70b2f9aa43b5b32c573ae02263c4.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPdmG1gAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAPjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOw4AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
OQAAAAAAAEgAAAACAAUACCQAACwUAAABAAAAAAAAADQ4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8eAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAAcBAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo45AAAAAJ7AwAABBY+vgAAAAZvFQAAChY+sgAAAAJ7BgAABG8VAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabxMAAAYCewYAAAQHjmkXMAMUKwMHF5pvEQAABgJ7BgAABAeOaRgw
AxQrAwcYmm8PAAAGAnsGAAAEB45pGTADFCsDBxmabw0AAAYCewYAAAQHjmkaMAMUKwMHGppvCwAA
BgJ7BgAABAeOaRswAxQrAwcbmm8JAAAGAnsGAAAEB45pHDADFCsDBxyabwcAAAYCAnsDAAAEF1h9
AwAABAJ7AQAABG8UAAAKCgY6Fv///ypKAigXAAAKAnsBAAAEbxgAAAoqOgIXfQMAAAQCKBgAAAYq
KgIDBAUoGQAACiomAhYDKBoAAAoqWgMsCAIWKBsAAAoqcgUAAHBzHAAACnomAhcDKBoAAAoqWgMs
CAIXKBsAAAoqcgUAAHBzHAAACnomAhgDKBoAAAoqWgMsCAIYKBsAAAoqcgUAAHBzHAAACnomAhkD
KBoAAAoqWgMsCAIZKBsAAAoqcgUAAHBzHAAACnomAhoDKBoAAAoqWgMsCAIaKBsAAAoqcgUAAHBz
HAAACnomAhsDKBoAAAoqWgMsCAIbKBsAAAoqcgUAAHBzHAAACnomAhwDKBoAAAoqWgMsCAIcKBsA
AAoqcgUAAHBzHAAACnoeAigdAAAKKh4CKB4AAAoqHgIoHwAACip+AiggAAAKAgJzHQAABn0EAAAE
AgJzHwAABn0FAAAEKgYqbgJ7BgAABCwSAnsGAAAEbxYAAAYCFH0GAAAEKgAAABMwBQBJAAAAAwAA
ERYKKy4EBpQOBHKiAABwKCEAAAozGQIFBpoCBAaUKCIAAAoOBHMGAAAGfQYAAAQGF1gKBgMyzgJv
HAAABgJvGQAABgIoGgAABio6AigjAAAKAgN9BwAABCqCAnsHAAAEbyQAAApvJQAACnK0AABwbyYA
AApvJwAACio6AigjAAAKAgN9CAAABCoeAigjAAAKKq5+CQAABC0ecsoAAHDQBwAAAigoAAAKbykA
AApzKgAACoAJAAAEfgkAAAQqGn4KAAAEKh4CgAoAAAQqGn4LAAAEKh4CKCsAAAoqLnMlAAAGgAsA
AAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACEBwAAI34AAPAHAADgCAAA
I1N0cmluZ3MAAAAA0BAAADwBAAAjVVMADBIAABAAAAAjR1VJRAAAABwSAAAQAgAAI0Jsb2IAAAAA
AAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAJAAAAAgAAAALAAAAJgAAABkAAAArAAAAEAAAAAMA
AAAEAAAAEgAAABMAAAABAAAABgAAAAEAAAAAAB0EAQAAAAAABgD+AvkGBgCSA/kGBgBKAuYGDwBt
BwAABgB3Ai8FBgDhAi8FBgDCAi8FBgB5Ay8FBgAeAy8FBgA3Ay8FBgCOAi8FBgCpAs0DCgBSA5EB
BgAHBvwABgAgCNsEDgBWAH4GCgBHBpEBEgA4BpEBCgCoBZEBCgBmCJEBBgAtAuYGBgBYBhkHBgCc
BQ4FFgD9AQcEFgBeAgcEFgDfAfkEBgASAvkGBgDnA9sEBgAUBvwABgCCBdsEGgABAKYGGgAaAKYG
GgA9AKYGBgCyAdsEBgBJAdsEBgDXCC8FAAAAAOcAAAAAAAEAAQABABAA7gQAABAAAQABAAEAEAAq
BgAARQAEAAYAAQAQAEgIAABRAAQAGAABABAA6gcAAD0ABwAdAAEAEACrBwAAPQAIAB8AAAAQACAH
fAc9AAkAIAAAARAA2gd8B2kACwAkAAEAHwamAAEA7gOqAAEABQStAAYA6gewAAYAqwe0AAYAKga4
AAEAVgi8AAEAVgi8ABEA4gTAABEAzwHEABEAOQHIAFAgAAAAAMYA4wfMAAEAeyAAAAAAxgCwAwYA
AgCUIAAAAADGAAwIBgACAKchAAAAAMYAuwMGAAIAuiEAAAAAhhjPBgYAAgDJIQAAAACGGM8GQQAC
ANQhAAAAAIYI2wAQAAUA3iEAAAAAhgi3BNEABgD1IQAAAACGCM8AEAAHAP8hAAAAAIYIpATRAAgA
FiIAAAAAhgjDABAACQAgIgAAAACGCJEE0QAKADciAAAAAIYIkwAQAAsAQSIAAAAAhgh+BNEADABY
IgAAAACGCIcAEAANAGIiAAAAAIYIawTRAA4AeSIAAAAAhgh7ABAADwCDIgAAAACGCFgE0QAQAJoi
AAAAAIYIbwAQABEApCIAAAAAhghFBNEAEgC7IgAAAACGAMAIBgATAMMiAAAAAIYAJwgGABMAyyIA
AAAAhgAqCFEAEwDTIgAAAACGGM8GBgATAPMiAAAAAMYB/gcGABMA9SIAAAAAgQAlAQYAEwAUIwAA
AADGALQI1gATAPMiAAAAAMYBDAgGABcAaSMAAAAAhhjPBuIAFwB4IwAAAACGCGEFeAAYAJkjAAAA
AIYYzwbiABgAqCMAAAAAgxjPBgYAGQCwIwAAAACTCFQG6AAZANwjAAAAAJMItwHtABkA4yMAAAAA
kwjDAfIAGQDrIwAAAACWCDwI+AAaAPIjAAAAAIYYzwYGABoA+iMAAAAAkRjVBv0AGgAAAAEAIwUA
AAEATQYAAAIAtQcAAAMAtgUAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEA
xwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEAxwMAAAEABAgAAAIA3AYA
AAMA9gcAAAQAtgUAAAEAbAgAAAEAbAgAAAEAxwMJAM8GAQARAM8GBgAZAM8GCgApAM8GEAAxAM8G
EAA5AM8GEABBAM8GEABJAM8GEABRAM8GEABZAM8GEABhAM8GEABpAM8GBgCpAM8GBgDJAM8GFQDZ
AM8GBgCBAHAFIAChALADBgBxAM8GEADhAMcILQDpAIgBMgDhAPoDNgDhADYIOgChALsDBgDpAPcB
BgCJAM8GQQCJANIESwCJAMoEAQDxAM8GEACJAMAIBgCJACcIBgCJACoIUQChAM8GBgChAPAAWQCh
AMkHYAB5AM8GBgChAAYBZgD5AEEFawABAW0BcQAJAWgGeAARAVsBfQARAdMIhgCxAM8GjADRAM8G
BgAuAAsAHQEuABMAJgEuABsARQEuACMATgEuACsAdwEuADMAdwEuADsAfQEuAEMATgEuAEsAlgEu
AFMAdwEuAFsAwAFDAGMACgLjAGsACgJhAXsACgIJAnMARQEpAnMARQEbACUAVQADAAEABQAPAAcA
EAAIABIAAADfAAEBAAC7BAUBAADTAAEBAACoBAUBAADHAAEBAACVBAUBAACXAAEBAACCBAUBAACL
AAEBAABvBAUBAAB/AAEBAABcBAUBAABzAAEBAABJBAUBAAB3BQkBAABYBg4BAADXARMBAABACBgB
AQAHAAMAAQAIAAUAAQAJAAcAAQAKAAkAAQALAAsAAQAMAA0AAQANAA8AAQAOABEAAQAPABMAAQAQ
ABUAAQARABcAAQASABkAAQATABsAAQAUAB0AAgAeAB8AAgAhACEAAgAiACMAAQAjACMAAgAkACUA
BIAAAAEAAAAAAAAAAAAAAAAAnwAAAAQAAAAAAAAAAAAAAJQAHAEAAAAADQAAAAAAAAAAAAAAnQB2
CAAAAAANAAAAAAAAAAAAAACdAMAFAAAAAA0AAAAAAAAAAAAAAJ0AkwgAAAAABAAAAAAAAAAAAAAA
lADbBAAAAAANAAAAAAAAAAAAAACdAOMFAAAAAAAAAAABAAAAKgcAAAAAAElEVFNDb21wb25lbnRN
ZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1l
Q29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAc2V0X0NvbHVtbjAAc2V0X0Nv
bHVtbjEAc2V0X0NvbHVtbjIAc2V0X0NvbHVtbjMAU0NfYTE1YzcwYjJmOWFhNDNiNWIzMmM1NzNh
ZTAyMjYzYzQAc2V0X0NvbHVtbjQAc2V0X0NvbHVtbjUAc2V0X0NvbHVtbjYAPE1vZHVsZT4AR2V0
T3V0cHV0SUQAU3lzdGVtLklPAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBNYXJrT3V0
cHV0c0ZpbmlzaGVkAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBSZWFkTGluZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAU3RyaW5nAFNyY0ZpbGVQYXRoAGdldF9MZW5ndGgAaQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU0NfYTE1YzcwYjJmOWFhNDNiNWIzMmM1NzNhZTAyMjYzYzQuZGxsAHNldF9D
b2x1bW4wX0lzTnVsbABzZXRfQ29sdW1uMV9Jc051bGwAc2V0X0NvbHVtbjJfSXNOdWxsAHNldF9D
b2x1bW4zX0lzTnVsbABzZXRfQ29sdW1uNF9Jc051bGwAc2V0X0NvbHVtbjVfSXNOdWxsAHNldF9D
b2x1bW42X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRN
YWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFRyYW5zYWN0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AZ2V0X0Nv
bm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1
bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN0cmVhbVJlYWRl
cgBUZXh0UmVhZGVyAHRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Ex
NWM3MGIyZjlhYTQzYjViMzJjNTczYWUwMjI2M2M0LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19hMTVjNzBiMmY5YWE0M2I1YjMyYzU3M2FlMDIyNjNjNC5Q
cm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMA
U2V0dGluZ3MAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVO
ZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNl
cnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1
dABBZGRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AAADLAAAgJtJAHMATgB1AGwAbAAgAHAA
cgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABz
AGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwA
dQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABVDAG8AbgBuAGUAYwB0
AGkAbwBuAABxUwBDAF8AYQAxADUAYwA3ADAAYgAyAGYAOQBhAGEANAAzAGIANQBiADMAMgBjADUA
NwAzAGEAZQAwADIAMgA2ADMAYwA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAD/RTHpPpryR7e2AtZVyniBAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhBAcBEkEE
IAEcHAcHAw4dDh0DBCAAHQMDIAAOAyAACAYgAR0OHQMJIAMBEkkdCBJNBSACAQgcAyAAAgMHAQgG
AAIIEk0OBSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEkEIAAESgIkRgI0FIAASgJEHIAIBDhKA
kQi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBg4CBggDBhIUAwYSGAMGEgwDBhJRAwYSWQMGEl0DBhIg
BCABARwEIAEBAgsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0FAAEBEl0EAAASIAMAAAEDKAAO
AygAAgQoABJBBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ19hMTVjNzBiMmY5YWE0M2I1YjMyYzU3M2FlMDIyNjNjNAAA
BQEAAAAAGAEAE1VuaXZlcnNpdHkgb2YgTGVlZHMAACkBACRDb3B5cmlnaHQgQCBVbml2ZXJzaXR5
IG9mIExlZWRzIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABQ5AAAA
AAAAAAAAAC45AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgOQAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAA4BAAAAAAAAAAAAAA4BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEmAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAdAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAAEgAFAABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAVQBuAGkAdgBlAHIAcwBpAHQAeQAgAG8AZgAgAEwAZQBlAGQAcwAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBhADEANQBjADcAMABiADIA
ZgA5AGEAYQA0ADMAYgA1AGIAMwAyAGMANQA3ADMAYQBlADAAMgAyADYAMwBjADQAAAAwAAgAAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIA
bgBhAGwATgBhAG0AZQAAAFMAQwBfAGEAMQA1AGMANwAwAGIAMgBmADkAYQBhADQAMwBiADUAYgAz
ADIAYwA1ADcAMwBhAGUAMAAyADIANgAzAGMANAAuAGQAbABsAAAAbgAlAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAVQBuAGkAdgBlAHIAcwBp
AHQAeQAgAG8AZgAgAEwAZQBlAGQAcwAgADIAMAAxADYAAAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAQwBfAGEAMQA1AGMANwAwAGIAMgBmADkAYQBhADQAMwBiADUAYgAzADIAYwA1ADcA
MwBhAGUAMAAyADIANgAzAGMANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAEMAXwBhADEANQBjADcAMABiADIAZgA5AGEAYQA0ADMAYgA1AGIAMwAyAGMANQA3ADMA
YQBlADAAMgAyADYAMwBjADQAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAQDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a15c70b2f9aa43b5b32c573ae02263c4</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">636fa8118896a805ef361bacf27a9c42</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">a714d96247a4d76c5310502779bf004cc2424b03</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Consultation]"
                      connectionManagerRefId="Package.ConnectionManagers[Consultation]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Consultation Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Consultation Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Define Clinical Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{24141111-5EA9-4BAB-8D73-63F3833B96D8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Define Clinical Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">(FINDSTRING( @[User::varFileName] , "Define_", 1 ) == 0)
||
(FINDSTRING( @[User::varFileName] , "_Clinical", 1 ) == 0)</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="DefineClinical Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_edac02e05e5a41eca155299919761545.Properties.Settings.get_Default():SC_edac02e05e5a41eca155299919761545.Properties.Sett" +
    "ings")]

namespace SC_edac02e05e5a41eca155299919761545.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_edac02e05e5a41eca155299919761545.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EA8E994C-58F0-49E8-8F9E-6A961DAA3C11}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_edac02e05e5a41eca155299919761545</RootNamespace>
    <AssemblyName>SC_edac02e05e5a41eca155299919761545</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_edac02e05e5a41eca155299919761545</msb:CodeName>
		<msb:DisplayName>SC_edac02e05e5a41eca155299919761545</msb:DisplayName>
		<msb:ProjectId>{A455B214-305B-4EF5-B820-7DB97E3FC076}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_edac02e05e5a41eca155299919761545.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_edac02e05e5a41eca155299919761545")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_edac02e05e5a41eca155299919761545")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_edac02e05e5a41eca155299919761545.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_edac02e05e5a41eca155299919761545.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_edac02e05e5a41eca155299919761545.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_edac02e05e5a41eca155299919761545.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_edac02e05e5a41eca155299919761545.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_edac02e05e5a41eca155299919761545.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD0MG1gAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA2jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIg2AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
NgAAAAAAAEgAAAACAAUAICMAALASAAABAAAAAAAAANA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8WAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAKUAAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4ggAAAAJ7AwAABBYxXwZvFQAAChYxVgJ7BgAABG8NAAAGBghvFgAACgsCewYA
AAQHji0DFCsDBxaabwcAAAYCewYAAAQHjmkXMAMUKwMHF5pvCQAABgJ7BgAABAeOaRgwAxQrAwcY
mm8LAAAGAgJ7AwAABBdYfQMAAAQCewEAAARvFAAACgoGOnj///8qSgIoFwAACgJ7AQAABG8YAAAK
KjoCF30DAAAEAigQAAAGKioCAwQFKBkAAAoqJgIWAygaAAAKKloDLAgCFigbAAAKKnIFAABwcxwA
AAp6JgIXAygaAAAKKloDLAgCFygbAAAKKnIFAABwcxwAAAp6JgIYAygaAAAKKloDLAgCGCgbAAAK
KnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcxUAAAZ9BAAABAIC
cxcAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8OAAAGAhR9BgAABCoAEzAFAEkAAAADAAARFgor
LgQGlA4EcqIAAHAoIQAACjMZAgUGmgIEBpQoIgAACg4EcwYAAAZ9BgAABAYXWAoGAzLOAm8UAAAG
Am8RAAAGAigSAAAGKjoCKCMAAAoCA30HAAAEKoICewcAAARvJAAACm8lAAAKcrQAAHBvJgAACm8n
AAAKKjoCKCMAAAoCA30IAAAEKh4CKCMAAAoqrn4JAAAELR5yygAAcNAHAAACKCgAAApvKQAACnMq
AAAKgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIoKwAACioucx0AAAaACwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQGAAAjfgAA8AYAAGQIAAAjU3Ry
aW5ncwAAAABUDwAAPAEAACNVUwCQEAAAEAAAACNHVUlEAAAAoBAAABACAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAsAAAAeAAAAEQAAACsAAAAQAAAAAwAAAAQA
AAAKAAAACwAAAAEAAAAGAAAAAQAAAAAA7QMBAAAAAAAGAM4CfQYGAGIDfQYGABoCagYPAPEGAAAG
AEcCswQGALECswQGAJICswQGAEkDswQGAO4CswQGAAcDswQGAF4CswQGAHkCnQMKACIDYQEGAIsF
zAAGAKQHXwQOAFYAAgYKAMsFYQESALwFYQEKACwFYQEKAOoHYQEGAP0BagYGANwFnQYGACAFkgQW
AM0B1wMWAC4C1wMWAK8BfQQGAOIBfQYGALcDXwQGAJgFzAAGAAYFXwQaAAEAKgYaABoAKgYaAD0A
KgYGAIIBXwQGABkBXwQGAFsIswQAAAAAtwAAAAAAAQABAAEAEAByBAAAEAABAAEAAQAQAK4FAABF
AAQABgABABAAzAcAAFEABAAQAAEAEABuBwAAPQAHABUAAQAQAC8HAAA9AAgAFwAAABAApAYABz0A
CQAYAAABEABeBwAHaQALABwAAQCjBaYAAQC+A6oAAQDVA60ABgBuB7AABgAvB7QABgCuBbgAAQDa
B7wAAQDaB7wAEQBmBMAAEQCfAcQAEQAJAcgAUCAAAAAAxgBnB8wAAQB7IAAAAADGAIADBgACAJQg
AAAAAMYAkAcGAAIARSEAAAAAxgCLAwYAAgBYIQAAAACGGFMGBgACAGchAAAAAIYYUwZBAAIAciEA
AAAAhghvABAABQB8IQAAAACGCBUE0QAGAJMhAAAAAIYIewAQAAcAnSEAAAAAhggoBNEACAC0IQAA
AACGCIcAEAAJAL4hAAAAAIYIOwTRAAoA1SEAAAAAhgBECAYACwDdIQAAAACGAKsHBgALAOUhAAAA
AIYArgdRAAsA7SEAAAAAhhhTBgYACwANIgAAAADGAYIHBgALAA8iAAAAAIEA9QAGAAsALCIAAAAA
xgA4CNYACwANIgAAAADGAZAHBgAPAIEiAAAAAIYYUwbiAA8AkCIAAAAAhgjlBHgAEACxIgAAAACG
GFMG4gAQAMAiAAAAAIMYUwYGABEAyCIAAAAAkwjYBegAEQD0IgAAAACTCIcB7QARAPsiAAAAAJMI
kwHyABEAAyMAAAAAlgjAB/gAEgAKIwAAAACGGFMGBgASABIjAAAAAJEYWQb9ABIAAAABAKcEAAAB
ANEFAAACADkHAAADADoFAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAIgH
AAACAGAGAAADAHoHAAAEADoFAAABAPAHAAABAPAHAAABAJcDCQBTBgEAEQBTBgYAGQBTBgoAKQBT
BhAAMQBTBhAAOQBTBhAAQQBTBhAASQBTBhAAUQBTBhAAWQBTBhAAYQBTBhAAaQBTBgYAqQBTBgYA
yQBTBhUA2QBTBgYAgQD0BCAAoQCAAwYAcQBTBhAA4QBLCC0A6QBYATIA4QDKAzYA4QC6BzoAoQCL
AwYA6QDHAQYAiQBTBkEAiQBWBEsAiQBOBAEA8QBTBhAAiQBECAYAiQCrBwYAiQCuB1EAoQBTBgYA
oQDAAFkAoQBNB2AAeQBTBgYAoQDWAGYA+QDFBGsAAQE9AXEACQHsBXgAEQErAX0AEQFXCIYAsQBT
BowA0QBTBgYALgALAB0BLgATACYBLgAbAEUBLgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4B
LgBLAJYBLgBTAHcBLgBbAMABQwBjAAoC4wBrAAoCCQFzAEUBKQFzAEUBYQF7AAoCGwAlAFUAAwAB
AAUABwAHAAgACAAKAAAAcwABAQAAGQQFAQAAfwABAQAALAQFAQAAiwABAQAAPwQFAQAA+wQJAQAA
3AUOAQAApwETAQAAxAcYAQEABwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAIAFgAP
AAIAGQARAAIAGgATAAEAGwATAAIAHAAVAASAAAABAAAAAAAAAAAAAAAAAJMAAAAEAAAAAAAAAAAA
AACUAOwAAAAAAA0AAAAAAAAAAAAAAJ0A+gcAAAAADQAAAAAAAAAAAAAAnQBEBQAAAAANAAAAAAAA
AAAAAACdABcIAAAAAAQAAAAAAAAAAAAAAJQAXwQAAAAADQAAAAAAAAAAAAAAnQBnBQAAAAAAAAAA
AQAAAK4GAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAHNldF9Db2x1bW4wAHNldF9Db2x1bW4xAHNldF9Db2x1bW4yAFNDX2VkYWMwMmUwNWU1
YTQxZWNhMTU1Mjk5OTE5NzYxNTQ1ADxNb2R1bGU+AEdldE91dHB1dElEAFN5c3RlbS5JTwBnZXRf
Q29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABkZWZhdWx0SW5z
dGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0UnVudGltZUNvbm5l
Y3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlw
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBT
cmNGaWxlUGF0aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2VkYWMwMmUw
NWU1YTQxZWNhMTU1Mjk5OTE5NzYxNTQ1LmRsbABzZXRfQ29sdW1uMF9Jc051bGwAc2V0X0NvbHVt
bjFfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVX
cmFwAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAHRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlv
bk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDX2VkYWMwMmUwNWU1YTQxZWNhMTU1Mjk5OTE5NzYxNTQ1LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19lZGFjMDJlMDVlNWE0MWVjYTE1
NTI5OTkxOTc2MTU0NS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdl
dENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABn
ZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQcmltZU91dHB1dABBZGRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AAADLAAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBDAF8AZQBkAGEAYwAwADIAZQAwADUAZQA1AGEANAAx
AGUAYwBhADEANQA1ADIAOQA5ADkAMQA5ADcANgAxADUANAA1AC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAACWqVQCccwxQKeYnTQCPVPHAAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFhBAcBEkEEIAEcHAcHAw4dDh0DBCAAHQMDIAAOAyAACAYgAR0OHQMJIAMBEkkdCBJN
BSACAQgcAyAAAgMHAQgGAAIIEk0OBSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEkEIAAESgIkR
gI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBg4CBggDBhIUAwYSGAMGEgwD
BhJRAwYSWQMGEl0DBhIgBCABARwEIAEBAgsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0FAAEB
El0EAAASIAMAAAEDKAAOAygAAgQoABJBBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19lZGFjMDJlMDVlNWE0MWVjYTE1
NTI5OTkxOTc2MTU0NQAABQEAAAAAGAEAE1VuaXZlcnNpdHkgb2YgTGVlZHMAACkBACRDb3B5cmln
aHQgQCBVbml2ZXJzaXR5IG9mIExlZWRzIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAALA2AAAAAAAAAAAAAMo2AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8NgAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZQBkAGEAYwAwADIAZQAw
ADUAZQA1AGEANAAxAGUAYwBhADEANQA1ADIAOQA5ADkAMQA5ADcANgAxADUANAA1AAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwBlAGQAYQBjADAAMgBlADAANQBlADUAYQA0ADEAZQBjAGEA
MQA1ADUAMgA5ADkAOQAxADkANwA2ADEANQA0ADUALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMA
aQB0AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwBlAGQAYQBjADAAMgBlADAANQBlADUAYQA0ADEAZQBjAGEAMQA1ADUAMgA5
ADkAOQAxADkANwA2ADEANQA0ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AZQBkAGEAYwAwADIAZQAwADUAZQA1AGEANAAxAGUAYwBhADEANQA1ADIAOQA5
ADkAMQA5ADcANgAxADUANAA1AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_edac02e05e5a41eca155299919761545</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">42ef8af19398b7c5c95dde3a8886a352</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">1b4036d5e007ab14760fe27c897e94246642c530</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Define Clinical]"
                      connectionManagerRefId="Package.ConnectionManagers[Define Clinical]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column2]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split to columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Define Clinical Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Define Clinical Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Define Referral Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{feb25514-b575-4959-9630-f51a004c5215}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Define Referral Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">(FINDSTRING( @[User::varFileName] , "Define_", 1 ) == 0)
||
(FINDSTRING( @[User::varFileName] , "_Referral", 1 ) == 0)</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="DefineReferral Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
    IDTSConnectionManager100 connMgr = this.Connections.Connection;
    SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column0
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb583de1550d460bbbab5af08b73e074.Properties.Settings.get_Default():SC_bb583de1550d460bbbab5af08b73e074.Properties.Sett" +
    "ings")]

namespace SC_bb583de1550d460bbbab5af08b73e074.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bb583de1550d460bbbab5af08b73e074.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1476C340-C12F-44B6-AF46-E1509DAE9A67}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bb583de1550d460bbbab5af08b73e074</RootNamespace>
    <AssemblyName>SC_bb583de1550d460bbbab5af08b73e074</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_bb583de1550d460bbbab5af08b73e074</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_bb583de1550d460bbbab5af08b73e074</msb:DisplayName>
		<msb:ProjectId>{B4B3C807-0A7A-4F1E-AE82-9B548E0E874F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_bb583de1550d460bbbab5af08b73e074.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bb583de1550d460bbbab5af08b73e074")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_bb583de1550d460bbbab5af08b73e074")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb583de1550d460bbbab5af08b73e074.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb583de1550d460bbbab5af08b73e074.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb583de1550d460bbbab5af08b73e074.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bb583de1550d460bbbab5af08b73e074.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bb583de1550d460bbbab5af08b73e074.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bb583de1550d460bbbab5af08b73e074.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJ3BGVgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA2jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIg2AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
NgAAAAAAAEgAAAACAAUAICMAALASAAABAAAAAAAAANA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8WAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAKUAAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4ggAAAAJ7AwAABBYxXwZvFQAAChYxVgJ7BgAABG8NAAAGBghvFgAACgsCewYA
AAQHji0DFCsDBxaabwcAAAYCewYAAAQHjmkXMAMUKwMHF5pvCQAABgJ7BgAABAeOaRgwAxQrAwcY
mm8LAAAGAgJ7AwAABBdYfQMAAAQCewEAAARvFAAACgoGOnj///8qSgIoFwAACgJ7AQAABG8YAAAK
KjoCF30DAAAEAigQAAAGKioCAwQFKBkAAAoqJgIWAygaAAAKKloDLAgCFigbAAAKKnIFAABwcxwA
AAp6JgIXAygaAAAKKloDLAgCFygbAAAKKnIFAABwcxwAAAp6JgIYAygaAAAKKloDLAgCGCgbAAAK
KnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcxUAAAZ9BAAABAIC
cxcAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8OAAAGAhR9BgAABCoAEzAFAEkAAAADAAARFgor
LgQGlA4EcqIAAHAoIQAACjMZAgUGmgIEBpQoIgAACg4EcwYAAAZ9BgAABAYXWAoGAzLOAm8UAAAG
Am8RAAAGAigSAAAGKjoCKCMAAAoCA30HAAAEKoICewcAAARvJAAACm8lAAAKcrQAAHBvJgAACm8n
AAAKKjoCKCMAAAoCA30IAAAEKh4CKCMAAAoqrn4JAAAELR5yygAAcNAHAAACKCgAAApvKQAACnMq
AAAKgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIoKwAACioucx0AAAaACwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQGAAAjfgAA8AYAAGQIAAAjU3Ry
aW5ncwAAAABUDwAAPAEAACNVUwCQEAAAEAAAACNHVUlEAAAAoBAAABACAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAsAAAAeAAAAEQAAACsAAAAQAAAAAwAAAAQA
AAAKAAAACwAAAAEAAAAGAAAAAQAAAAAA7QMBAAAAAAAGAM4CfQYGAGIDfQYGABoCagYPAPEGAAAG
AEcCswQGALECswQGAJICswQGAEkDswQGAO4CswQGAAcDswQGAF4CswQGAHkCnQMKACIDYQEGAIsF
zAAGAKQHXwQOAFYAAgYKAMsFYQESALwFYQEKACwFYQEKAOoHYQEGAP0BagYGANwFnQYGACAFkgQW
AM0B1wMWAC4C1wMWAK8BfQQGAOIBfQYGALcDXwQGAJgFzAAGAAYFXwQaAAEAKgYaABoAKgYaAD0A
KgYGAIIBXwQGABkBXwQGAFsIswQAAAAAtwAAAAAAAQABAAEAEAByBAAAEAABAAEAAQAQAK4FAABF
AAQABgABABAAzAcAAFEABAAQAAEAEABuBwAAPQAHABUAAQAQAC8HAAA9AAgAFwAAABAApAYABz0A
CQAYAAABEABeBwAHaQALABwAAQCjBaYAAQC+A6oAAQDVA60ABgBuB7AABgAvB7QABgCuBbgAAQDa
B7wAAQDaB7wAEQBmBMAAEQCfAcQAEQAJAcgAUCAAAAAAxgBnB8wAAQB7IAAAAADGAIADBgACAJQg
AAAAAMYAkAcGAAIARSEAAAAAxgCLAwYAAgBYIQAAAACGGFMGBgACAGchAAAAAIYYUwZBAAIAciEA
AAAAhghvABAABQB8IQAAAACGCBUE0QAGAJMhAAAAAIYIewAQAAcAnSEAAAAAhggoBNEACAC0IQAA
AACGCIcAEAAJAL4hAAAAAIYIOwTRAAoA1SEAAAAAhgBECAYACwDdIQAAAACGAKsHBgALAOUhAAAA
AIYArgdRAAsA7SEAAAAAhhhTBgYACwANIgAAAADGAYIHBgALAA8iAAAAAIEA9QAGAAsALCIAAAAA
xgA4CNYACwANIgAAAADGAZAHBgAPAIEiAAAAAIYYUwbiAA8AkCIAAAAAhgjlBHgAEACxIgAAAACG
GFMG4gAQAMAiAAAAAIMYUwYGABEAyCIAAAAAkwjYBegAEQD0IgAAAACTCIcB7QARAPsiAAAAAJMI
kwHyABEAAyMAAAAAlgjAB/gAEgAKIwAAAACGGFMGBgASABIjAAAAAJEYWQb9ABIAAAABAKcEAAAB
ANEFAAACADkHAAADADoFAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAIgH
AAACAGAGAAADAHoHAAAEADoFAAABAPAHAAABAPAHAAABAJcDCQBTBgEAEQBTBgYAGQBTBgoAKQBT
BhAAMQBTBhAAOQBTBhAAQQBTBhAASQBTBhAAUQBTBhAAWQBTBhAAYQBTBhAAaQBTBgYAqQBTBgYA
yQBTBhUA2QBTBgYAgQD0BCAAoQCAAwYAcQBTBhAA4QBLCC0A6QBYATIA4QDKAzYA4QC6BzoAoQCL
AwYA6QDHAQYAiQBTBkEAiQBWBEsAiQBOBAEA8QBTBhAAiQBECAYAiQCrBwYAiQCuB1EAoQBTBgYA
oQDAAFkAoQBNB2AAeQBTBgYAoQDWAGYA+QDFBGsAAQE9AXEACQHsBXgAEQErAX0AEQFXCIYAsQBT
BowA0QBTBgYALgALAB0BLgATACYBLgAbAEUBLgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4B
LgBLAJYBLgBTAHcBLgBbAMABQwBjAAoC4wBrAAoCCQFzAEUBKQFzAEUBYQF7AAoCGwAlAFUAAwAB
AAUABwAHAAgACAAKAAAAcwABAQAAGQQFAQAAfwABAQAALAQFAQAAiwABAQAAPwQFAQAA+wQJAQAA
3AUOAQAApwETAQAAxAcYAQEABwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAIAFgAP
AAIAGQARAAIAGgATAAEAGwATAAIAHAAVAASAAAABAAAAAAAAAAAAAAAAAJMAAAAEAAAAAAAAAAAA
AACUAOwAAAAAAA0AAAAAAAAAAAAAAJ0A+gcAAAAADQAAAAAAAAAAAAAAnQBEBQAAAAANAAAAAAAA
AAAAAACdABcIAAAAAAQAAAAAAAAAAAAAAJQAXwQAAAAADQAAAAAAAAAAAAAAnQBnBQAAAAAAAAAA
AQAAAK4GAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAHNldF9Db2x1bW4wAHNldF9Db2x1bW4xAHNldF9Db2x1bW4yAFNDX2JiNTgzZGUxNTUw
ZDQ2MGJiYmFiNWFmMDhiNzNlMDc0ADxNb2R1bGU+AEdldE91dHB1dElEAFN5c3RlbS5JTwBnZXRf
Q29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABkZWZhdWx0SW5z
dGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0UnVudGltZUNvbm5l
Y3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlw
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBT
cmNGaWxlUGF0aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2JiNTgzZGUx
NTUwZDQ2MGJiYmFiNWFmMDhiNzNlMDc0LmRsbABzZXRfQ29sdW1uMF9Jc051bGwAc2V0X0NvbHVt
bjFfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVX
cmFwAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAHRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlv
bk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDX2JiNTgzZGUxNTUwZDQ2MGJiYmFiNWFmMDhiNzNlMDc0LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19iYjU4M2RlMTU1MGQ0NjBiYmJh
YjVhZjA4YjczZTA3NC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdl
dENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABn
ZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQcmltZU91dHB1dABBZGRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AAADLAAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBDAF8AYgBiADUAOAAzAGQAZQAxADUANQAwAGQANAA2
ADAAYgBiAGIAYQBiADUAYQBmADAAOABiADcAMwBlADAANwA0AC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAADFcyPy62gDQaIjxo0pCCGdAAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFhBAcBEkEEIAEcHAcHAw4dDh0DBCAAHQMDIAAOAyAACAYgAR0OHQMJIAMBEkkdCBJN
BSACAQgcAyAAAgMHAQgGAAIIEk0OBSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEkEIAAESgIkR
gI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBg4CBggDBhIUAwYSGAMGEgwD
BhJRAwYSWQMGEl0DBhIgBCABARwEIAEBAgsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0FAAEB
El0EAAASIAMAAAEDKAAOAygAAgQoABJBBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19iYjU4M2RlMTU1MGQ0NjBiYmJh
YjVhZjA4YjczZTA3NAAABQEAAAAAGAEAE1VuaXZlcnNpdHkgb2YgTGVlZHMAACkBACRDb3B5cmln
aHQgQCBVbml2ZXJzaXR5IG9mIExlZWRzIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAALA2AAAAAAAAAAAAAMo2AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8NgAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYgBiADUAOAAzAGQAZQAx
ADUANQAwAGQANAA2ADAAYgBiAGIAYQBiADUAYQBmADAAOABiADcAMwBlADAANwA0AAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwBiAGIANQA4ADMAZABlADEANQA1ADAAZAA0ADYAMABiAGIA
YgBhAGIANQBhAGYAMAA4AGIANwAzAGUAMAA3ADQALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMA
aQB0AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwBiAGIANQA4ADMAZABlADEANQA1ADAAZAA0ADYAMABiAGIAYgBhAGIANQBh
AGYAMAA4AGIANwAzAGUAMAA3ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AYgBiADUAOAAzAGQAZQAxADUANQAwAGQANAA2ADAAYgBiAGIAYQBiADUAYQBm
ADAAOABiADcAMwBlADAANwA0AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bb583de1550d460bbbab5af08b73e074</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">42ef8af19398b7c5c95dde3a8886a352</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">1b4036d5e007ab14760fe27c897e94246642c530</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Define Referral]"
                      connectionManagerRefId="Package.ConnectionManagers[Define Referral]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in Staging Table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column2]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split to columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Define Referral Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Define Referral Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Define Results Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{551C104B-E923-45BA-85E7-3203E9DFBF79}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Define Results Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">(FINDSTRING( @[User::varFileName] , "Define_", 1 ) == 0)
||
(FINDSTRING( @[User::varFileName] , "_results", 1 ) == 0)</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Define Results to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7ffeef1a848d48fc96ec709c1ab3a5fc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5986d8d2-1e51-4f66-b6af-d4187b366d15}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7ffeef1a848d48fc96ec709c1ab3a5fc</RootNamespace>
    <AssemblyName>SC_7ffeef1a848d48fc96ec709c1ab3a5fc</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7ffeef1a848d48fc96ec709c1ab3a5fc" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column1
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties.Settings.get_Default():SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties.Sett" +
    "ings")]

namespace SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7ffeef1a848d48fc96ec709c1ab3a5fc</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7ffeef1a848d48fc96ec709c1ab3a5fc</msb:DisplayName>
		<msb:ProjectId>{B5C1C9B2-CE47-4C46-A51C-052CA7559E4E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7ffeef1a848d48fc96ec709c1ab3a5fc.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7ffeef1a848d48fc96ec709c1ab3a5fc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_7ffeef1a848d48fc96ec709c1ab3a5fc")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7ffeef1a848d48fc96ec709c1ab3a5fc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7ffeef1a848d48fc96ec709c1ab3a5fc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB66HFgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAQjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPA1AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAk
NgAAAAAAAEgAAAACAAUA5CIAAFQSAAABAAAAAAAAADg1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8UAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAIgAAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgorawJ7AwAABBYxSAZvFQAAChYxPwJ7BgAABG8LAAAGBghvFgAACgsCewYAAAQH
ji0DFCsDBxaabwkAAAYCewYAAAQHjmkXMAMUKwMHF5pvBwAABgICewMAAAQXWH0DAAAEAnsBAAAE
bxQAAAoKBi2SKkoCKBcAAAoCewEAAARvGAAACio6Ahd9AwAABAIoDgAABioqAgMEBSgZAAAKKiYC
FgMoGgAACipaAywIAhYoGwAACipyBQAAcHMcAAAKeiYCFwMoGgAACipaAywIAhcoGwAACipyBQAA
cHMcAAAKeh4CKB0AAAoqHgIoHgAACioeAigfAAAKKn4CKCAAAAoCAnMTAAAGfQQAAAQCAnMVAAAG
fQUAAAQqBipuAnsGAAAELBICewYAAARvDAAABgIUfQYAAAQqAAAAEzAFAEkAAAADAAARFgorLgQG
lA4EcqIAAHAoIQAACjMZAgUGmgIEBpQoIgAACg4EcwYAAAZ9BgAABAYXWAoGAzLOAm8SAAAGAm8P
AAAGAigQAAAGKjoCKCMAAAoCA30HAAAEKoICewcAAARvJAAACm8lAAAKcrQAAHBvJgAACm8nAAAK
KjoCKCMAAAoCA30IAAAEKh4CKCMAAAoqrn4JAAAELR5yygAAcNAHAAACKCgAAApvKQAACnMqAAAK
gAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIoKwAACioucxsAAAaACwAABCoAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAEQGAAAjfgAAsAYAAEgIAAAjU3RyaW5n
cwAAAAD4DgAAPAEAACNVUwA0EAAAEAAAACNHVUlEAAAARBAAABACAAAjQmxvYgAAAAAAAAACAAAB
VxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAsAAAAcAAAADwAAACsAAAAQAAAAAwAAAAQAAAAI
AAAACQAAAAEAAAAGAAAAAQAAAAAA4QMBAAAAAAAGAMICXgYGAFYDXgYGAA4CSwYPANIGAAAGADsC
lAQGAKUClAQGAIYClAQGAD0DlAQGAOIClAQGAPsClAQGAFIClAQGAG0CkQMKABYDVQEGAGwFnAAG
AIUHQAQOAFYA4wUKAKwFVQESAJ0FVQEKAA0FVQEKAMsHVQEGAPEBSwYGAL0FfgYGAAEFcwQWAMEB
ywMWACICywMWAKMBXgQGANYBXgYGAKsDQAQGAHkFnAAGAOcEQAQaAAEACwYaABoACwYaAD0ACwYG
AHYBQAQGAA0BQAQGADwIlAQAAAAAhwAAAAAAAQABAAEAEABTBAAAEAABAAEAAQAQAI8FAABFAAQA
BgABABAArQcAAFEABAAOAAEAEABPBwAAPQAHABMAAQAQABAHAAA9AAgAFQAAABAAhQbhBj0ACQAW
AAABEAA/B+EGaQALABoAAQCEBaYAAQCyA6oAAQDJA60ABgBPB7AABgAQB7QABgCPBbgAAQC7B7wA
AQC7B7wAEQBHBMAAEQCTAcQAEQD9AMgAUCAAAAAAxgBIB8wAAQB7IAAAAADGAHQDBgACAJQgAAAA
AMYAcQcGAAIAKCEAAAAAxgB/AwYAAgA7IQAAAACGGDQGBgACAEohAAAAAIYYNAZBAAIAVSEAAAAA
hgh7ABAABQBfIQAAAACGCBwE0QAGAHYhAAAAAIYIbwAQAAcAgCEAAAAAhggJBNEACACXIQAAAACG
ACUIBgAJAJ8hAAAAAIYAjAcGAAkApyEAAAAAhgCPB1EACQCvIQAAAACGGDQGBgAJAM8hAAAAAMYB
YwcGAAkA0SEAAAAAgQDpAAYACQDwIQAAAADGABkI1gAJAM8hAAAAAMYBcQcGAA0ARSIAAAAAhhg0
BuIADQBUIgAAAACGCMYEeAAOAHUiAAAAAIYYNAbiAA4AhCIAAAAAgxg0BgYADwCMIgAAAACTCLkF
6AAPALgiAAAAAJMIewHtAA8AvyIAAAAAkwiHAfIADwDHIgAAAACWCKEH+AAQAM4iAAAAAIYYNAYG
ABAA1iIAAAAAkRg6Bv0AEAAAAAEAiAQAAAEAsgUAAAIAGgcAAAMAGwUAAAEAiwMAAAEAiwMAAAEA
iwMAAAEAiwMAAAEAaQcAAAIAQQYAAAMAWwcAAAQAGwUAAAEA0QcAAAEA0QcAAAEAiwMJADQGAQAR
ADQGBgAZADQGCgApADQGEAAxADQGEAA5ADQGEABBADQGEABJADQGEABRADQGEABZADQGEABhADQG
EABpADQGBgCpADQGBgDJADQGFQDZADQGBgCBANUEIAChAHQDBgBxADQGEADhACwILQDpAEwBMgDh
AL4DNgDhAJsHOgChAH8DBgDpALsBBgCJADQGQQCJADcESwCJAC8EAQDxADQGEACJACUIBgCJAIwH
BgCJAI8HUQChADQGBgChAJAAWQChAC4HYAB5ADQGBgChAKYAZgD5AKYEawABATEBcQAJAc0FeAAR
AR8BfQARATgIhgCxADQGjADRADQGBgAuAAsAHQEuABMAJgEuABsARQEuACMATgEuACsAdwEuADMA
dwEuADsAfQEuAEMATgEuAEsAlgEuAFMAdwEuAFsAwAFDAGMACgLJAHMARQHjAGsACgLpAHMARQFh
AXsACgIbACUAVQADAAEABQAFAAcABgAIAAgAAAB/AAEBAAAgBAUBAABzAAEBAAANBAUBAADcBAkB
AAC9BQ4BAACbARMBAAClBxgBAQAHAAMAAQAIAAUAAQAJAAcAAQAKAAkAAgAUAAsAAgAXAA0AAgAY
AA8AAQAZAA8AAgAaABEABIAAAAEAAAAAAAAAAAAAAAAAxQAAAAQAAAAAAAAAAAAAAJQAvAAAAAAA
DQAAAAAAAAAAAAAAnQDbBwAAAAANAAAAAAAAAAAAAACdACUFAAAAAA0AAAAAAAAAAAAAAJ0A+AcA
AAAABAAAAAAAAAAAAAAAlABABAAAAAANAAAAAAAAAAAAAACdAEgFAAAAAAAAAAABAAAAjwYAAAAA
AElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9u
MTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAc2V0
X0NvbHVtbjAAc2V0X0NvbHVtbjEAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAGdldF9D
b21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBTQ183ZmZlZWYxYTg0OGQ0OGZjOTZlYzcwOWMxYWIz
YTVmYwBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBSZWFkTGluZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFNyY0ZpbGVQYXRoAGdldF9MZW5ndGgA
aQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfN2ZmZWVmMWE4NDhkNDhmYzk2ZWM3MDljMWFiM2E1
ZmMuZGxsAHNldF9Db2x1bW4wX0lzTnVsbABzZXRfQ29sdW1uMV9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBUcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9u
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkRUU1BpcGVsaW5lV3JhcABTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgB0ZXh0UmVhZGVyAE91
dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUu
V3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5j
Y3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ183ZmZlZWYxYTg0OGQ0OGZjOTZlYzcwOWMxYWIz
YTVmYy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfN2Zm
ZWVmMWE4NDhkNDhmYzk2ZWM3MDljMWFiM2E1ZmMuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEFjcXVpcmVDb25uZWN0aW9u
cwBCdWZmZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAU2V0RW5k
T2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAQWRkUm93AFRvQ2hhckFycmF5AGdldF9B
c3NlbWJseQAAAAAAAywAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBu
AG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEA
IAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAu
AAARTwB1AHQAcAB1AHQAIAAwAAAVQwBvAG4AbgBlAGMAdABpAG8AbgAAcVMAQwBfADcAZgBmAGUA
ZQBmADEAYQA4ADQAOABkADQAOABmAGMAOQA2AGUAYwA3ADAAOQBjADEAYQBiADMAYQA1AGYAYwAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA+dcgMCvBX0634d6mi6yy
GQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQQHARJBBCABHBwHBwMOHQ4dAwQgAB0DAyAADgMg
AAgGIAEdDh0DCSADARJJHQgSTQUgAgEIHAMgAAIDBwEIBgACCBJNDgUgAR0ICAQgABJ9BSAAEoCB
BiABEoCFDgQgABJBCAABEoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJEDBhI5
AgYOAgYIAwYSFAMGEhgDBhIMAwYSUQMGElkDBhJdAwYSIAQgAQEcBCABAQILIAQBCB0IHRJJEk0F
IAEBElEEAAASWQQAABJdBQABARJdBAAAEiADAAABAygADgMoAAIEKAASQQQIABJZBAgAEl0ECAAS
IAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0Nf
N2ZmZWVmMWE4NDhkNDhmYzk2ZWM3MDljMWFiM2E1ZmMAAAUBAAAAABgBABNVbml2ZXJzaXR5IG9m
IExlZWRzAAApAQAkQ29weXJpZ2h0IEAgVW5pdmVyc2l0eSBvZiBMZWVkcyAyMDE2AABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAYNgAAAAAAAAAAAAAyNgAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAJDYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANwBmAGYAZQBlAGYAMQBh
ADgANAA4AGQANAA4AGYAYwA5ADYAZQBjADcAMAA5AGMAMQBhAGIAMwBhADUAZgBjAAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3AGYAZgBlAGUAZgAxAGEAOAA0ADgAZAA0ADgAZgBjADkA
NgBlAGMANwAwADkAYwAxAGEAYgAzAGEANQBmAGMALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMA
aQB0AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwA3AGYAZgBlAGUAZgAxAGEAOAA0ADgAZAA0ADgAZgBjADkANgBlAGMANwAw
ADkAYwAxAGEAYgAzAGEANQBmAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8ANwBmAGYAZQBlAGYAMQBhADgANAA4AGQANAA4AGYAYwA5ADYAZQBjADcAMAA5
AGMAMQBhAGIAMwBhADUAZgBjAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEQ2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7ffeef1a848d48fc96ec709c1ab3a5fc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">e129af49a2f5ebec84c5feb4c39e4959</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">246c58beb74e020ac6e50a030b4be02eee20c1ab</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Define Results]"
                      connectionManagerRefId="Package.ConnectionManagers[Define Results]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Define Results Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Define Results Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Define Test Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{392A8F48-6B1D-4B58-A8CB-063C22DC0046}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Define Test Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">(FINDSTRING( @[User::varFileName] , "Define_", 1 ) == 0)
||
(FINDSTRING( @[User::varFileName] , "_Test", 1 ) == 0)</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Define Test Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0c6d9796ee7c4cfc9f43d9c4e511a293.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{70fd578e-3357-411e-8775-7815d6cb0a07}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0c6d9796ee7c4cfc9f43d9c4e511a293</RootNamespace>
    <AssemblyName>SC_0c6d9796ee7c4cfc9f43d9c4e511a293</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0c6d9796ee7c4cfc9f43d9c4e511a293" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column2
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties.Settings.get_Default():SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties.Sett" +
    "ings")]

namespace SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_0c6d9796ee7c4cfc9f43d9c4e511a293</msb:CodeName>
		<msb:DisplayName>SC_0c6d9796ee7c4cfc9f43d9c4e511a293</msb:DisplayName>
		<msb:ProjectId>{939009FB-F22B-4BE0-8244-FC070F888437}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0c6d9796ee7c4cfc9f43d9c4e511a293.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0c6d9796ee7c4cfc9f43d9c4e511a293")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_0c6d9796ee7c4cfc9f43d9c4e511a293")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0c6d9796ee7c4cfc9f43d9c4e511a293.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0c6d9796ee7c4cfc9f43d9c4e511a293.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANa9HFgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA2jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIg2AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
NgAAAAAAAEgAAAACAAUAICMAALASAAABAAAAAAAAANA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8WAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAKUAAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4ggAAAAJ7AwAABBYxXwZvFQAAChYxVgJ7BgAABG8NAAAGBghvFgAACgsCewYA
AAQHji0DFCsDBxaabwsAAAYCewYAAAQHjmkXMAMUKwMHF5pvCQAABgJ7BgAABAeOaRgwAxQrAwcY
mm8HAAAGAgJ7AwAABBdYfQMAAAQCewEAAARvFAAACgoGOnj///8qSgIoFwAACgJ7AQAABG8YAAAK
KjoCF30DAAAEAigQAAAGKioCAwQFKBkAAAoqJgIWAygaAAAKKloDLAgCFigbAAAKKnIFAABwcxwA
AAp6JgIXAygaAAAKKloDLAgCFygbAAAKKnIFAABwcxwAAAp6JgIYAygaAAAKKloDLAgCGCgbAAAK
KnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcxUAAAZ9BAAABAIC
cxcAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8OAAAGAhR9BgAABCoAEzAFAEkAAAADAAARFgor
LgQGlA4EcqIAAHAoIQAACjMZAgUGmgIEBpQoIgAACg4EcwYAAAZ9BgAABAYXWAoGAzLOAm8UAAAG
Am8RAAAGAigSAAAGKjoCKCMAAAoCA30HAAAEKoICewcAAARvJAAACm8lAAAKcrQAAHBvJgAACm8n
AAAKKjoCKCMAAAoCA30IAAAEKh4CKCMAAAoqrn4JAAAELR5yygAAcNAHAAACKCgAAApvKQAACnMq
AAAKgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIoKwAACioucx0AAAaACwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQGAAAjfgAA8AYAAGQIAAAjU3Ry
aW5ncwAAAABUDwAAPAEAACNVUwCQEAAAEAAAACNHVUlEAAAAoBAAABACAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAsAAAAeAAAAEQAAACsAAAAQAAAAAwAAAAQA
AAAKAAAACwAAAAEAAAAGAAAAAQAAAAAA7QMBAAAAAAAGAM4CfQYGAGIDfQYGABoCagYPAPEGAAAG
AEcCswQGALECswQGAJICswQGAEkDswQGAO4CswQGAAcDswQGAF4CswQGAHkCnQMKACIDYQEGAIsF
zAAGAKQHXwQOAFYAAgYKAMsFYQESALwFYQEKACwFYQEKAOoHYQEGAP0BagYGANwFnQYGACAFkgQW
AM0B1wMWAC4C1wMWAK8BfQQGAOIBfQYGALcDXwQGAJgFzAAGAAYFXwQaAAEAKgYaABoAKgYaAD0A
KgYGAIIBXwQGABkBXwQGAFsIswQAAAAAtwAAAAAAAQABAAEAEAByBAAAEAABAAEAAQAQAK4FAABF
AAQABgABABAAzAcAAFEABAAQAAEAEABuBwAAPQAHABUAAQAQAC8HAAA9AAgAFwAAABAApAYABz0A
CQAYAAABEABeBwAHaQALABwAAQCjBaYAAQC+A6oAAQDVA60ABgBuB7AABgAvB7QABgCuBbgAAQDa
B7wAAQDaB7wAEQBmBMAAEQCfAcQAEQAJAcgAUCAAAAAAxgBnB8wAAQB7IAAAAADGAIADBgACAJQg
AAAAAMYAkAcGAAIARSEAAAAAxgCLAwYAAgBYIQAAAACGGFMGBgACAGchAAAAAIYYUwZBAAIAciEA
AAAAhgiHABAABQB8IQAAAACGCDsE0QAGAJMhAAAAAIYIewAQAAcAnSEAAAAAhggoBNEACAC0IQAA
AACGCG8AEAAJAL4hAAAAAIYIFQTRAAoA1SEAAAAAhgBECAYACwDdIQAAAACGAKsHBgALAOUhAAAA
AIYArgdRAAsA7SEAAAAAhhhTBgYACwANIgAAAADGAYIHBgALAA8iAAAAAIEA9QAGAAsALCIAAAAA
xgA4CNYACwANIgAAAADGAZAHBgAPAIEiAAAAAIYYUwbiAA8AkCIAAAAAhgjlBHgAEACxIgAAAACG
GFMG4gAQAMAiAAAAAIMYUwYGABEAyCIAAAAAkwjYBegAEQD0IgAAAACTCIcB7QARAPsiAAAAAJMI
kwHyABEAAyMAAAAAlgjAB/gAEgAKIwAAAACGGFMGBgASABIjAAAAAJEYWQb9ABIAAAABAKcEAAAB
ANEFAAACADkHAAADADoFAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAIgH
AAACAGAGAAADAHoHAAAEADoFAAABAPAHAAABAPAHAAABAJcDCQBTBgEAEQBTBgYAGQBTBgoAKQBT
BhAAMQBTBhAAOQBTBhAAQQBTBhAASQBTBhAAUQBTBhAAWQBTBhAAYQBTBhAAaQBTBgYAqQBTBgYA
yQBTBhUA2QBTBgYAgQD0BCAAoQCAAwYAcQBTBhAA4QBLCC0A6QBYATIA4QDKAzYA4QC6BzoAoQCL
AwYA6QDHAQYAiQBTBkEAiQBWBEsAiQBOBAEA8QBTBhAAiQBECAYAiQCrBwYAiQCuB1EAoQBTBgYA
oQDAAFkAoQBNB2AAeQBTBgYAoQDWAGYA+QDFBGsAAQE9AXEACQHsBXgAEQErAX0AEQFXCIYAsQBT
BowA0QBTBgYALgALAB0BLgATACYBLgAbAEUBLgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4B
LgBLAJYBLgBTAHcBLgBbAMABQwBjAAoC4wBrAAoCCQFzAEUBKQFzAEUBYQF7AAoCGwAlAFUAAwAB
AAUABwAHAAgACAAKAAAAiwABAQAAPwQFAQAAfwABAQAALAQFAQAAcwABAQAAGQQFAQAA+wQJAQAA
3AUOAQAApwETAQAAxAcYAQEABwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAIAFgAP
AAIAGQARAAIAGgATAAEAGwATAAIAHAAVAASAAAABAAAAAAAAAAAAAAAAAJMAAAAEAAAAAAAAAAAA
AACUAOwAAAAAAA0AAAAAAAAAAAAAAJ0A+gcAAAAADQAAAAAAAAAAAAAAnQBEBQAAAAANAAAAAAAA
AAAAAACdABcIAAAAAAQAAAAAAAAAAAAAAJQAXwQAAAAADQAAAAAAAAAAAAAAnQBnBQAAAAAAAAAA
AQAAAK4GAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAHNldF9Db2x1bW4wAHNldF9Db2x1bW4xAHNldF9Db2x1bW4yAFNDXzBjNmQ5Nzk2ZWU3
YzRjZmM5ZjQzZDljNGU1MTFhMjkzADxNb2R1bGU+AEdldE91dHB1dElEAFN5c3RlbS5JTwBnZXRf
Q29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABkZWZhdWx0SW5z
dGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0UnVudGltZUNvbm5l
Y3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlw
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBT
cmNGaWxlUGF0aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzBjNmQ5Nzk2
ZWU3YzRjZmM5ZjQzZDljNGU1MTFhMjkzLmRsbABzZXRfQ29sdW1uMF9Jc051bGwAc2V0X0NvbHVt
bjFfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVX
cmFwAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAHRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlv
bk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDXzBjNmQ5Nzk2ZWU3YzRjZmM5ZjQzZDljNGU1MTFhMjkzLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wYzZkOTc5NmVlN2M0Y2ZjOWY0
M2Q5YzRlNTExYTI5My5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdl
dENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABn
ZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQcmltZU91dHB1dABBZGRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AAADLAAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBDAF8AMABjADYAZAA5ADcAOQA2AGUAZQA3AGMANABj
AGYAYwA5AGYANAAzAGQAOQBjADQAZQA1ADEAMQBhADIAOQAzAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAADw2DjWxW1TKYdhYpEVToiAAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFhBAcBEkEEIAEcHAcHAw4dDh0DBCAAHQMDIAAOAyAACAYgAR0OHQMJIAMBEkkdCBJN
BSACAQgcAyAAAgMHAQgGAAIIEk0OBSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEkEIAAESgIkR
gI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBg4CBggDBhIUAwYSGAMGEgwD
BhJRAwYSWQMGEl0DBhIgBCABARwEIAEBAgsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0FAAEB
El0EAAASIAMAAAEDKAAOAygAAgQoABJBBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18wYzZkOTc5NmVlN2M0Y2ZjOWY0
M2Q5YzRlNTExYTI5MwAABQEAAAAAGAEAE1VuaXZlcnNpdHkgb2YgTGVlZHMAACkBACRDb3B5cmln
aHQgQCBVbml2ZXJzaXR5IG9mIExlZWRzIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAALA2AAAAAAAAAAAAAMo2AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8NgAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMABjADYAZAA5ADcAOQA2
AGUAZQA3AGMANABjAGYAYwA5AGYANAAzAGQAOQBjADQAZQA1ADEAMQBhADIAOQAzAAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwAGMANgBkADkANwA5ADYAZQBlADcAYwA0AGMAZgBjADkA
ZgA0ADMAZAA5AGMANABlADUAMQAxAGEAMgA5ADMALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMA
aQB0AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwAwAGMANgBkADkANwA5ADYAZQBlADcAYwA0AGMAZgBjADkAZgA0ADMAZAA5
AGMANABlADUAMQAxAGEAMgA5ADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AMABjADYAZAA5ADcAOQA2AGUAZQA3AGMANABjAGYAYwA5AGYANAAzAGQAOQBj
ADQAZQA1ADEAMQBhADIAOQAzAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0c6d9796ee7c4cfc9f43d9c4e511a293</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">fcd87585c0d0b891efd65a610108bdaf</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">c2450362ecb7c23b062be9e725bd3cd31805564b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Define Test]"
                      connectionManagerRefId="Package.ConnectionManagers[Define Test]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump into tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Define Test Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Define Test Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Immunisation Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{99f291bb-9e5b-47b7-b92b-e5dfabaa8b9e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Immunisation Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Immunisation", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column15]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column15"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column15]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column14]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column14"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column14]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column13]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column11]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column10]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Immunisation Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                    this.Output0Buffer.Column10 = columns.Length > 10 ? columns[10] : null;
                    this.Output0Buffer.Column11 = columns.Length > 11 ? columns[11] : null;
                    this.Output0Buffer.Column12 = columns.Length > 12 ? columns[12] : null;
                    this.Output0Buffer.Column13 = columns.Length > 13 ? columns[13] : null;
                    this.Output0Buffer.Column14 = columns.Length > 14 ? columns[14] : null;
                    this.Output0Buffer.Column15 = columns.Length > 15 ? columns[15] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column15
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column15_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column14
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column14_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column13
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column13_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column12
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column11
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column11_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column10
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column9
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dee6eb7d4036494097ef3c237748ba5a.Properties.Settings.get_Default():SC_dee6eb7d4036494097ef3c237748ba5a.Properties.Sett" +
    "ings")]

namespace SC_dee6eb7d4036494097ef3c237748ba5a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_dee6eb7d4036494097ef3c237748ba5a.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3793e7f2-7c04-40ab-8a25-85791e2653a6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_dee6eb7d4036494097ef3c237748ba5a</RootNamespace>
    <AssemblyName>SC_dee6eb7d4036494097ef3c237748ba5a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_dee6eb7d4036494097ef3c237748ba5a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_dee6eb7d4036494097ef3c237748ba5a</msb:CodeName>
		<msb:DisplayName>SC_dee6eb7d4036494097ef3c237748ba5a</msb:DisplayName>
		<msb:ProjectId>{7AC34AB1-BEFF-4F73-BDE2-0EF092FFF318}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_dee6eb7d4036494097ef3c237748ba5a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_dee6eb7d4036494097ef3c237748ba5a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_dee6eb7d4036494097ef3c237748ba5a")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dee6eb7d4036494097ef3c237748ba5a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dee6eb7d4036494097ef3c237748ba5a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dee6eb7d4036494097ef3c237748ba5a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_dee6eb7d4036494097ef3c237748ba5a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_dee6eb7d4036494097ef3c237748ba5a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_dee6eb7d4036494097ef3c237748ba5a.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFVqG1gAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAtj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQ+AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAvB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACY
PgAAAAAAAEgAAAACAAUAHCYAAJAXAAABAAAAAAAAAKw9AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8wAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAOQBAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4wQEAAAJ7AwAABBY+mwEAAAZvFQAAChY+jwEAAAJ7BgAABG8nAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabyUAAAYCewYAAAQHjmkXMAMUKwMHF5pvIwAABgJ7BgAABAeOaRgw
AxQrAwcYmm8hAAAGAnsGAAAEB45pGTADFCsDBxmabx8AAAYCewYAAAQHjmkaMAMUKwMHGppvHQAA
BgJ7BgAABAeOaRswAxQrAwcbmm8bAAAGAnsGAAAEB45pHDADFCsDBxyabxkAAAYCewYAAAQHjmkd
MAMUKwMHHZpvFwAABgJ7BgAABAeOaR4wAxQrAwcemm8VAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
EwAABgJ7BgAABAeOaR8KMAMUKwQHHwqabxEAAAYCewYAAAQHjmkfCzADFCsEBx8Lmm8PAAAGAnsG
AAAEB45pHwwwAxQrBAcfDJpvDQAABgJ7BgAABAeOaR8NMAMUKwQHHw2abwsAAAYCewYAAAQHjmkf
DjADFCsEBx8Omm8JAAAGAnsGAAAEB45pHw8wAxQrBAcfD5pvBwAABgICewMAAAQXWH0DAAAEAnsB
AAAEbxQAAAoKBjo5/v//KkoCKBcAAAoCewEAAARvGAAACio6Ahd9AwAABAIoKgAABioqAgMEBSgZ
AAAKKiYCFgMoGgAACipaAywIAhYoGwAACipyBQAAcHMcAAAKeiYCFwMoGgAACipaAywIAhcoGwAA
CipyBQAAcHMcAAAKeiYCGAMoGgAACipaAywIAhgoGwAACipyBQAAcHMcAAAKeiYCGQMoGgAACipa
AywIAhkoGwAACipyBQAAcHMcAAAKeiYCGgMoGgAACipaAywIAhooGwAACipyBQAAcHMcAAAKeiYC
GwMoGgAACipaAywIAhsoGwAACipyBQAAcHMcAAAKeiYCHAMoGgAACipaAywIAhwoGwAACipyBQAA
cHMcAAAKeiYCHQMoGgAACipaAywIAh0oGwAACipyBQAAcHMcAAAKeiYCHgMoGgAACipaAywIAh4o
GwAACipyBQAAcHMcAAAKeioCHwkDKBoAAAoqXgMsCQIfCSgbAAAKKnIFAABwcxwAAAp6KgIfCgMo
GgAACipeAywJAh8KKBsAAAoqcgUAAHBzHAAACnoqAh8LAygaAAAKKl4DLAkCHwsoGwAACipyBQAA
cHMcAAAKeioCHwwDKBoAAAoqXgMsCQIfDCgbAAAKKnIFAABwcxwAAAp6KgIfDQMoGgAACipeAywJ
Ah8NKBsAAAoqcgUAAHBzHAAACnoqAh8OAygaAAAKKl4DLAkCHw4oGwAACipyBQAAcHMcAAAKeioC
Hw8DKBoAAAoqXgMsCQIfDygbAAAKKnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoq
fgIoIAAACgICcy8AAAZ9BAAABAICczEAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8oAAAGAhR9
BgAABCoAAAATMAUASQAAAAMAABEWCisuBAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAKDgRz
BgAABn0GAAAEBhdYCgYDMs4Cby4AAAYCbysAAAYCKCwAAAYqOgIoIwAACgIDfQcAAAQqggJ7BwAA
BG8kAAAKbyUAAApytAAAcG8mAAAKbycAAAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkAAAQt
HnLKAABw0AcAAAIoKAAACm8pAAAKcyoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAA
BCoeAigrAAAKKi5zNwAABoALAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAxAkAACN+AAAwCgAABAoAACNTdHJpbmdzAAAAADQUAAA8AQAAI1VTAHAVAAAQAAAAI0dVSUQA
AACAFQAAEAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAACwAA
ADgAAAArAAAAKwAAABAAAAADAAAABAAAACQAAAAlAAAAAQAAAAYAAAABAAAAAACPBAEAAAAAAAYA
cAMcCAYABAQcCAYAvAIJCA8AkAgAAAYA6QJSBgYAUwNSBgYANANSBgYA6wNSBgYAkANSBgYAqQNS
BgYAAANSBgYAGwM/BAoAxAMDAgYAKgdKAQYAQwn+BQ4AVgChBwoAagcDAhIAWwcDAgoAywYDAgoA
iQkDAgYAnwIJCAYAewc8CAYAvwYxBhYAbwJ5BBYA0AJ5BBYAUQIcBgYAhAIcCAYAWQT+BQYANwdK
AQYApQb+BRoAAQDJBxoAGgDJBxoAPQDJBwYAJAL+BQYAuwH+BQYA+glSBgAAAAA1AQAAAAABAAEA
AQAQABEGAAAQAAEAAQABABAATQcAAEUABAAGAAEAEABrCQAAUQAEACoAAQAQAA0JAAA9AAcALwAB
ABAAzggAAD0ACAAxAAAAEABDCJ8IPQAJADIAAAEQAP0InwhpAAsANgABAEIHpgABAGAEqgABAHcE
rQAGAA0JsAAGAM4ItAAGAE0HuAABAHkJvAABAHkJvAARAAUGwAARAEECxAARAKsByABQIAAAAADG
AAYJzAABAHsgAAAAAMYAIgQGAAIAlCAAAAAAxgAvCQYAAgCEIgAAAADGAC0EBgACAJciAAAAAIYY
8gcGAAIApiIAAAAAhhjyB0EAAgCxIgAAAACGCOwAEAAFALsiAAAAAIYIegXRAAYA0iIAAAAAhgjT
ABAABwDcIgAAAACGCFMF0QAIAPMiAAAAAIYIugAQAAkA/SIAAAAAhggsBdEACgAUIwAAAACGCKEA
EAALAB4jAAAAAIYIBQXRAAwANSMAAAAAhgiIABAADQA/IwAAAACGCN4E0QAOAFYjAAAAAIYIbwAQ
AA8AYCMAAAAAhgi3BNEAEAB3IwAAAACGCCkBEAARAIEjAAAAAIYI2gXRABIAmCMAAAAAhggdARAA
EwCiIwAAAACGCMcF0QAUALkjAAAAAIYIEQEQABUAwyMAAAAAhgi0BdEAFgDaIwAAAACGCAUBEAAX
AOUjAAAAAIYIoQXRABgA/SMAAAAAhgj5ABAAGQAIJAAAAACGCI4F0QAaACAkAAAAAIYI4AAQABsA
KyQAAAAAhghnBdEAHABDJAAAAACGCMcAEAAdAE4kAAAAAIYIQAXRAB4AZiQAAAAAhgiuABAAHwBx
JAAAAACGCBkF0QAgAIkkAAAAAIYIlQAQACEAlCQAAAAAhgjyBNEAIgCsJAAAAACGCHwAEAAjALck
AAAAAIYIywTRACQAzyQAAAAAhgDjCQYAJQDXJAAAAACGAEoJBgAlAN8kAAAAAIYATQlRACUA5yQA
AAAAhhjyBwYAJQAHJQAAAADGASEJBgAlAAklAAAAAIEAlwEGACUAKCUAAAAAxgDXCdYAJQAHJQAA
AADGAS8JBgApAH0lAAAAAIYY8gfiACkAjCUAAAAAhgiEBngAKgCtJQAAAACGGPIH4gAqALwlAAAA
AIMY8gcGACsAxCUAAAAAkwh3B+gAKwDwJQAAAACTCCkC7QArAPclAAAAAJMINQLyACsA/yUAAAAA
lghfCfgALAAGJgAAAACGGPIHBgAsAA4mAAAAAJEY+Af9ACwAAAABAEYGAAABAHAHAAACANgIAAAD
ANkGAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkE
AAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAAB
ADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkEAAABADkE
AAABADkEAAABADkEAAABADkEAAABADkEAAABACcJAAACAP8HAAADABkJAAAEANkGAAABAI8JAAAB
AI8JAAABADkECQDyBwEAEQDyBwYAGQDyBwoAKQDyBxAAMQDyBxAAOQDyBxAAQQDyBxAASQDyBxAA
UQDyBxAAWQDyBxAAYQDyBxAAaQDyBwYAqQDyBwYAyQDyBxUA2QDyBwYAgQCTBiAAoQAiBAYAcQDy
BxAA4QDqCS0A6QD6ATIA4QBsBDYA4QBZCToAoQAtBAYA6QBpAgYAiQDyB0EAiQD1BUsAiQDtBQEA
8QDyBxAAiQDjCQYAiQBKCQYAiQBNCVEAoQDyBwYAoQA+AVkAoQDsCGAAeQDyBwYAoQB4AWYA+QBk
BmsAAQHfAXEACQGLB3gAEQHNAX0AEQH2CYYAsQDyB4wA0QDyBwYALgALAB0BLgATACYBLgAbAEUB
LgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4BLgBLAJYBLgBTAHcBLgBbAMABQwBjAAoC4wBr
AAoCYQF7AAoCSQRzAEUBaQRzAEUBGwAlAFUAAwABAAUAIQAHACIACAAkAAAA8AABAQAAfgUFAQAA
1wABAQAAVwUFAQAAvgABAQAAMAUFAQAApQABAQAACQUFAQAAjAABAQAA4gQFAQAAcwABAQAAuwQF
AQAALQEBAQAA3gUFAQAAIQEBAQAAywUFAQAAFQEBAQAAuAUFAQAACQEBAQAApQUFAQAA/QABAQAA
kgUFAQAA5AABAQAAawUFAQAAywABAQAARAUFAQAAsgABAQAAHQUFAQAAmQABAQAA9gQFAQAAgAAB
AQAAzwQFAQAAmgYJAQAAewcOAQAASQITAQAAYwkYAQEABwADAAEACAAFAAEACQAHAAEACgAJAAEA
CwALAAEADAANAAEADQAPAAEADgARAAEADwATAAEAEAAVAAEAEQAXAAEAEgAZAAEAEwAbAAEAFAAd
AAEAFQAfAAEAFgAhAAEAFwAjAAEAGAAlAAEAGQAnAAEAGgApAAEAGwArAAEAHAAtAAEAHQAvAAEA
HgAxAAEAHwAzAAEAIAA1AAEAIQA3AAEAIgA5AAEAIwA7AAEAJAA9AAEAJQA/AAEAJgBBAAIAMABD
AAIAMwBFAAIANABHAAEANQBHAAIANgBJAASAAAABAAAAAAAAAAAAAAAAAFQBAAAEAAAAAAAAAAAA
AACUAI4BAAAAAA0AAAAAAAAAAAAAAJ0AmQkAAAAADQAAAAAAAAAAAAAAnQDjBgAAAAANAAAAAAAA
AAAAAACdALYJAAAAAAQAAAAAAAAAAAAAAJQA/gUAAAAADQAAAAAAAAAAAAAAnQAGBwAAAAAAAAAA
AQAAAE0IAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAHNldF9Db2x1bW4xMABzZXRfQ29sdW1uMABzZXRfQ29sdW1uMTEAc2V0X0NvbHVtbjEA
c2V0X0NvbHVtbjEyAHNldF9Db2x1bW4yAHNldF9Db2x1bW4xMwBzZXRfQ29sdW1uMwBzZXRfQ29s
dW1uMTQAc2V0X0NvbHVtbjQAc2V0X0NvbHVtbjE1AHNldF9Db2x1bW41AHNldF9Db2x1bW42AHNl
dF9Db2x1bW43AHNldF9Db2x1bW44AHNldF9Db2x1bW45ADxNb2R1bGU+AEdldE91dHB1dElEAFN5
c3RlbS5JTwBTQ19kZWU2ZWI3ZDQwMzY0OTQwOTdlZjNjMjM3NzQ4YmE1YQBnZXRfQ29tcG9uZW50
TWV0YURhdGEAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABkZWZhdWx0SW5zdGFuY2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5h
bWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
Q2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0
RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTcmNGaWxlUGF0
aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2RlZTZlYjdkNDAzNjQ5NDA5
N2VmM2MyMzc3NDhiYTVhLmRsbABzZXRfQ29sdW1uMTBfSXNOdWxsAHNldF9Db2x1bW4wX0lzTnVs
bABzZXRfQ29sdW1uMTFfSXNOdWxsAHNldF9Db2x1bW4xX0lzTnVsbABzZXRfQ29sdW1uMTJfSXNO
dWxsAHNldF9Db2x1bW4yX0lzTnVsbABzZXRfQ29sdW1uMTNfSXNOdWxsAHNldF9Db2x1bW4zX0lz
TnVsbABzZXRfQ29sdW1uMTRfSXNOdWxsAHNldF9Db2x1bW40X0lzTnVsbABzZXRfQ29sdW1uMTVf
SXNOdWxsAHNldF9Db2x1bW41X0lzTnVsbABzZXRfQ29sdW1uNl9Jc051bGwAc2V0X0NvbHVtbjdf
SXNOdWxsAHNldF9Db2x1bW44X0lzTnVsbABzZXRfQ29sdW1uOV9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBUcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVu
dGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9u
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkRUU1BpcGVsaW5lV3JhcABTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgB0ZXh0UmVhZGVyAE91
dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUu
V3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5j
Y3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19kZWU2ZWI3ZDQwMzY0OTQwOTdlZjNjMjM3NzQ4
YmE1YS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZGVl
NmViN2Q0MDM2NDk0MDk3ZWYzYzIzNzc0OGJhNWEuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEFjcXVpcmVDb25uZWN0aW9u
cwBCdWZmZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAU2V0RW5k
T2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAQWRkUm93AFRvQ2hhckFycmF5AGdldF9B
c3NlbWJseQAAAAMsAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
EU8AdQB0AHAAdQB0ACAAMAAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AAHFTAEMAXwBkAGUAZQA2AGUA
YgA3AGQANAAwADMANgA0ADkANAAwADkANwBlAGYAMwBjADIAMwA3ADcANAA4AGIAYQA1AGEALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACy+8wW+XztLtdPv+3daMBIA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEWEEBwESQQQgARwcBwcDDh0OHQMEIAAdAwMgAA4DIAAI
BiABHQ4dAwkgAwESSR0IEk0FIAIBCBwDIAACAwcBCAYAAggSTQ4FIAEdCAgEIAASfQUgABKAgQYg
ARKAhQ4EIAASQQgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIG
DgIGCAMGEhQDBhIYAwYSDAMGElEDBhJZAwYSXQMGEiAEIAEBHAQgAQECCyAEAQgdCB0SSRJNBSAB
ARJRBAAAElkEAAASXQUAAQESXQQAABIgAwAAAQMoAA4DKAACBCgAEkEECAASWQQIABJdBAgAEiAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2Rl
ZTZlYjdkNDAzNjQ5NDA5N2VmM2MyMzc3NDhiYTVhAAAFAQAAAAAYAQATVW5pdmVyc2l0eSBvZiBM
ZWVkcwAAKQEAJENvcHlyaWdodCBAIFVuaXZlcnNpdHkgb2YgTGVlZHMgMjAxNgAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAjD4AAAAAAAAAAAAApj4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJg+AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAA4BAAAAAAAAAAAAAA4BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEmAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAdAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAAEgAFAABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAVQBuAGkAdgBlAHIAcwBpAHQAeQAgAG8AZgAgAEwAZQBlAGQAcwAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBkAGUAZQA2AGUAYgA3AGQANAAw
ADMANgA0ADkANAAwADkANwBlAGYAMwBjADIAMwA3ADcANAA4AGIAYQA1AGEAAAAwAAgAAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAFMAQwBfAGQAZQBlADYAZQBiADcAZAA0ADAAMwA2ADQAOQA0ADAAOQA3AGUA
ZgAzAGMAMgAzADcANwA0ADgAYgBhADUAYQAuAGQAbABsAAAAbgAlAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAVQBuAGkAdgBlAHIAcwBpAHQA
eQAgAG8AZgAgAEwAZQBlAGQAcwAgADIAMAAxADYAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAQwBfAGQAZQBlADYAZQBiADcAZAA0ADAAMwA2ADQAOQA0ADAAOQA3AGUAZgAzAGMAMgAz
ADcANwA0ADgAYgBhADUAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAEMAXwBkAGUAZQA2AGUAYgA3AGQANAAwADMANgA0ADkANAAwADkANwBlAGYAMwBjADIAMwA3
ADcANAA4AGIAYQA1AGEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAuD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_dee6eb7d4036494097ef3c237748ba5a</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">65226ea3b5fbf97eaef7d4dbdeb84218</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">4f0a79f6c0efceeba5652decc6627aab47d3c6f8</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Immunisation]"
                      connectionManagerRefId="Package.ConnectionManagers[Immunisation]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column15]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column15]"
                          name="Column15" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column14]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column14]"
                          name="Column14" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column13]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column13]"
                          name="Column13" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column12]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column12]"
                          name="Column12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column11]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column11]"
                          name="Column11" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column10]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column10]"
                          name="Column10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column15]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column15"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column15]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",16),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",16),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column14]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column14"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column14]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",15),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",15),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column13]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",14),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",14),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column12]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",13),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",13),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column11]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",12),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",12),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column10]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",11),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",11),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Immunisation Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Immunisation Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert into target table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BC3142C5-4CC7-40AF-84A5-4BCD1B4D72ED}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert into target table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
              SQLTask:SqlStatementSource="set dateformat dmy&#xA;&#xA;declare  @TargetTable as varchar(max) = null&#xA;&#xA;&#x9;, @Column0Name as varchar(max)&#xA;&#x9;, @Column1Name as varchar(max)&#xA;&#x9;, @Column2Name as varchar(max)&#xA;&#x9;, @Column3Name as varchar(max)&#xA;&#x9;, @Column4Name as varchar(max)&#xA;&#x9;, @Column5Name as varchar(max)&#xA;&#x9;, @Column6Name as varchar(max)&#xA;&#x9;, @Column7Name as varchar(max)&#xA;&#x9;, @Column8Name as varchar(max)&#xA;&#x9;, @Column9Name as varchar(max)&#xA;&#x9;, @Column10Name as varchar(max)&#xA;&#x9;, @Column11Name as varchar(max)&#xA;&#x9;, @Column12Name as varchar(max)&#xA;&#x9;, @Column13Name as varchar(max)&#xA;&#x9;, @Column14Name as varchar(max)&#xA;&#x9;, @Column15Name as varchar(max)&#xA;&#x9;, @Column16Name as varchar(max)&#xA;&#x9;, @Column17Name as varchar(max)&#xA;&#x9;, @Column18Name as varchar(max)&#xA;&#x9;, @Column19Name as varchar(max)&#xA;&#x9;, @Column20Name as varchar(max)&#xA;&#xA;&#x9;, @Column0Type as varchar(max)&#xA;&#x9;, @Column1Type as varchar(max)&#xA;&#x9;, @Column2Type as varchar(max)&#xA;&#x9;, @Column3Type as varchar(max)&#xA;&#x9;, @Column4Type as varchar(max)&#xA;&#x9;, @Column5Type as varchar(max)&#xA;&#x9;, @Column6Type as varchar(max)&#xA;&#x9;, @Column7Type as varchar(max)&#xA;&#x9;, @Column8Type as varchar(max)&#xA;&#x9;, @Column9Type as varchar(max)&#xA;&#x9;, @Column10Type as varchar(max)&#xA;&#x9;, @Column11Type as varchar(max)&#xA;&#x9;, @Column12Type as varchar(max)&#xA;&#x9;, @Column13Type as varchar(max)&#xA;&#x9;, @Column14Type as varchar(max)&#xA;&#x9;, @Column15Type as varchar(max)&#xA;&#x9;, @Column16Type as varchar(max)&#xA;&#x9;, @Column17Type as varchar(max)&#xA;&#x9;, @Column18Type as varchar(max)&#xA;&#x9;, @Column19Type as varchar(max)&#xA;&#x9;, @Column20Type as varchar(max)&#xA;&#xA;&#x9;, @SQL1 as nvarchar(max)&#xA;&#x9;, @SQL2 as nvarchar(max)&#xA;&#x9;, @SQL3 as nvarchar(max)&#xA;&#x9;, @SQL4a as nvarchar(max)&#xA;&#x9;, @SQL4b as nvarchar(max)&#xA;&#x9;, @SQL4c as nvarchar(max)&#xA;&#xA;if ? like '%Define_%' and ? like '%_Results%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblDefineResults'&#xA;&#x9;end&#xA;if ? like '%Define_%' and ? like '%_Clinical%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblDefineClinical'&#xA;&#x9;end&#xA;if ? like '%Define_%' and ? like '%_Referral%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblDefineReferral'&#xA;&#x9;end&#xA;if ? like '%Define_%' and ? like '%_Test%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblDefineTest'&#xA;&#x9;end&#xA;if ? like '%Extract_Additional%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblAdditional'&#xA;&#x9;end&#xA;if ? like '%Extract_Clinical%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblClinical'&#xA;&#x9;end&#xA;if ? like '%Extract_Consultation%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblConsultation'&#xA;&#x9;end&#xA;if ? like '%Extract_Immunisation%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblImmunisation'&#xA;&#x9;end&#xA;if ? like '%Extract_Patient%'&#xA;begin&#xA;&#x9;set @TargetTable = 'tblPatient'&#xA;end&#xA;if ? like '%Extract_Practice%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblPractice'&#xA;&#x9;end&#xA;if ? like '%Extract_Referral%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblReferral'&#xA;&#x9;end&#xA;if ? like '%Extract_Staff%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblStaff'&#xA;&#x9;end&#xA;if ? like '%Extract_Test%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblTest'&#xA;&#x9;end&#xA;if ? like '%Extract_Therapy%'&#xA;&#x9;begin&#xA;&#x9;&#x9;set @TargetTable = 'tblTherapy'&#xA;&#x9;end&#xA;&#xA;if @TargetTable is not null &#xA;begin&#xA;&#xA;set @Column0Name = (select top 1 Column0 from tblUploadStage where ID = 1)&#xA;set @Column1Name = (select top 1 Column1 from tblUploadStage where ID = 1)&#xA;set @Column2Name = (select top 1 Column2 from tblUploadStage where ID = 1)&#xA;set @Column3Name = (select top 1 Column3 from tblUploadStage where ID = 1)&#xA;set @Column4Name = (select top 1 Column4 from tblUploadStage where ID = 1)&#xA;set @Column5Name = (select top 1 Column5 from tblUploadStage where ID = 1)&#xA;set @Column6Name = (select top 1 Column6 from tblUploadStage where ID = 1)&#xA;set @Column7Name = (select top 1 Column7 from tblUploadStage where ID = 1)&#xA;set @Column8Name = (select top 1 Column8 from tblUploadStage where ID = 1)&#xA;set @Column9Name = (select top 1 Column9 from tblUploadStage where ID = 1)&#xA;set @Column10Name = (select top 1 Column10 from tblUploadStage where ID = 1)&#xA;set @Column11Name = (select top 1 Column11 from tblUploadStage where ID = 1)&#xA;set @Column12Name = (select top 1 Column12 from tblUploadStage where ID = 1)&#xA;set @Column13Name = (select top 1 Column13 from tblUploadStage where ID = 1)&#xA;set @Column14Name = (select top 1 Column14 from tblUploadStage where ID = 1)&#xA;set @Column15Name = (select top 1 Column15 from tblUploadStage where ID = 1)&#xA;set @Column16Name = (select top 1 Column16 from tblUploadStage where ID = 1)&#xA;set @Column17Name = (select top 1 Column17 from tblUploadStage where ID = 1)&#xA;set @Column18Name = (select top 1 Column18 from tblUploadStage where ID = 1)&#xA;set @Column19Name = (select top 1 Column19 from tblUploadStage where ID = 1)&#xA;set @Column20Name = (select top 1 Column20 from tblUploadStage where ID = 1)&#xA;&#xA;set @Column0Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column0Name)&#xA;set @Column1Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column1Name)&#xA;set @Column2Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column2Name)&#xA;set @Column3Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column3Name)&#xA;set @Column4Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column4Name)&#xA;set @Column5Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column5Name)&#xA;set @Column6Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column6Name)&#xA;set @Column7Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column7Name)&#xA;set @Column8Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column8Name)&#xA;set @Column9Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column9Name)&#xA;set @Column10Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column10Name)&#xA;set @Column11Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column11Name)&#xA;set @Column12Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column12Name)&#xA;set @Column13Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column13Name)&#xA;set @Column14Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column14Name)&#xA;set @Column15Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column15Name)&#xA;set @Column16Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column16Name)&#xA;set @Column17Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column17Name)&#xA;set @Column18Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column18Name)&#xA;set @Column19Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column19Name)&#xA;set @Column20Type = (select DataType from dbo.TableColumnDataType where TableName = @TargetTable and ColumnName = @Column20Name)&#xA;&#xA;if OBJECT_ID ('tempdb.dbo.##t') is not null&#xA;drop table ##t&#xA;&#xA;if isnull (@Column0Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = 'create table ##t (' + @Column0Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = 'insert into ##t select Column0'&#xA;&#x9;set @SQL4a = 'insert into dbo.' + @TargetTable + ' (' + @Column0Name&#xA;&#x9;set @SQL4b = 'select convert (' + @Column0Type + ', nullif(' + @Column0Name + ', ''''))'&#xA;&#x9;set @SQL4c = 'where not exists (select ' + @Column0Name&#xA;end&#xA;&#xA;if isnull (@Column1Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column1Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column1'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column1Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column1Type + ', nullif(' + @Column1Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column1Name&#xA;end&#xA;&#xA;if isnull (@Column2Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column2Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column2'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column2Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column2Type + ', nullif(' + @Column2Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column2Name&#xA;end&#xA;&#xA;&#xA;if isnull (@Column3Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column3Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column3'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column3Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column3Type + ', nullif(' + @Column3Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column3Name&#xA;end&#xA;&#xA;if isnull (@Column4Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column4Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column4'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column4Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column4Type + ', nullif(' + @Column4Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column4Name&#xA;end&#xA;&#xA;if isnull (@Column5Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column5Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column5'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column5Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column5Type + ', nullif(' + @Column5Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column5Name&#xA;end&#xA;&#xA;if isnull (@Column6Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column6Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column6'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column6Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column6Type + ', nullif(' + @Column6Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column6Name&#xA;end&#xA;&#xA;if isnull (@Column7Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column7Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column7'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column7Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column7Type + ', nullif(' + @Column7Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column7Name&#xA;end&#xA;&#xA;if isnull (@Column8Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column8Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column8'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column8Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column8Type + ', nullif(' + @Column8Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column8Name&#xA;end&#xA;&#xA;if isnull (@Column9Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column9Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column9'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column9Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column9Type + ', nullif(' + @Column9Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column9Name&#xA;end&#xA;&#xA;if isnull (@Column10Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column10Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column10'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column10Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column10Type + ', nullif(' + @Column10Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column10Name&#xA;end&#xA;&#xA;if isnull (@Column11Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column11Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column11'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column11Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column11Type + ', nullif(' + @Column11Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column11Name&#xA;end&#xA;&#xA;if isnull (@Column12Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column12Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column12'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column12Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column12Type + ', nullif(' + @Column12Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column12Name&#xA;end&#xA;&#xA;if isnull (@Column13Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column13Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column13'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column13Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column13Type + ', nullif(' + @Column13Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column13Name&#xA;end&#xA;&#xA;if isnull (@Column14Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column14Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column14'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column14Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column14Type + ', nullif(' + @Column14Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column14Name&#xA;end&#xA;&#xA;if isnull (@Column15Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column15Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column15'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column15Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column15Type + ', nullif(' + @Column15Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column15Name&#xA;end&#xA;&#xA;if isnull (@Column16Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column16Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column16'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column16Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column16Type + ', nullif(' + @Column16Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column16Name&#xA;end&#xA;&#xA;if isnull (@Column17Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column17Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column17'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column17Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column17Type + ', nullif(' + @Column17Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column17Name&#xA;end&#xA;&#xA;if isnull (@Column18Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column18Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column18'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column18Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column18Type + ', nullif(' + @Column18Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column18Name&#xA;end&#xA;&#xA;if isnull (@Column19Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column19Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column19'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column19Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column19Type + ', nullif(' + @Column19Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column19Name&#xA;end&#xA;&#xA;if isnull (@Column20Name, '') &lt;&gt; ''&#xA;begin&#xA;&#x9;set @SQL1 = @SQL1 + ', ' + @Column20Name + ' varchar(max)'&#xA;&#x9;set @SQL2 = @SQL2 + ', Column20'&#xA;&#x9;set @SQL4a = @SQL4a + ', ' + @Column20Name&#xA;&#x9;set @SQL4b = @SQL4b + ', convert(' + @Column20Type + ', nullif(' + @Column20Name + ', ''''))'&#xA;&#x9;set @SQL4c = @SQL4c + ', ' + @Column20Name&#xA;end&#xA;&#xA;set @SQL1 = @SQL1 + ')'&#xA;set @SQL2 = @SQL2 + ' from tblUploadStage'&#xA;set @SQL3 = 'delete from ##t where ' + @Column0Name + ' = (select top 1 Column0 from tblUploadStage where ID = 1)'&#xA;set @SQL4a = @SQL4a + ') '&#xA;set @SQL4b = @SQL4a + @SQL4b + ' from ##t tmp '&#xA;set @SQL4c = @SQL4b + @SQL4c + ' from dbo.' + @TargetTable + ' tgt where tmp.' + @Column0Name + ' = tgt.' + @Column0Name + ')'&#xA;&#xA;print @SQL1&#x9;&#x9;--create table ##t (patid varchar(max), eventdate varchar(max), sysdate varchar(max), constype varchar(max), consid varchar(max), medcode varchar(max), staffid varchar(max), textid varchar(max), episode varchar(max), enttype varchar(max), adid varchar(max))&#xA;exec sp_executesql @SQL1&#xA;&#xA;print @SQL2&#x9;&#x9;--insert into ##t select Column0, Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10 from tblUploadStage&#xA;exec sp_executesql @SQL2&#xA;&#xA;print @SQL3&#x9;&#x9;--delete from ##t where patid = (select top 1 Column0 from tblUploadStage where ID = 1)&#xA;exec sp_executesql @SQL3&#xA;&#xA;print @SQL4c&#x9;--insert into dbo.tblClinical (patid, eventdate, sysdate, constype, consid, medcode, staffid, textid, episode, enttype, adid) &#xA;&#x9;&#x9;&#x9;&#x9;--select convert (bigint, nullif(patid, '')), convert(datetime, nullif(eventdate, '')), convert(datetime, nullif(sysdate, '')), convert(smallint, nullif(constype, '')), convert(bigint, nullif(consid, '')), convert(bigint, nullif(medcode, '')), convert(bigint, nullif(staffid, '')), convert(varchar(50), nullif(textid, '')), convert(smallint, nullif(episode, '')), convert(int, nullif(enttype, '')), convert(bigint, nullif(adid, '')) from ##t tmp &#xA;&#x9;&#x9;&#x9;&#x9;--where not exists (select patid, eventdate, sysdate, constype, consid, medcode, staffid, textid, episode, enttype, adid from dbo.tblClinical tgt where tmp.patid = tgt.patid)&#xA;exec sp_executesql @SQL4c&#xA;&#xA;if OBJECT_ID ('tempdb.dbo.##t') is not null&#xA;drop table ##t&#xA;&#xA;truncate table [dbo].[tblUploadStage]&#xA;&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="9"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="10"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="11"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="12"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="13"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="14"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="15"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="16"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="17"
                SQLTask:DtsVariableName="User::varFileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Patient Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{108334c2-9806-4058-83bc-a415247d642f}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Patient Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Patient", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column20]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column20"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column20]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column19]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column19"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column19]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column18]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column18"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column18]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column17]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column17"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column17]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column16]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column16"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column16]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column15]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column15"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column15]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column14]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column14"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column14]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column13]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column11]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column10]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Patient Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                    this.Output0Buffer.Column10 = columns.Length > 10 ? columns[10] : null;
                    this.Output0Buffer.Column11 = columns.Length > 11 ? columns[11] : null;
                    this.Output0Buffer.Column12 = columns.Length > 12 ? columns[12] : null;
                    this.Output0Buffer.Column13 = columns.Length > 13 ? columns[13] : null;
                    this.Output0Buffer.Column14 = columns.Length > 14 ? columns[14] : null;
                    this.Output0Buffer.Column15 = columns.Length > 15 ? columns[15] : null;
                    this.Output0Buffer.Column16 = columns.Length > 16 ? columns[16] : null;
                    this.Output0Buffer.Column17 = columns.Length > 17 ? columns[17] : null;
                    this.Output0Buffer.Column18 = columns.Length > 18 ? columns[18] : null;
                    this.Output0Buffer.Column19 = columns.Length > 19 ? columns[19] : null;
                    this.Output0Buffer.Column20 = columns.Length > 20 ? columns[20] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column20
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column20_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column19
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column19_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column18
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column18_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column17
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column17_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column16
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column16_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column15
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column15_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column14
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column14_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column13
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column13_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column12
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column11
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column11_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column10
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Column10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column9
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[20] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties.Settings.get_Default():SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties.Sett" +
    "ings")]

namespace SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_e0bd138e55364ff48bdae05edb3cc4bc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CA063578-FB32-4B01-A1A0-1CE56237DB11}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e0bd138e55364ff48bdae05edb3cc4bc</RootNamespace>
    <AssemblyName>SC_e0bd138e55364ff48bdae05edb3cc4bc</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_e0bd138e55364ff48bdae05edb3cc4bc</msb:CodeName>
		<msb:DisplayName>SC_e0bd138e55364ff48bdae05edb3cc4bc</msb:DisplayName>
		<msb:ProjectId>{CDFCC9F5-CB1D-40DF-9368-CC066ABD61C3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_e0bd138e55364ff48bdae05edb3cc4bc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e0bd138e55364ff48bdae05edb3cc4bc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_e0bd138e55364ff48bdae05edb3cc4bc")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e0bd138e55364ff48bdae05edb3cc4bc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_e0bd138e55364ff48bdae05edb3cc4bc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMwhG1gAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAxkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHRBAABPAAAAAGAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAzCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACo
QQAAAAAAAEgAAAACAAUASCcAAHQZAAABAAAAAAAAALxAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG86AAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAGECAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4PgIAAAJ7AwAABBY+GAIAAAZvFQAAChY+DAIAAAJ7BgAABG8xAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaaby8AAAYCewYAAAQHjmkXMAMUKwMHF5pvLQAABgJ7BgAABAeOaRgw
AxQrAwcYmm8rAAAGAnsGAAAEB45pGTADFCsDBxmabykAAAYCewYAAAQHjmkaMAMUKwMHGppvJwAA
BgJ7BgAABAeOaRswAxQrAwcbmm8lAAAGAnsGAAAEB45pHDADFCsDBxyabyMAAAYCewYAAAQHjmkd
MAMUKwMHHZpvIQAABgJ7BgAABAeOaR4wAxQrAwcemm8fAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
HQAABgJ7BgAABAeOaR8KMAMUKwQHHwqabxsAAAYCewYAAAQHjmkfCzADFCsEBx8Lmm8ZAAAGAnsG
AAAEB45pHwwwAxQrBAcfDJpvFwAABgJ7BgAABAeOaR8NMAMUKwQHHw2abxUAAAYCewYAAAQHjmkf
DjADFCsEBx8Omm8TAAAGAnsGAAAEB45pHw8wAxQrBAcfD5pvEQAABgJ7BgAABAeOaR8QMAMUKwQH
HxCabw8AAAYCewYAAAQHjmkfETADFCsEBx8Rmm8NAAAGAnsGAAAEB45pHxIwAxQrBAcfEppvCwAA
BgJ7BgAABAeOaR8TMAMUKwQHHxOabwkAAAYCewYAAAQHjmkfFDADFCsEBx8Umm8HAAAGAgJ7AwAA
BBdYfQMAAAQCewEAAARvFAAACgoGOrz9//8qSgIoFwAACgJ7AQAABG8YAAAKKjoCF30DAAAEAig0
AAAGKioCAwQFKBkAAAoqJgIWAygaAAAKKloDLAgCFigbAAAKKnIFAABwcxwAAAp6JgIXAygaAAAK
KloDLAgCFygbAAAKKnIFAABwcxwAAAp6JgIYAygaAAAKKloDLAgCGCgbAAAKKnIFAABwcxwAAAp6
JgIZAygaAAAKKloDLAgCGSgbAAAKKnIFAABwcxwAAAp6JgIaAygaAAAKKloDLAgCGigbAAAKKnIF
AABwcxwAAAp6JgIbAygaAAAKKloDLAgCGygbAAAKKnIFAABwcxwAAAp6JgIcAygaAAAKKloDLAgC
HCgbAAAKKnIFAABwcxwAAAp6JgIdAygaAAAKKloDLAgCHSgbAAAKKnIFAABwcxwAAAp6JgIeAyga
AAAKKloDLAgCHigbAAAKKnIFAABwcxwAAAp6KgIfCQMoGgAACipeAywJAh8JKBsAAAoqcgUAAHBz
HAAACnoqAh8KAygaAAAKKl4DLAkCHwooGwAACipyBQAAcHMcAAAKeioCHwsDKBoAAAoqXgMsCQIf
CygbAAAKKnIFAABwcxwAAAp6KgIfDAMoGgAACipeAywJAh8MKBsAAAoqcgUAAHBzHAAACnoqAh8N
AygaAAAKKl4DLAkCHw0oGwAACipyBQAAcHMcAAAKeioCHw4DKBoAAAoqXgMsCQIfDigbAAAKKnIF
AABwcxwAAAp6KgIfDwMoGgAACipeAywJAh8PKBsAAAoqcgUAAHBzHAAACnoqAh8QAygaAAAKKl4D
LAkCHxAoGwAACipyBQAAcHMcAAAKeioCHxEDKBoAAAoqXgMsCQIfESgbAAAKKnIFAABwcxwAAAp6
KgIfEgMoGgAACipeAywJAh8SKBsAAAoqcgUAAHBzHAAACnoqAh8TAygaAAAKKl4DLAkCHxMoGwAA
CipyBQAAcHMcAAAKeioCHxQDKBoAAAoqXgMsCQIfFCgbAAAKKnIFAABwcxwAAAp6HgIoHQAACioe
AigeAAAKKh4CKB8AAAoqfgIoIAAACgICczkAAAZ9BAAABAICczsAAAZ9BQAABCoGKm4CewYAAAQs
EgJ7BgAABG8yAAAGAhR9BgAABCoAAAATMAUASQAAAAMAABEWCisuBAaUDgRyogAAcCghAAAKMxkC
BQaaAgQGlCgiAAAKDgRzBgAABn0GAAAEBhdYCgYDMs4CbzgAAAYCbzUAAAYCKDYAAAYqOgIoIwAA
CgIDfQcAAAQqggJ7BwAABG8kAAAKbyUAAApytAAAcG8mAAAKbycAAAoqOgIoIwAACgIDfQgAAAQq
HgIoIwAACiqufgkAAAQtHnLKAABw0AcAAAIoKAAACm8pAAAKcyoAAAqACQAABH4JAAAEKhp+CgAA
BCoeAoAKAAAEKhp+CwAABCoeAigrAAAKKi5zQQAABoALAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAABAsAACN+AABwCwAAqAoAACNTdHJpbmdzAAAAABgWAAA8AQAAI1VT
AFQXAAAQAAAAI0dVSUQAAABkFwAAEAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAA
AQAAACQAAAAIAAAACwAAAEIAAAA1AAAAKwAAABAAAAADAAAABAAAAC4AAAAvAAAAAQAAAAYAAAAB
AAAAAADQBAEAAAAAAAYAsQPBCAYARQTBCAYA/QKuCA8ANQkAAAYAKgP3BgYAlAP3BgYAdQP3BgYA
LAT3BgYA0QP3BgYA6gP3BgYAQQP3BgYAXAOABAoABQREAgYAzweLAQYA6AmjBg4AVgBGCAoADwhE
AhIAAAhEAgoAcAdEAgoALgpEAgYA4AKuCAYAIAjhCAYAZAfWBhYAsAK6BBYAEQO6BBYAkgLBBgYA
xQLBCAYAmgSjBgYA3AeLAQYASgejBhoAAQBuCBoAGgBuCBoAPQBuCAYAZQKjBgYA/AGjBgYAnwr3
BgAAAAB2AQAAAAABAAEAAQAQALYGAAAQAAEAAQABABAA8gcAAEUABAAGAAEAEAAQCgAAUQAEADQA
AQAQALIJAAA9AAcAOQABABAAcwkAAD0ACAA7AAAAEADoCEQJPQAJADwAAAEQAKIJRAlpAAsAQAAB
AOcHpgABAKEEqgABALgErQAGALIJsAAGAHMJtAAGAPIHuAABAB4KvAABAB4KvAARAKoGwAARAIIC
xAARAOwByABQIAAAAADGAKsJzAABAHsgAAAAAMYAYwQGAAIAlCAAAAAAxgDUCQYAAgABIwAAAADG
AG4EBgACABQjAAAAAIYYlwgGAAIAIyMAAAAAhhiXCEEAAgAuIwAAAACGCHwAEAAFADgjAAAAAIYI
DAXRAAYATyMAAAAAhghdARAABwBZIwAAAACGCGsG0QAIAHAjAAAAAIYIRAEQAAkAeiMAAAAAhghE
BtEACgCRIwAAAACGCCsBEAALAJsjAAAAAIYIHQbRAAwAsiMAAAAAhggSARAADQC8IwAAAACGCPYF
0QAOANMjAAAAAIYI+QAQAA8A3SMAAAAAhgjPBdEAEAD0IwAAAACGCOAAEAARAP4jAAAAAIYIqAXR
ABIAFSQAAAAAhgjHABAAEwAfJAAAAACGCIEF0QAUADYkAAAAAIYIrgAQABUAQCQAAAAAhghaBdEA
FgBXJAAAAACGCJUAEAAXAGIkAAAAAIYIMwXRABgAeiQAAAAAhghvABAAGQCFJAAAAACGCPgE0QAa
AJ0kAAAAAIYIagEQABsAqCQAAAAAhgh/BtEAHADAJAAAAACGCFEBEAAdAMskAAAAAIYIWAbRAB4A
4yQAAAAAhgg4ARAAHwDuJAAAAACGCDEG0QAgAAYlAAAAAIYIHwEQACEAESUAAAAAhggKBtEAIgAp
JQAAAACGCAYBEAAjADQlAAAAAIYI4wXRACQATCUAAAAAhgjtABAAJQBXJQAAAACGCLwF0QAmAG8l
AAAAAIYI1AAQACcAeiUAAAAAhgiVBdEAKACSJQAAAACGCLsAEAApAJ0lAAAAAIYIbgXRACoAtSUA
AAAAhgiiABAAKwDAJQAAAACGCEcF0QAsANglAAAAAIYIiQAQAC0A4yUAAAAAhgggBdEALgD7JQAA
AACGAIgKBgAvAAMmAAAAAIYA7wkGAC8ACyYAAAAAhgDyCVEALwATJgAAAACGGJcIBgAvADMmAAAA
AMYBxgkGAC8ANSYAAAAAgQDYAQYALwBUJgAAAADGAHwK1gAvADMmAAAAAMYB1AkGADMAqSYAAAAA
hhiXCOIAMwC4JgAAAACGCCkHeAA0ANkmAAAAAIYYlwjiADQA6CYAAAAAgxiXCAYANQDwJgAAAACT
CBwI6AA1ABwnAAAAAJMIagLtADUAIycAAAAAkwh2AvIANQArJwAAAACWCAQK+AA2ADInAAAAAIYY
lwgGADYAOicAAAAAkRidCP0ANgAAAAEA6wYAAAEAFQgAAAIAfQkAAAMAfgcAAAEAegQAAAEAegQA
AAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEA
egQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQA
AAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEA
egQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQAAAEAegQA
AAEAegQAAAEAegQAAAEAzAkAAAIApAgAAAMAvgkAAAQAfgcAAAEANAoAAAEANAoAAAEAegQJAJcI
AQARAJcIBgAZAJcICgApAJcIEAAxAJcIEAA5AJcIEABBAJcIEABJAJcIEABRAJcIEABZAJcIEABh
AJcIEABpAJcIBgCpAJcIBgDJAJcIFQDZAJcIBgCBADgHIAChAGMEBgBxAJcIEADhAI8KLQDpADsC
MgDhAK0ENgDhAP4JOgChAG4EBgDpAKoCBgCJAJcIQQCJAJoGSwCJAJIGAQDxAJcIEACJAIgKBgCJ
AO8JBgCJAPIJUQChAJcIBgChAH8BWQChAJEJYAB5AJcIBgChAJUBZgD5AAkHawABASACcQAJATAI
eAARAQ4CfQARAZsKhgCxAJcIjADRAJcIBgAuAAsAHQEuABMAJgEuABsARQEuACMATgEuACsAdwEu
ADMAdwEuADsAfQEuAEMATgEuAEsAlgEuAFMAdwEuAFsAwAFDAGMACgLjAGsACgJhAXsACgKJBXMA
RQGpBXMARQEbACUAVQADAAEABQArAAcALAAIAC4AAACAAAEBAAAQBQUBAABhAQEBAABvBgUBAABI
AQEBAABIBgUBAAAvAQEBAAAhBgUBAAAWAQEBAAD6BQUBAAD9AAEBAADTBQUBAADkAAEBAACsBQUB
AADLAAEBAACFBQUBAACyAAEBAABeBQUBAACZAAEBAAA3BQUBAABzAAEBAAD8BAUBAABuAQEBAACD
BgUBAABVAQEBAABcBgUBAAA8AQEBAAA1BgUBAAAjAQEBAAAOBgUBAAAKAQEBAADnBQUBAADxAAEB
AADABQUBAADYAAEBAACZBQUBAAC/AAEBAAByBQUBAACmAAEBAABLBQUBAACNAAEBAAAkBQUBAAA/
BwkBAAAgCA4BAACKAhMBAAAIChgBAQAHAAMAAQAIAAUAAQAJAAcAAQAKAAkAAQALAAsAAQAMAA0A
AQANAA8AAQAOABEAAQAPABMAAQAQABUAAQARABcAAQASABkAAQATABsAAQAUAB0AAQAVAB8AAQAW
ACEAAQAXACMAAQAYACUAAQAZACcAAQAaACkAAQAbACsAAQAcAC0AAQAdAC8AAQAeADEAAQAfADMA
AQAgADUAAQAhADcAAQAiADkAAQAjADsAAQAkAD0AAQAlAD8AAQAmAEEAAQAnAEMAAQAoAEUAAQAp
AEcAAQAqAEkAAQArAEsAAQAsAE0AAQAtAE8AAQAuAFEAAQAvAFMAAQAwAFUAAgA6AFcAAgA9AFkA
AgA+AFsAAQA/AFsAAgBAAF0ABIAAAAEAAAAAAAAAAAAAAAAAtAEAAAQAAAAAAAAAAAAAAJQAqwEA
AAAADQAAAAAAAAAAAAAAnQA+CgAAAAANAAAAAAAAAAAAAACdAIgHAAAAAA0AAAAAAAAAAAAAAJ0A
WwoAAAAABAAAAAAAAAAAAAAAlACjBgAAAAANAAAAAAAAAAAAAACdAKsHAAAAAAAAAAABAAAA8ggA
AAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0
aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAA
c2V0X0NvbHVtbjEwAHNldF9Db2x1bW4yMABzZXRfQ29sdW1uMABzZXRfQ29sdW1uMTEAc2V0X0Nv
bHVtbjEAc2V0X0NvbHVtbjEyAHNldF9Db2x1bW4yAHNldF9Db2x1bW4xMwBzZXRfQ29sdW1uMwBz
ZXRfQ29sdW1uMTQAc2V0X0NvbHVtbjQAc2V0X0NvbHVtbjE1AHNldF9Db2x1bW41AHNldF9Db2x1
bW4xNgBzZXRfQ29sdW1uNgBzZXRfQ29sdW1uMTcAc2V0X0NvbHVtbjcAc2V0X0NvbHVtbjE4AHNl
dF9Db2x1bW44AHNldF9Db2x1bW4xOQBzZXRfQ29sdW1uOQA8TW9kdWxlPgBHZXRPdXRwdXRJRABT
eXN0ZW0uSU8AZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFNDX2UwYmQxMzhlNTUzNjRm
ZjQ4YmRhZTA1ZWRiM2NjNGJjAE1hcmtPdXRwdXRzRmluaXNoZWQAZGVmYXVsdEluc3RhbmNlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlO
YW1lAFJlYWRMaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AENsb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3JjRmlsZVBh
dGgAZ2V0X0xlbmd0aABpAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19lMGJkMTM4ZTU1MzY0ZmY0
OGJkYWUwNWVkYjNjYzRiYy5kbGwAc2V0X0NvbHVtbjEwX0lzTnVsbABzZXRfQ29sdW1uMjBfSXNO
dWxsAHNldF9Db2x1bW4wX0lzTnVsbABzZXRfQ29sdW1uMTFfSXNOdWxsAHNldF9Db2x1bW4xX0lz
TnVsbABzZXRfQ29sdW1uMTJfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABzZXRfQ29sdW1uMTNf
SXNOdWxsAHNldF9Db2x1bW4zX0lzTnVsbABzZXRfQ29sdW1uMTRfSXNOdWxsAHNldF9Db2x1bW40
X0lzTnVsbABzZXRfQ29sdW1uMTVfSXNOdWxsAHNldF9Db2x1bW41X0lzTnVsbABzZXRfQ29sdW1u
MTZfSXNOdWxsAHNldF9Db2x1bW42X0lzTnVsbABzZXRfQ29sdW1uMTdfSXNOdWxsAHNldF9Db2x1
bW43X0lzTnVsbABzZXRfQ29sdW1uMThfSXNOdWxsAHNldF9Db2x1bW44X0lzTnVsbABzZXRfQ29s
dW1uMTlfSXNOdWxsAHNldF9Db2x1bW45X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQBy
ZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlv
bkNvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24ASW52YWxpZE9wZXJh
dGlvbkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxp
bmVXcmFwAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAHRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQ
aXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVj
dGlvbk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElE
cwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNDX2UwYmQxMzhlNTUzNjRmZjQ4YmRhZTA1ZWRiM2NjNGJjLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19lMGJkMTM4ZTU1MzY0ZmY0
OGJkYWUwNWVkYjNjYzRiYy5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVz
AEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmlu
aXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxp
dABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABQcmltZU91dHB1dABBZGRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AAADLAAA
gJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBl
AHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQA
bwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAg
ADAAABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBDAF8AZQAwAGIAZAAxADMAOABlADUANQAzADYA
NABmAGYANAA4AGIAZABhAGUAMAA1AGUAZABiADMAYwBjADQAYgBjAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABkTBlYSZA3SKRROVX6TgE7AAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFhBAcBEkEEIAEcHAcHAw4dDh0DBCAAHQMDIAAOAyAACAYgAR0OHQMJIAMBEkkd
CBJNBSACAQgcAyAAAgMHAQgGAAIIEk0OBSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEkEIAAES
gIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBg4CBggDBhIUAwYSGAMG
EgwDBhJRAwYSWQMGEl0DBhIgBCABARwEIAEBAgsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0F
AAEBEl0EAAASIAMAAAEDKAAOAygAAgQoABJBBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19lMGJkMTM4ZTU1MzY0ZmY0
OGJkYWUwNWVkYjNjYzRiYwAABQEAAAAAGAEAE1VuaXZlcnNpdHkgb2YgTGVlZHMAACkBACRDb3B5
cmlnaHQgQCBVbml2ZXJzaXR5IG9mIExlZWRzIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAJxBAAAAAAAAAAAAALZBAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoQQAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ADgEAAAAAAAAAAAAADgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sASYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB0AwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAASAAUAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAABVAG4AaQB2AGUAcgBzAGkAdAB5ACAAbwBmACAATABlAGUAZABzAAAAcAAkAAEARgBp
AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGUAMABiAGQAMQAzADgAZQA1ADUA
MwA2ADQAZgBmADQAOABiAGQAYQBlADAANQBlAGQAYgAzAGMAYwA0AGIAYwAAADAACAABAEYAaQBs
AGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEA
bABOAGEAbQBlAAAAUwBDAF8AZQAwAGIAZAAxADMAOABlADUANQAzADYANABmAGYANAA4AGIAZABh
AGUAMAA1AGUAZABiADMAYwBjADQAYgBjAC4AZABsAGwAAABuACUAAQBMAGUAZwBhAGwAQwBvAHAA
eQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABVAG4AaQB2AGUAcgBzAGkAdAB5
ACAAbwBmACAATABlAGUAZABzACAAMgAwADEANgAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBDAF8AZQAwAGIAZAAxADMAOABlADUANQAzADYANABmAGYANAA4AGIAZABhAGUAMAA1AGUA
ZABiADMAYwBjADQAYgBjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAQwBfAGUAMABiAGQAMQAzADgAZQA1ADUAMwA2ADQAZgBmADQAOABiAGQAYQBlADAANQBlAGQA
YgAzAGMAYwA0AGIAYwAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADIMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_e0bd138e55364ff48bdae05edb3cc4bc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">691984a05a093cc66879ab8a7c1417c8</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">3d148e31117a0057973a81eaf2ae6cbef311727f</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Patient]"
                      connectionManagerRefId="Package.ConnectionManagers[Patient]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column20]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column20]"
                          name="Column20" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column19]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column19]"
                          name="Column19" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column18]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column18]"
                          name="Column18" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column17]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column17]"
                          name="Column17" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column16]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column16]"
                          name="Column16" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column15]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column15]"
                          name="Column15" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column14]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column14]"
                          name="Column14" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column13]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column13]"
                          name="Column13" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column12]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column12]"
                          name="Column12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column11]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column11]"
                          name="Column11" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column10]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column10]"
                          name="Column10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column20]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column20"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column20]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",21),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",21),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column19]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column19"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column19]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",20),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",20),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column18]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column18"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column18]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",19),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",19),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column17]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column17"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column17]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",18),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",18),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column16]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column16"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column16]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",17),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",17),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column15]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column15"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column15]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",16),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",16),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column14]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column14"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column14]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",15),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",15),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column13]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",14),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",14),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column12]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",13),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",13),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column11]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",12),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",12),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column10]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",11),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",11),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Patient Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Patient Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Patient Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Practice Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{4a10f019-ff70-483b-bb85-ce93190e3b07}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Practice Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Practice", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump into tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Practice Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a9220e9229bf41ae8697b585efff8186.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{115b9558-4187-4b1d-aa78-efd33e826329}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a9220e9229bf41ae8697b585efff8186</RootNamespace>
    <AssemblyName>SC_a9220e9229bf41ae8697b585efff8186</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a9220e9229bf41ae8697b585efff8186" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a9220e9229bf41ae8697b585efff8186.Properties.Settings.get_Default():SC_a9220e9229bf41ae8697b585efff8186.Properties.Sett" +
    "ings")]

namespace SC_a9220e9229bf41ae8697b585efff8186.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column3
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_a9220e9229bf41ae8697b585efff8186</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_a9220e9229bf41ae8697b585efff8186</msb:DisplayName>
		<msb:ProjectId>{CEC0E3B7-1D49-4680-9E5E-34540C9DE360}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a9220e9229bf41ae8697b585efff8186.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a9220e9229bf41ae8697b585efff8186")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_a9220e9229bf41ae8697b585efff8186")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a9220e9229bf41ae8697b585efff8186.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a9220e9229bf41ae8697b585efff8186.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a9220e9229bf41ae8697b585efff8186.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a9220e9229bf41ae8697b585efff8186.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a9220e9229bf41ae8697b585efff8186.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a9220e9229bf41ae8697b585efff8186.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPyZHFgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAcjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACA3AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAeBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABU
NwAAAAAAAEgAAAACAAUAWCMAABATAAABAAAAAAAAAGg2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8YAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADALwAAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4mQAAAAJ7AwAABBYxdgZvFQAAChYxbQJ7BgAABG8PAAAGBghvFgAACgsCewYA
AAQHji0DFCsDBxaabw0AAAYCewYAAAQHjmkXMAMUKwMHF5pvCwAABgJ7BgAABAeOaRgwAxQrAwcY
mm8JAAAGAnsGAAAEB45pGTADFCsDBxmabwcAAAYCAnsDAAAEF1h9AwAABAJ7AQAABG8UAAAKCgY6
Yf///ypKAigXAAAKAnsBAAAEbxgAAAoqOgIXfQMAAAQCKBIAAAYqKgIDBAUoGQAACiomAhYDKBoA
AAoqWgMsCAIWKBsAAAoqcgUAAHBzHAAACnomAhcDKBoAAAoqWgMsCAIXKBsAAAoqcgUAAHBzHAAA
CnomAhgDKBoAAAoqWgMsCAIYKBsAAAoqcgUAAHBzHAAACnomAhkDKBoAAAoqWgMsCAIZKBsAAAoq
cgUAAHBzHAAACnoeAigdAAAKKh4CKB4AAAoqHgIoHwAACip+AiggAAAKAgJzFwAABn0EAAAEAgJz
GQAABn0FAAAEKgYqbgJ7BgAABCwSAnsGAAAEbxAAAAYCFH0GAAAEKgATMAUASQAAAAMAABEWCisu
BAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAKDgRzBgAABn0GAAAEBhdYCgYDMs4CbxYAAAYC
bxMAAAYCKBQAAAYqOgIoIwAACgIDfQcAAAQqggJ7BwAABG8kAAAKbyUAAApytAAAcG8mAAAKbycA
AAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkAAAQtHnLKAABw0AcAAAIoKAAACm8pAAAKcyoA
AAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAigrAAAKKi5zHwAABoALAAAEKgAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAxAYAACN+AAAwBwAAhAgAACNTdHJp
bmdzAAAAALQPAAA8AQAAI1VTAPAQAAAQAAAAI0dVSUQAAAAAEQAAEAIAACNCbG9iAAAAAAAAAAIA
AAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAACwAAACAAAAATAAAAKwAAABAAAAADAAAABAAA
AAwAAAANAAAAAQAAAAYAAAABAAAAAAD5AwEAAAAAAAYA2gKcBgYAbgOcBgYAJgKJBg8AEAcAAAYA
UwLSBAYAvQLSBAYAngLSBAYAVQPSBAYA+gLSBAYAEwPSBAYAagLSBAYAhQKpAwoALgNtAQYAqgXY
AAYAwwd+BA4AVgAhBgoA6gVtARIA2wVtAQoASwVtAQoACQhtAQYACQKJBgYA+wW8BgYAPwWxBBYA
2QHjAxYAOgLjAxYAuwGcBAYA7gGcBgYAwwN+BAYAtwXYAAYAJQV+BBoAAQBJBhoAGgBJBhoAPQBJ
BgYAjgF+BAYAJQF+BAYAegjSBAAAAADDAAAAAAABAAEAAQAQAJEEAAAQAAEAAQABABAAzQUAAEUA
BAAGAAEAEADrBwAAUQAEABIAAQAQAI0HAAA9AAcAFwABABAATgcAAD0ACAAZAAAAEADDBh8HPQAJ
ABoAAAEQAH0HHwdpAAsAHgABAMIFpgABAMoDqgABAOEDrQAGAI0HsAAGAE4HtAAGAM0FuAABAPkH
vAABAPkHvAARAIUEwAARAKsBxAARABUByABQIAAAAADGAIYHzAABAHsgAAAAAMYAjAMGAAIAlCAA
AAAAxgCvBwYAAgBcIQAAAADGAJcDBgACAG8hAAAAAIYYcgYGAAIAfiEAAAAAhhhyBkEAAgCJIQAA
AACGCJMAEAAFAJMhAAAAAIYIWgTRAAYAqiEAAAAAhgiHABAABwC0IQAAAACGCEcE0QAIAMshAAAA
AIYIewAQAAkA1SEAAAAAhgg0BNEACgDsIQAAAACGCG8AEAALAPYhAAAAAIYIIQTRAAwADSIAAAAA
hgBjCAYADQAVIgAAAACGAMoHBgANAB0iAAAAAIYAzQdRAA0AJSIAAAAAhhhyBgYADQBFIgAAAADG
AaEHBgANAEciAAAAAIEAAQEGAA0AZCIAAAAAxgBXCNYADQBFIgAAAADGAa8HBgARALkiAAAAAIYY
cgbiABEAyCIAAAAAhggEBXgAEgDpIgAAAACGGHIG4gASAPgiAAAAAIMYcgYGABMAACMAAAAAkwj3
BegAEwAsIwAAAACTCJMB7QATADMjAAAAAJMInwHyABMAOyMAAAAAlgjfB/gAFABCIwAAAACGGHIG
BgAUAEojAAAAAJEYeAb9ABQAAAABAMYEAAABAPAFAAACAFgHAAADAFkFAAABAKMDAAABAKMDAAAB
AKMDAAABAKMDAAABAKMDAAABAKMDAAABAKMDAAABAKMDAAABAKcHAAACAH8GAAADAJkHAAAEAFkF
AAABAA8IAAABAA8IAAABAKMDCQByBgEAEQByBgYAGQByBgoAKQByBhAAMQByBhAAOQByBhAAQQBy
BhAASQByBhAAUQByBhAAWQByBhAAYQByBhAAaQByBgYAqQByBgYAyQByBhUA2QByBgYAgQATBSAA
oQCMAwYAcQByBhAA4QBqCC0A6QBkATIA4QDWAzYA4QDZBzoAoQCXAwYA6QDTAQYAiQByBkEAiQB1
BEsAiQBtBAEA8QByBhAAiQBjCAYAiQDKBwYAiQDNB1EAoQByBgYAoQDMAFkAoQBsB2AAeQByBgYA
oQDiAGYA+QDkBGsAAQFJAXEACQELBngAEQE3AX0AEQF2CIYAsQByBowA0QByBgYALgALAB0BLgAT
ACYBLgAbAEUBLgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4BLgBLAJYBLgBTAHcBLgBbAMAB
QwBjAAoC4wBrAAoCSQFzAEUBYQF7AAoCaQFzAEUBGwAlAFUAAwABAAUACQAHAAoACAAMAAAAlwAB
AQAAXgQFAQAAiwABAQAASwQFAQAAfwABAQAAOAQFAQAAcwABAQAAJQQFAQAAGgUJAQAA+wUOAQAA
swETAQAA4wcYAQEABwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAEADQAPAAEADgAR
AAIAGAATAAIAGwAVAAIAHAAXAAEAHQAXAAIAHgAZAASAAAABAAAAAAAAAAAAAAAAAJ8AAAAEAAAA
AAAAAAAAAACUAPgAAAAAAA0AAAAAAAAAAAAAAJ0AGQgAAAAADQAAAAAAAAAAAAAAnQBjBQAAAAAN
AAAAAAAAAAAAAACdADYIAAAAAAQAAAAAAAAAAAAAAJQAfgQAAAAADQAAAAAAAAAAAAAAnQCGBQAA
AAAAAAAAAQAAAM0GAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25u
ZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rp
b25NYW5hZ2VyMTAwAHNldF9Db2x1bW4wAHNldF9Db2x1bW4xAHNldF9Db2x1bW4yAHNldF9Db2x1
bW4zAFNDX2E5MjIwZTkyMjliZjQxYWU4Njk3YjU4NWVmZmY4MTg2ADxNb2R1bGU+AEdldE91dHB1
dElEAFN5c3RlbS5JTwBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIATWFya091dHB1dHNG
aW5pc2hlZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1
cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFN0cmluZwBTcmNGaWxlUGF0aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNDX2E5MjIwZTkyMjliZjQxYWU4Njk3YjU4NWVmZmY4MTg2LmRsbABzZXRfQ29sdW1u
MF9Jc051bGwAc2V0X0NvbHVtbjFfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABzZXRfQ29sdW1u
M19Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBUcmFuc2FjdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0
aW9uAEFjcXVpcmVDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1l
V3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTdHJlYW1SZWFkZXIAVGV4
dFJlYWRlcgB0ZXh0UmVhZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVm
ZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBl
bGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19hOTIyMGU5
MjI5YmY0MWFlODY5N2I1ODVlZmZmODE4Ni5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU0NfYTkyMjBlOTIyOWJmNDFhZTg2OTdiNTg1ZWZmZjgxODYuUHJvcGVy
dGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRp
bmdzAEFjcXVpcmVDb25uZWN0aW9ucwBCdWZmZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0
cHV0Um93cwBPYmplY3QAU2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
VHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAQWRk
Um93AFRvQ2hhckFycmF5AGdldF9Bc3NlbWJseQAAAAMsAACAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAFUMAbwBuAG4AZQBjAHQAaQBv
AG4AAHFTAEMAXwBhADkAMgAyADAAZQA5ADIAMgA5AGIAZgA0ADEAYQBlADgANgA5ADcAYgA1ADgA
NQBlAGYAZgBmADgAMQA4ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAOiEf7XU59pLtPJF34BUhY0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEEBwESQQQgARwc
BwcDDh0OHQMEIAAdAwMgAA4DIAAIBiABHQ4dAwkgAwESSR0IEk0FIAIBCBwDIAACAwcBCAYAAggS
TQ4FIAEdCAgEIAASfQUgABKAgQYgARKAhQ4EIAASQQgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6
XFYZNOCJCImEXc2AgMyRAwYSOQIGDgIGCAMGEhQDBhIYAwYSDAMGElEDBhJZAwYSXQMGEiAEIAEB
HAQgAQECCyAEAQgdCB0SSRJNBSABARJRBAAAElkEAAASXQUAAQESXQQAABIgAwAAAQMoAA4DKAAC
BCgAEkEECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDX2E5MjIwZTkyMjliZjQxYWU4Njk3YjU4NWVmZmY4MTg2AAAFAQAA
AAAYAQATVW5pdmVyc2l0eSBvZiBMZWVkcwAAKQEAJENvcHlyaWdodCBAIFVuaXZlcnNpdHkgb2Yg
TGVlZHMgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAASDcAAAAAAAAA
AAAAYjcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQ3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYQA5ADIAMgAwAGUAOQAy
ADIAOQBiAGYANAAxAGEAZQA4ADYAOQA3AGIANQA4ADUAZQBmAGYAZgA4ADEAOAA2AAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhADkAMgAyADAAZQA5ADIAMgA5AGIAZgA0ADEAYQBlADgA
NgA5ADcAYgA1ADgANQBlAGYAZgBmADgAMQA4ADYALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMA
aQB0AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwBhADkAMgAyADAAZQA5ADIAMgA5AGIAZgA0ADEAYQBlADgANgA5ADcAYgA1
ADgANQBlAGYAZgBmADgAMQA4ADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AYQA5ADIAMgAwAGUAOQAyADIAOQBiAGYANAAxAGEAZQA4ADYAOQA3AGIANQA4
ADUAZQBmAGYAZgA4ADEAOAA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHQ3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a9220e9229bf41ae8697b585efff8186</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">747d2f50924e98d609d98deb8853c746</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">509d0dda201ed502ae9eda7f63ed5bed951edf07</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Practice]"
                      connectionManagerRefId="Package.ConnectionManagers[Practice]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Practice Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Practice Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Practice Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Referral Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{2f936bf4-5a15-408a-99f9-270b3455d984}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Referral Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Referral", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Referral Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                    this.Output0Buffer.Column10 = columns.Length > 10 ? columns[10] : null;
                    this.Output0Buffer.Column11 = columns.Length > 11 ? columns[11] : null;
                    this.Output0Buffer.Column12 = columns.Length > 12 ? columns[12] : null;
                    this.Output0Buffer.Column13 = columns.Length > 13 ? columns[13] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column13
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column13_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column12
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column11
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column11_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column10
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column9
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties.Settings.get_Default():SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties.Sett" +
    "ings")]

namespace SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_873881bdd52a47ab9f4fe9254fd40b1c.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f889d0e2-8716-4a21-b9fa-832fdce5fe04}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_873881bdd52a47ab9f4fe9254fd40b1c</RootNamespace>
    <AssemblyName>SC_873881bdd52a47ab9f4fe9254fd40b1c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_873881bdd52a47ab9f4fe9254fd40b1c" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_873881bdd52a47ab9f4fe9254fd40b1c</msb:CodeName>
		<msb:DisplayName>SC_873881bdd52a47ab9f4fe9254fd40b1c</msb:DisplayName>
		<msb:ProjectId>{1BF04A55-9320-42C6-92D2-7E5EF075532C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_873881bdd52a47ab9f4fe9254fd40b1c.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_873881bdd52a47ab9f4fe9254fd40b1c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_873881bdd52a47ab9f4fe9254fd40b1c")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_873881bdd52a47ab9f4fe9254fd40b1c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_873881bdd52a47ab9f4fe9254fd40b1c.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM5YHFgAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAfj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACw9AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
PQAAAAAAAEgAAAACAAUApCUAANAWAAABAAAAAAAAAHQ8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8sAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADALIBAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4jwEAAAJ7AwAABBY+aQEAAAZvFQAAChY+XQEAAAJ7BgAABG8jAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabyEAAAYCewYAAAQHjmkXMAMUKwMHF5pvHwAABgJ7BgAABAeOaRgw
AxQrAwcYmm8dAAAGAnsGAAAEB45pGTADFCsDBxmabxsAAAYCewYAAAQHjmkaMAMUKwMHGppvGQAA
BgJ7BgAABAeOaRswAxQrAwcbmm8XAAAGAnsGAAAEB45pHDADFCsDBxyabxUAAAYCewYAAAQHjmkd
MAMUKwMHHZpvEwAABgJ7BgAABAeOaR4wAxQrAwcemm8RAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
DwAABgJ7BgAABAeOaR8KMAMUKwQHHwqabw0AAAYCewYAAAQHjmkfCzADFCsEBx8Lmm8LAAAGAnsG
AAAEB45pHwwwAxQrBAcfDJpvCQAABgJ7BgAABAeOaR8NMAMUKwQHHw2abwcAAAYCAnsDAAAEF1h9
AwAABAJ7AQAABG8UAAAKCgY6a/7//ypKAigXAAAKAnsBAAAEbxgAAAoqOgIXfQMAAAQCKCYAAAYq
KgIDBAUoGQAACiomAhYDKBoAAAoqWgMsCAIWKBsAAAoqcgUAAHBzHAAACnomAhcDKBoAAAoqWgMs
CAIXKBsAAAoqcgUAAHBzHAAACnomAhgDKBoAAAoqWgMsCAIYKBsAAAoqcgUAAHBzHAAACnomAhkD
KBoAAAoqWgMsCAIZKBsAAAoqcgUAAHBzHAAACnomAhoDKBoAAAoqWgMsCAIaKBsAAAoqcgUAAHBz
HAAACnomAhsDKBoAAAoqWgMsCAIbKBsAAAoqcgUAAHBzHAAACnomAhwDKBoAAAoqWgMsCAIcKBsA
AAoqcgUAAHBzHAAACnomAh0DKBoAAAoqWgMsCAIdKBsAAAoqcgUAAHBzHAAACnomAh4DKBoAAAoq
WgMsCAIeKBsAAAoqcgUAAHBzHAAACnoqAh8JAygaAAAKKl4DLAkCHwkoGwAACipyBQAAcHMcAAAK
eioCHwoDKBoAAAoqXgMsCQIfCigbAAAKKnIFAABwcxwAAAp6KgIfCwMoGgAACipeAywJAh8LKBsA
AAoqcgUAAHBzHAAACnoqAh8MAygaAAAKKl4DLAkCHwwoGwAACipyBQAAcHMcAAAKeioCHw0DKBoA
AAoqXgMsCQIfDSgbAAAKKnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAA
CgICcysAAAZ9BAAABAICcy0AAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8kAAAGAhR9BgAABCoA
AAATMAUASQAAAAMAABEWCisuBAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAKDgRzBgAABn0G
AAAEBhdYCgYDMs4CbyoAAAYCbycAAAYCKCgAAAYqOgIoIwAACgIDfQcAAAQqggJ7BwAABG8kAAAK
byUAAApytAAAcG8mAAAKbycAAAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkAAAQtHnLKAABw
0AcAAAIoKAAACm8pAAAKcyoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAigr
AAAKKi5zMwAABoALAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAARAkA
ACN+AACwCQAAxAkAACNTdHJpbmdzAAAAAHQTAAA8AQAAI1VTALAUAAAQAAAAI0dVSUQAAADAFAAA
EAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAACwAAADQAAAAn
AAAAKwAAABAAAAADAAAABAAAACAAAAAhAAAAAQAAAAYAAAABAAAAAAB1BAEAAAAAAAYAVgPaBwYA
6gPaBwYAogLHBw8ATggAAAYAzwIQBgYAOQMQBgYAGgMQBgYA0QMQBgYAdgMQBgYAjwMQBgYA5gIQ
BgYAAQMlBAoAqgPpAQYA6AYwAQYAAQm8BQ4AVgBfBwoAKAfpARIAGQfpAQoAiQbpAQoARwnpAQYA
hQLHBwYAOQf6BwYAfQbvBRYAVQJfBBYAtgJfBBYANwLaBQYAagLaBwYAPwS8BQYA9QYwAQYAYwa8
BRoAAQCHBxoAGgCHBxoAPQCHBwYACgK8BQYAoQG8BQYAuAkQBgAAAAAbAQAAAAABAAEAAQAQAM8F
AAAQAAEAAQABABAACwcAAEUABAAGAAEAEAApCQAAUQAEACYAAQAQAMsIAAA9AAcAKwABABAAjAgA
AD0ACAAtAAAAEAABCF0IPQAJAC4AAAEQALsIXQhpAAsAMgABAAAHpgABAEYEqgABAF0ErQAGAMsI
sAAGAIwItAAGAAsHuAABADcJvAABADcJvAARAMMFwAARACcCxAARAJEByABQIAAAAADGAMQIzAAB
AHsgAAAAAMYACAQGAAIAlCAAAAAAxgDtCAYAAgBSIgAAAADGABMEBgACAGUiAAAAAIYYsAcGAAIA
dCIAAAAAhhiwB0EAAgB/IgAAAACGCLoAEAAFAIkiAAAAAIYIEgXRAAYAoCIAAAAAhgihABAABwCq
IgAAAACGCOsE0QAIAMEiAAAAAIYIiAAQAAkAyyIAAAAAhgjEBNEACgDiIgAAAACGCG8AEAALAOwi
AAAAAIYInQTRAAwAAyMAAAAAhggPARAADQANIwAAAACGCJgF0QAOACQjAAAAAIYIAwEQAA8ALiMA
AAAAhgiFBdEAEABFIwAAAACGCPcAEAARAE8jAAAAAIYIcgXRABIAZiMAAAAAhgjrABAAEwBwIwAA
AACGCF8F0QAUAIcjAAAAAIYI3wAQABUAkSMAAAAAhghMBdEAFgCoIwAAAACGCNMAEAAXALMjAAAA
AIYIOQXRABgAyyMAAAAAhgjHABAAGQDWIwAAAACGCCYF0QAaAO4jAAAAAIYIrgAQABsA+SMAAAAA
hgj/BNEAHAARJAAAAACGCJUAEAAdABwkAAAAAIYI2ATRAB4ANCQAAAAAhgh8ABAAHwA/JAAAAACG
CLEE0QAgAFckAAAAAIYAoQkGACEAXyQAAAAAhgAICQYAIQBnJAAAAACGAAsJUQAhAG8kAAAAAIYY
sAcGACEAjyQAAAAAxgHfCAYAIQCRJAAAAACBAH0BBgAhALAkAAAAAMYAlQnWACEAjyQAAAAAxgHt
CAYAJQAFJQAAAACGGLAH4gAlABQlAAAAAIYIQgZ4ACYANSUAAAAAhhiwB+IAJgBEJQAAAACDGLAH
BgAnAEwlAAAAAJMINQfoACcAeCUAAAAAkwgPAu0AJwB/JQAAAACTCBsC8gAnAIclAAAAAJYIHQn4
ACgAjiUAAAAAhhiwBwYAKACWJQAAAACRGLYH/QAoAAAAAQAEBgAAAQAuBwAAAgCWCAAAAwCXBgAA
AQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAf
BAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAA
AQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQDl
CAAAAgC9BwAAAwDXCAAABACXBgAAAQBNCQAAAQBNCQAAAQAfBAkAsAcBABEAsAcGABkAsAcKACkA
sAcQADEAsAcQADkAsAcQAEEAsAcQAEkAsAcQAFEAsAcQAFkAsAcQAGEAsAcQAGkAsAcGAKkAsAcG
AMkAsAcVANkAsAcGAIEAUQYgAKEACAQGAHEAsAcQAOEAqAktAOkA4AEyAOEAUgQ2AOEAFwk6AKEA
EwQGAOkATwIGAIkAsAdBAIkAswVLAIkAqwUBAPEAsAcQAIkAoQkGAIkACAkGAIkACwlRAKEAsAcG
AKEAJAFZAKEAqghgAHkAsAcGAKEAOgFmAPkAIgZrAAEBxQFxAAkBSQd4ABEBswF9ABEBtAmGALEA
sAeMANEAsAcGAC4ACwAdAS4AEwAmAS4AGwBFAS4AIwBOAS4AKwB3AS4AMwB3AS4AOwB9AS4AQwBO
AS4ASwCWAS4AUwB3AS4AWwDAAUMAYwAKAuMAawAKAmEBewAKAskDcwBFAekDcwBFARsAJQBVAAMA
AQAFAB0ABwAeAAgAIAAAAL4AAQEAABYFBQEAAKUAAQEAAO8EBQEAAIwAAQEAAMgEBQEAAHMAAQEA
AKEEBQEAABMBAQEAAJwFBQEAAAcBAQEAAIkFBQEAAPsAAQEAAHYFBQEAAO8AAQEAAGMFBQEAAOMA
AQEAAFAFBQEAANcAAQEAAD0FBQEAAMsAAQEAACoFBQEAALIAAQEAAAMFBQEAAJkAAQEAANwEBQEA
AIAAAQEAALUEBQEAAFgGCQEAADkHDgEAAC8CEwEAACEJGAEBAAcAAwABAAgABQABAAkABwABAAoA
CQABAAsACwABAAwADQABAA0ADwABAA4AEQABAA8AEwABABAAFQABABEAFwABABIAGQABABMAGwAB
ABQAHQABABUAHwABABYAIQABABcAIwABABgAJQABABkAJwABABoAKQABABsAKwABABwALQABAB0A
LwABAB4AMQABAB8AMwABACAANQABACEANwABACIAOQACACwAOwACAC8APQACADAAPwABADEAPwAC
ADIAQQAEgAAAAQAAAAAAAAAAAAAAAABZAQAABAAAAAAAAAAAAAAAlABQAQAAAAANAAAAAAAAAAAA
AACdAFcJAAAAAA0AAAAAAAAAAAAAAJ0AoQYAAAAADQAAAAAAAAAAAAAAnQB0CQAAAAAEAAAAAAAA
AAAAAACUALwFAAAAAA0AAAAAAAAAAAAAAJ0AxAYAAAAAAAAAAAEAAAALCAAAAAAASURUU0NvbXBv
bmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1
bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABzZXRfQ29sdW1uMTAA
c2V0X0NvbHVtbjAAc2V0X0NvbHVtbjExAHNldF9Db2x1bW4xAHNldF9Db2x1bW4xMgBzZXRfQ29s
dW1uMgBzZXRfQ29sdW1uMTMAc2V0X0NvbHVtbjMAc2V0X0NvbHVtbjQAc2V0X0NvbHVtbjUAc2V0
X0NvbHVtbjYAc2V0X0NvbHVtbjcAc2V0X0NvbHVtbjgAc2V0X0NvbHVtbjkAPE1vZHVsZT4AR2V0
T3V0cHV0SUQAU3lzdGVtLklPAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBTQ184NzM4
ODFiZGQ1MmE0N2FiOWY0ZmU5MjU0ZmQ0MGIxYwBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJ
bnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRSdW50aW1lQ29u
bmVjdGlvbkJ5TmFtZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBU
eXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVF
eGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AFNyY0ZpbGVQYXRoAGdldF9MZW5ndGgAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfODczODgx
YmRkNTJhNDdhYjlmNGZlOTI1NGZkNDBiMWMuZGxsAHNldF9Db2x1bW4xMF9Jc051bGwAc2V0X0Nv
bHVtbjBfSXNOdWxsAHNldF9Db2x1bW4xMV9Jc051bGwAc2V0X0NvbHVtbjFfSXNOdWxsAHNldF9D
b2x1bW4xMl9Jc051bGwAc2V0X0NvbHVtbjJfSXNOdWxsAHNldF9Db2x1bW4xM19Jc051bGwAc2V0
X0NvbHVtbjNfSXNOdWxsAHNldF9Db2x1bW40X0lzTnVsbABzZXRfQ29sdW1uNV9Jc051bGwAc2V0
X0NvbHVtbjZfSXNOdWxsAHNldF9Db2x1bW43X0lzTnVsbABzZXRfQ29sdW1uOF9Jc051bGwAc2V0
X0NvbHVtbjlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AVHJhbnNhY3Rp
b24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRf
Q29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEN1
bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRT
UnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAU3RyZWFtUmVh
ZGVyAFRleHRSZWFkZXIAdGV4dFJlYWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0Nf
ODczODgxYmRkNTJhNDdhYjlmNGZlOTI1NGZkNDBiMWMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzg3Mzg4MWJkZDUyYTQ3YWI5ZjRmZTkyNTRmZDQwYjFj
LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBBY3F1aXJlQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0
ZU5ld091dHB1dFJvd3MAT2JqZWN0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0
cHV0AEFkZFJvdwBUb0NoYXJBcnJheQBnZXRfQXNzZW1ibHkAAAAAAAMsAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAFUMAbwBuAG4A
ZQBjAHQAaQBvAG4AAHFTAEMAXwA4ADcAMwA4ADgAMQBiAGQAZAA1ADIAYQA0ADcAYQBiADkAZgA0
AGYAZQA5ADIANQA0AGYAZAA0ADAAYgAxAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAALV+ltgPWeBBkLQOJ7+aXO8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEE
BwESQQQgARwcBwcDDh0OHQMEIAAdAwMgAA4DIAAIBiABHQ4dAwkgAwESSR0IEk0FIAIBCBwDIAAC
AwcBCAYAAggSTQ4FIAEdCAgEIAASfQUgABKAgQYgARKAhQ4EIAASQQgAARKAiRGAjQUgABKAkQcg
AgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIGDgIGCAMGEhQDBhIYAwYSDAMGElEDBhJZAwYS
XQMGEiAEIAEBHAQgAQECCyAEAQgdCB0SSRJNBSABARJRBAAAElkEAAASXQUAAQESXQQAABIgAwAA
AQMoAA4DKAACBCgAEkEECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzg3Mzg4MWJkZDUyYTQ3YWI5ZjRmZTkyNTRmZDQw
YjFjAAAFAQAAAAAYAQATVW5pdmVyc2l0eSBvZiBMZWVkcwAAKQEAJENvcHlyaWdodCBAIFVuaXZl
cnNpdHkgb2YgTGVlZHMgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
VD0AAAAAAAAAAAAAbj0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA9AAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAA3ADMAOAA4ADEAYgBkAGQA
NQAyAGEANAA3AGEAYgA5AGYANABmAGUAOQAyADUANABmAGQANAAwAGIAMQBjAAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwA4ADcAMwA4ADgAMQBiAGQAZAA1ADIAYQA0ADcAYQBiADkAZgA0
AGYAZQA5ADIANQA0AGYAZAA0ADAAYgAxAGMALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMAaQB0
AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAEMAXwA4ADcAMwA4ADgAMQBiAGQAZAA1ADIAYQA0ADcAYQBiADkAZgA0AGYAZQA5ADIA
NQA0AGYAZAA0ADAAYgAxAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBDAF8AOAA3ADMAOAA4ADEAYgBkAGQANQAyAGEANAA3AGEAYgA5AGYANABmAGUAOQAyADUA
NABmAGQANAAwAGIAMQBjAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_873881bdd52a47ab9f4fe9254fd40b1c</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">eb516a87a6e036ab2b0857b9abab6726</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">5fc6a059d897f69f1ee70370f62424f679a03c8b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Referral]"
                      connectionManagerRefId="Package.ConnectionManagers[Referral]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]"
                          name="Column13" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]"
                          name="Column12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]"
                          name="Column11" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]"
                          name="Column10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",14),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",14),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",13),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",13),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",12),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",12),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",11),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",11),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Referral Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Referral Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Referral Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staff Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{8614cafc-040d-4fca-9adb-514513c3da98}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staff Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Staff", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Staff Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4026b9f8de3f418f80fc365594d2f20b.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E7580E0A-1671-40CD-9063-871115590D06}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4026b9f8de3f418f80fc365594d2f20b</RootNamespace>
    <AssemblyName>SC_4026b9f8de3f418f80fc365594d2f20b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column2
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4026b9f8de3f418f80fc365594d2f20b.Properties.Settings.get_Default():SC_4026b9f8de3f418f80fc365594d2f20b.Properties.Sett" +
    "ings")]

namespace SC_4026b9f8de3f418f80fc365594d2f20b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_4026b9f8de3f418f80fc365594d2f20b</msb:CodeName>
		<msb:DisplayName>SC_4026b9f8de3f418f80fc365594d2f20b</msb:DisplayName>
		<msb:ProjectId>{2F94E4DC-23E3-44DC-8909-0C4F38EB5462}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_4026b9f8de3f418f80fc365594d2f20b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4026b9f8de3f418f80fc365594d2f20b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_4026b9f8de3f418f80fc365594d2f20b")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4026b9f8de3f418f80fc365594d2f20b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4026b9f8de3f418f80fc365594d2f20b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4026b9f8de3f418f80fc365594d2f20b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4026b9f8de3f418f80fc365594d2f20b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4026b9f8de3f418f80fc365594d2f20b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4026b9f8de3f418f80fc365594d2f20b.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJZGG1gAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA2jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIg2AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
NgAAAAAAAEgAAAACAAUAICMAALASAAABAAAAAAAAANA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8WAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAKUAAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4ggAAAAJ7AwAABBYxXwZvFQAAChYxVgJ7BgAABG8NAAAGBghvFgAACgsCewYA
AAQHji0DFCsDBxaabwsAAAYCewYAAAQHjmkXMAMUKwMHF5pvCQAABgJ7BgAABAeOaRgwAxQrAwcY
mm8HAAAGAgJ7AwAABBdYfQMAAAQCewEAAARvFAAACgoGOnj///8qSgIoFwAACgJ7AQAABG8YAAAK
KjoCF30DAAAEAigQAAAGKioCAwQFKBkAAAoqJgIWAygaAAAKKloDLAgCFigbAAAKKnIFAABwcxwA
AAp6JgIXAygaAAAKKloDLAgCFygbAAAKKnIFAABwcxwAAAp6JgIYAygaAAAKKloDLAgCGCgbAAAK
KnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAACgICcxUAAAZ9BAAABAIC
cxcAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8OAAAGAhR9BgAABCoAEzAFAEkAAAADAAARFgor
LgQGlA4EcqIAAHAoIQAACjMZAgUGmgIEBpQoIgAACg4EcwYAAAZ9BgAABAYXWAoGAzLOAm8UAAAG
Am8RAAAGAigSAAAGKjoCKCMAAAoCA30HAAAEKoICewcAAARvJAAACm8lAAAKcrQAAHBvJgAACm8n
AAAKKjoCKCMAAAoCA30IAAAEKh4CKCMAAAoqrn4JAAAELR5yygAAcNAHAAACKCgAAApvKQAACnMq
AAAKgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIoKwAACioucx0AAAaACwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQGAAAjfgAA8AYAAGQIAAAjU3Ry
aW5ncwAAAABUDwAAPAEAACNVUwCQEAAAEAAAACNHVUlEAAAAoBAAABACAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAsAAAAeAAAAEQAAACsAAAAQAAAAAwAAAAQA
AAAKAAAACwAAAAEAAAAGAAAAAQAAAAAA7QMBAAAAAAAGAM4CfQYGAGIDfQYGABoCagYPAPEGAAAG
AEcCswQGALECswQGAJICswQGAEkDswQGAO4CswQGAAcDswQGAF4CswQGAHkCnQMKACIDYQEGAIsF
qAAGAKQHXwQOAFYAAgYKAMsFYQESALwFYQEKACwFYQEKAOoHYQEGAP0BagYGANwFnQYGACAFkgQW
AM0B1wMWAC4C1wMWAK8BfQQGAOIBfQYGALcDXwQGAJgFqAAGAAYFXwQaAAEAKgYaABoAKgYaAD0A
KgYGAIIBXwQGABkBXwQGAFsIswQAAAAAkwAAAAAAAQABAAEAEAByBAAAEAABAAEAAQAQAK4FAABF
AAQABgABABAAzAcAAFEABAAQAAEAEABuBwAAPQAHABUAAQAQAC8HAAA9AAgAFwAAABAApAYABz0A
CQAYAAABEABeBwAHaQALABwAAQCjBaYAAQC+A6oAAQDVA60ABgBuB7AABgAvB7QABgCuBbgAAQDa
B7wAAQDaB7wAEQBmBMAAEQCfAcQAEQAJAcgAUCAAAAAAxgBnB8wAAQB7IAAAAADGAIADBgACAJQg
AAAAAMYAkAcGAAIARSEAAAAAxgCLAwYAAgBYIQAAAACGGFMGBgACAGchAAAAAIYYUwZBAAIAciEA
AAAAhgiHABAABQB8IQAAAACGCDsE0QAGAJMhAAAAAIYIewAQAAcAnSEAAAAAhggoBNEACAC0IQAA
AACGCG8AEAAJAL4hAAAAAIYIFQTRAAoA1SEAAAAAhgBECAYACwDdIQAAAACGAKsHBgALAOUhAAAA
AIYArgdRAAsA7SEAAAAAhhhTBgYACwANIgAAAADGAYIHBgALAA8iAAAAAIEA9QAGAAsALCIAAAAA
xgA4CNYACwANIgAAAADGAZAHBgAPAIEiAAAAAIYYUwbiAA8AkCIAAAAAhgjlBHgAEACxIgAAAACG
GFMG4gAQAMAiAAAAAIMYUwYGABEAyCIAAAAAkwjYBegAEQD0IgAAAACTCIcB7QARAPsiAAAAAJMI
kwHyABEAAyMAAAAAlgjAB/gAEgAKIwAAAACGGFMGBgASABIjAAAAAJEYWQb9ABIAAAABAKcEAAAB
ANEFAAACADkHAAADADoFAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAJcDAAABAIgH
AAACAGAGAAADAHoHAAAEADoFAAABAPAHAAABAPAHAAABAJcDCQBTBgEAEQBTBgYAGQBTBgoAKQBT
BhAAMQBTBhAAOQBTBhAAQQBTBhAASQBTBhAAUQBTBhAAWQBTBhAAYQBTBhAAaQBTBgYAqQBTBgYA
yQBTBhUA2QBTBgYAgQD0BCAAoQCAAwYAcQBTBhAA4QBLCC0A6QBYATIA4QDKAzYA4QC6BzoAoQCL
AwYA6QDHAQYAiQBTBkEAiQBWBEsAiQBOBAEA8QBTBhAAiQBECAYAiQCrBwYAiQCuB1EAoQBTBgYA
oQCcAFkAoQBNB2AAeQBTBgYAoQCyAGYA+QDFBGsAAQE9AXEACQHsBXgAEQErAX0AEQFXCIYAsQBT
BowA0QBTBgYALgALAB0BLgATACYBLgAbAEUBLgAjAE4BLgArAHcBLgAzAHcBLgA7AH0BLgBDAE4B
LgBLAJYBLgBTAHcBLgBbAMABQwBjAAoC4wBrAAoCCQFzAEUBKQFzAEUBYQF7AAoCGwAlAFUAAwAB
AAUABwAHAAgACAAKAAAAiwABAQAAPwQFAQAAfwABAQAALAQFAQAAcwABAQAAGQQFAQAA+wQJAQAA
3AUOAQAApwETAQAAxAcYAQEABwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAIAFgAP
AAIAGQARAAIAGgATAAEAGwATAAIAHAAVAASAAAABAAAAAAAAAAAAAAAAAMgAAAAEAAAAAAAAAAAA
AACUAOwAAAAAAA0AAAAAAAAAAAAAAJ0A+gcAAAAADQAAAAAAAAAAAAAAnQBEBQAAAAANAAAAAAAA
AAAAAACdABcIAAAAAAQAAAAAAAAAAAAAAJQAXwQAAAAADQAAAAAAAAAAAAAAnQBnBQAAAAAAAAAA
AQAAAK4GAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAHNldF9Db2x1bW4wAHNldF9Db2x1bW4xAHNldF9Db2x1bW4yADxNb2R1bGU+AEdldE91
dHB1dElEAFN5c3RlbS5JTwBnZXRfQ29tcG9uZW50TWV0YURhdGEAU0NfNDAyNmI5ZjhkZTNmNDE4
ZjgwZmMzNjU1OTRkMmYyMGIAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABkZWZhdWx0SW5z
dGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0UnVudGltZUNvbm5l
Y3Rpb25CeU5hbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlw
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBT
cmNGaWxlUGF0aABnZXRfTGVuZ3RoAGkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzQwMjZiOWY4
ZGUzZjQxOGY4MGZjMzY1NTk0ZDJmMjBiLmRsbABzZXRfQ29sdW1uMF9Jc051bGwAc2V0X0NvbHVt
bjFfSXNOdWxsAHNldF9Db2x1bW4yX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVX
cmFwAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAHRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlv
bk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDXzQwMjZiOWY4ZGUzZjQxOGY4MGZjMzY1NTk0ZDJmMjBiLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ180MDI2YjlmOGRlM2Y0MThmODBm
YzM2NTU5NGQyZjIwYi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdl
dENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABn
ZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQcmltZU91dHB1dABBZGRSb3cAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AAADLAAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBDAF8ANAAwADIANgBiADkAZgA4AGQAZQAzAGYANAAx
ADgAZgA4ADAAZgBjADMANgA1ADUAOQA0AGQAMgBmADIAMABiAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAACY16SJNOu7TY4aZ7V9xiduAAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFhBAcBEkEEIAEcHAcHAw4dDh0DBCAAHQMDIAAOAyAACAYgAR0OHQMJIAMBEkkdCBJN
BSACAQgcAyAAAgMHAQgGAAIIEk0OBSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEkEIAAESgIkR
gI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBg4CBggDBhIUAwYSGAMGEgwD
BhJRAwYSWQMGEl0DBhIgBCABARwEIAEBAgsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0FAAEB
El0EAAASIAMAAAEDKAAOAygAAgQoABJBBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ180MDI2YjlmOGRlM2Y0MThmODBm
YzM2NTU5NGQyZjIwYgAABQEAAAAAGAEAE1VuaXZlcnNpdHkgb2YgTGVlZHMAACkBACRDb3B5cmln
aHQgQCBVbml2ZXJzaXR5IG9mIExlZWRzIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAALA2AAAAAAAAAAAAAMo2AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8NgAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANAAwADIANgBiADkAZgA4
AGQAZQAzAGYANAAxADgAZgA4ADAAZgBjADMANgA1ADUAOQA0AGQAMgBmADIAMABiAAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0ADAAMgA2AGIAOQBmADgAZABlADMAZgA0ADEAOABmADgA
MABmAGMAMwA2ADUANQA5ADQAZAAyAGYAMgAwAGIALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMA
aQB0AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwA0ADAAMgA2AGIAOQBmADgAZABlADMAZgA0ADEAOABmADgAMABmAGMAMwA2
ADUANQA5ADQAZAAyAGYAMgAwAGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8ANAAwADIANgBiADkAZgA4AGQAZQAzAGYANAAxADgAZgA4ADAAZgBjADMANgA1
ADUAOQA0AGQAMgBmADIAMABiAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_4026b9f8de3f418f80fc365594d2f20b</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">fcd87585c0d0b891efd65a610108bdaf</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">c2450362ecb7c23b062be9e725bd3cd31805564b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Staff]"
                      connectionManagerRefId="Package.ConnectionManagers[Staff]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staff Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Staff Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staff Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Test Source Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{823cfd2a-74b2-4357-aace-af287f54eb64}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Test Source Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Test", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump into Stage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column16]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column16"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column16]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column15]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column15"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column15]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column14]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column14"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column14]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Referral Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_e20a1f33d6834455894c163a7ef73bf5.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b89d21e1-733c-4ab9-a78d-0d0425023fbb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e20a1f33d6834455894c163a7ef73bf5</RootNamespace>
    <AssemblyName>SC_e20a1f33d6834455894c163a7ef73bf5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_e20a1f33d6834455894c163a7ef73bf5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                    this.Output0Buffer.Column10 = columns.Length > 10 ? columns[10] : null;
                    this.Output0Buffer.Column11 = columns.Length > 11 ? columns[11] : null;
                    this.Output0Buffer.Column12 = columns.Length > 12 ? columns[12] : null;
                    this.Output0Buffer.Column13 = columns.Length > 13 ? columns[13] : null;
                    this.Output0Buffer.Column14 = columns.Length > 14 ? columns[14] : null;
                    this.Output0Buffer.Column15 = columns.Length > 15 ? columns[15] : null;
                    this.Output0Buffer.Column16 = columns.Length > 16 ? columns[16] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column16
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column16_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column15
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column15_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column14
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column14_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column13
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column13_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column12
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column11
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column11_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column10
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column9
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e20a1f33d6834455894c163a7ef73bf5.Properties.Settings.get_Default():SC_e20a1f33d6834455894c163a7ef73bf5.Properties.Sett" +
    "ings")]

namespace SC_e20a1f33d6834455894c163a7ef73bf5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_e20a1f33d6834455894c163a7ef73bf5</msb:CodeName>
		<msb:DisplayName>SC_e20a1f33d6834455894c163a7ef73bf5</msb:DisplayName>
		<msb:ProjectId>{52DB3C1E-CB8F-4A5A-A172-921AF347F05C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_e20a1f33d6834455894c163a7ef73bf5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e20a1f33d6834455894c163a7ef73bf5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_e20a1f33d6834455894c163a7ef73bf5")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e20a1f33d6834455894c163a7ef73bf5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e20a1f33d6834455894c163a7ef73bf5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e20a1f33d6834455894c163a7ef73bf5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e20a1f33d6834455894c163a7ef73bf5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e20a1f33d6834455894c163a7ef73bf5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_e20a1f33d6834455894c163a7ef73bf5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADZdHFgAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAUj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAA/AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
PwAAAAAAAEgAAAACAAUAWCYAAPAXAAABAAAAAAAAAEg+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8yAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADAP0BAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo42gEAAAJ7AwAABBY+tAEAAAZvFQAAChY+qAEAAAJ7BgAABG8pAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabycAAAYCewYAAAQHjmkXMAMUKwMHF5pvJQAABgJ7BgAABAeOaRgw
AxQrAwcYmm8jAAAGAnsGAAAEB45pGTADFCsDBxmabyEAAAYCewYAAAQHjmkaMAMUKwMHGppvHwAA
BgJ7BgAABAeOaRswAxQrAwcbmm8dAAAGAnsGAAAEB45pHDADFCsDBxyabxsAAAYCewYAAAQHjmkd
MAMUKwMHHZpvGQAABgJ7BgAABAeOaR4wAxQrAwcemm8XAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
FQAABgJ7BgAABAeOaR8KMAMUKwQHHwqabxMAAAYCewYAAAQHjmkfCzADFCsEBx8Lmm8RAAAGAnsG
AAAEB45pHwwwAxQrBAcfDJpvDwAABgJ7BgAABAeOaR8NMAMUKwQHHw2abw0AAAYCewYAAAQHjmkf
DjADFCsEBx8Omm8LAAAGAnsGAAAEB45pHw8wAxQrBAcfD5pvCQAABgJ7BgAABAeOaR8QMAMUKwQH
HxCabwcAAAYCAnsDAAAEF1h9AwAABAJ7AQAABG8UAAAKCgY6IP7//ypKAigXAAAKAnsBAAAEbxgA
AAoqOgIXfQMAAAQCKCwAAAYqKgIDBAUoGQAACiomAhYDKBoAAAoqWgMsCAIWKBsAAAoqcgUAAHBz
HAAACnomAhcDKBoAAAoqWgMsCAIXKBsAAAoqcgUAAHBzHAAACnomAhgDKBoAAAoqWgMsCAIYKBsA
AAoqcgUAAHBzHAAACnomAhkDKBoAAAoqWgMsCAIZKBsAAAoqcgUAAHBzHAAACnomAhoDKBoAAAoq
WgMsCAIaKBsAAAoqcgUAAHBzHAAACnomAhsDKBoAAAoqWgMsCAIbKBsAAAoqcgUAAHBzHAAACnom
AhwDKBoAAAoqWgMsCAIcKBsAAAoqcgUAAHBzHAAACnomAh0DKBoAAAoqWgMsCAIdKBsAAAoqcgUA
AHBzHAAACnomAh4DKBoAAAoqWgMsCAIeKBsAAAoqcgUAAHBzHAAACnoqAh8JAygaAAAKKl4DLAkC
HwkoGwAACipyBQAAcHMcAAAKeioCHwoDKBoAAAoqXgMsCQIfCigbAAAKKnIFAABwcxwAAAp6KgIf
CwMoGgAACipeAywJAh8LKBsAAAoqcgUAAHBzHAAACnoqAh8MAygaAAAKKl4DLAkCHwwoGwAACipy
BQAAcHMcAAAKeioCHw0DKBoAAAoqXgMsCQIfDSgbAAAKKnIFAABwcxwAAAp6KgIfDgMoGgAACipe
AywJAh8OKBsAAAoqcgUAAHBzHAAACnoqAh8PAygaAAAKKl4DLAkCHw8oGwAACipyBQAAcHMcAAAK
eioCHxADKBoAAAoqXgMsCQIfECgbAAAKKnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8A
AAoqfgIoIAAACgICczEAAAZ9BAAABAICczMAAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8qAAAG
AhR9BgAABCoAAAATMAUASQAAAAMAABEWCisuBAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAK
DgRzBgAABn0GAAAEBhdYCgYDMs4CbzAAAAYCby0AAAYCKC4AAAYqOgIoIwAACgIDfQcAAAQqggJ7
BwAABG8kAAAKbyUAAApytAAAcG8mAAAKbycAAAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkA
AAQtHnLKAABw0AcAAAIoKAAACm8pAAAKcyoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+
CwAABCoeAigrAAAKKi5zOQAABoALAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAABAoAACN+AABwCgAAJAoAACNTdHJpbmdzAAAAAJQUAAA8AQAAI1VTANAVAAAQAAAAI0dV
SUQAAADgFQAAEAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAA
CwAAADoAAAAtAAAAKwAAABAAAAADAAAABAAAACYAAAAnAAAAAQAAAAYAAAABAAAAAACcBAEAAAAA
AAYAfQM9CAYAEQQ9CAYAyQIqCA8AsQgAAAYA9gJzBgYAYANzBgYAQQNzBgYA+ANzBgYAnQNzBgYA
tgNzBgYADQNzBgYAKANMBAoA0QMQAgYASwd7AQYAZAkfBg4AVgDCBwoAiwcQAhIAfAcQAgoA7AYQ
AgoAqgkQAgYArAIqCAYAnAddCAYA4AZSBhYAfAKGBBYA3QKGBBYAXgI9BgYAkQI9CAYAZgQfBgYA
WAd7AQYAxgYfBhoAAQDqBxoAGgDqBxoAPQDqBwYAMQIfBgYAyAEfBgYAGwpzBgAAAABmAQAAAAAB
AAEAAQAQADIGAAAQAAEAAQABABAAbgcAAEUABAAGAAEAEACMCQAAUQAEACwAAQAQAC4JAAA9AAcA
MQABABAA7wgAAD0ACAAzAAAAEABkCMAIPQAJADQAAAEQAB4JwAhpAAsAOAABAGMHpgABAG0EqgAB
AIQErQAGAC4JsAAGAO8ItAAGAG4HuAABAJoJvAABAJoJvAARACYGwAARAE4CxAARALgByABQIAAA
AADGACcJzAABAHsgAAAAAMYALwQGAAIAlCAAAAAAxgBQCQYAAgCdIgAAAADGADoEBgACALAiAAAA
AIYYEwgGAAIAvyIAAAAAhhgTCEEAAgDKIgAAAACGCCkBEAAFANQiAAAAAIYIrgXRAAYA6yIAAAAA
hgjsABAABwD1IgAAAACGCIcF0QAIAAwjAAAAAIYI0wAQAAkAFiMAAAAAhghgBdEACgAtIwAAAACG
CLoAEAALADcjAAAAAIYIOQXRAAwATiMAAAAAhgihABAADQBYIwAAAACGCBIF0QAOAG8jAAAAAIYI
iAAQAA8AeSMAAAAAhgjrBNEAEACQIwAAAACGCG8AEAARAJojAAAAAIYIxATRABIAsSMAAAAAhgha
ARAAEwC7IwAAAACGCPsF0QAUANIjAAAAAIYITgEQABUA3CMAAAAAhgjoBdEAFgDzIwAAAACGCEIB
EAAXAP4jAAAAAIYI1QXRABgAFiQAAAAAhgg2ARAAGQAhJAAAAACGCMIF0QAaADkkAAAAAIYIHQEQ
ABsARCQAAAAAhgibBdEAHABcJAAAAACGCOAAEAAdAGckAAAAAIYIdAXRAB4AfyQAAAAAhgjHABAA
HwCKJAAAAACGCE0F0QAgAKIkAAAAAIYIrgAQACEArSQAAAAAhggmBdEAIgDFJAAAAACGCJUAEAAj
ANAkAAAAAIYI/wTRACQA6CQAAAAAhgh8ABAAJQDzJAAAAACGCNgE0QAmAAslAAAAAIYABAoGACcA
EyUAAAAAhgBrCQYAJwAbJQAAAACGAG4JUQAnACMlAAAAAIYYEwgGACcAQyUAAAAAxgFCCQYAJwBF
JQAAAACBAKQBBgAnAGQlAAAAAMYA+AnWACcAQyUAAAAAxgFQCQYAKwC5JQAAAACGGBMI4gArAMgl
AAAAAIYIpQZ4ACwA6SUAAAAAhhgTCOIALAD4JQAAAACDGBMIBgAtAAAmAAAAAJMImAfoAC0ALCYA
AAAAkwg2Au0ALQAzJgAAAACTCEIC8gAtADsmAAAAAJYIgAn4AC4AQiYAAAAAhhgTCAYALgBKJgAA
AACRGBkI/QAuAAAAAQBnBgAAAQCRBwAAAgD5CAAAAwD6BgAAAQBGBAAAAQBGBAAAAQBGBAAAAQBG
BAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAA
AQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBG
BAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAAAQBGBAAA
AQBGBAAAAQBGBAAAAQBICQAAAgAgCAAAAwA6CQAABAD6BgAAAQCwCQAAAQCwCQAAAQBGBAkAEwgB
ABEAEwgGABkAEwgKACkAEwgQADEAEwgQADkAEwgQAEEAEwgQAEkAEwgQAFEAEwgQAFkAEwgQAGEA
EwgQAGkAEwgGAKkAEwgGAMkAEwgVANkAEwgGAIEAtAYgAKEALwQGAHEAEwgQAOEACwotAOkABwIy
AOEAeQQ2AOEAegk6AKEAOgQGAOkAdgIGAIkAEwhBAIkAFgZLAIkADgYBAPEAEwgQAIkABAoGAIkA
awkGAIkAbglRAKEAEwgGAKEAbwFZAKEADQlgAHkAEwgGAKEAhQFmAPkAhQZrAAEB7AFxAAkBrAd4
ABEB2gF9ABEBFwqGALEAEwiMANEAEwgGAC4ACwAdAS4AEwAmAS4AGwBFAS4AIwBOAS4AKwB3AS4A
MwB3AS4AOwB9AS4AQwBOAS4ASwCWAS4AUwB3AS4AWwDAAUMAYwAKAuMAawAKAmEBewAKAokEcwBF
AakEcwBFARsAJQBVAAMAAQAFACMABwAkAAgAJgAAAC0BAQEAALIFBQEAAPAAAQEAAIsFBQEAANcA
AQEAAGQFBQEAAL4AAQEAAD0FBQEAAKUAAQEAABYFBQEAAIwAAQEAAO8EBQEAAHMAAQEAAMgEBQEA
AF4BAQEAAP8FBQEAAFIBAQEAAOwFBQEAAEYBAQEAANkFBQEAADoBAQEAAMYFBQEAACEBAQEAAJ8F
BQEAAOQAAQEAAHgFBQEAAMsAAQEAAFEFBQEAALIAAQEAACoFBQEAAJkAAQEAAAMFBQEAAIAAAQEA
ANwEBQEAALsGCQEAAJwHDgEAAFYCEwEAAIQJGAEBAAcAAwABAAgABQABAAkABwABAAoACQABAAsA
CwABAAwADQABAA0ADwABAA4AEQABAA8AEwABABAAFQABABEAFwABABIAGQABABMAGwABABQAHQAB
ABUAHwABABYAIQABABcAIwABABgAJQABABkAJwABABoAKQABABsAKwABABwALQABAB0ALwABAB4A
MQABAB8AMwABACAANQABACEANwABACIAOQABACMAOwABACQAPQABACUAPwABACYAQQABACcAQwAB
ACgARQACADIARwACADUASQACADYASwABADcASwACADgATQAEgAAAAQAAAAAAAAAAAAAAAAD5AAAA
BAAAAAAAAAAAAAAAlACbAQAAAAANAAAAAAAAAAAAAACdALoJAAAAAA0AAAAAAAAAAAAAAJ0ABAcA
AAAADQAAAAAAAAAAAAAAnQDXCQAAAAAEAAAAAAAAAAAAAACUAB8GAAAAAA0AAAAAAAAAAAAAAJ0A
JwcAAAAAAAAAAAEAAABuCAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1l
Q29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25u
ZWN0aW9uTWFuYWdlcjEwMABzZXRfQ29sdW1uMTAAc2V0X0NvbHVtbjAAc2V0X0NvbHVtbjExAHNl
dF9Db2x1bW4xAHNldF9Db2x1bW4xMgBzZXRfQ29sdW1uMgBzZXRfQ29sdW1uMTMAc2V0X0NvbHVt
bjMAc2V0X0NvbHVtbjE0AHNldF9Db2x1bW40AHNldF9Db2x1bW4xNQBTQ19lMjBhMWYzM2Q2ODM0
NDU1ODk0YzE2M2E3ZWY3M2JmNQBzZXRfQ29sdW1uNQBzZXRfQ29sdW1uMTYAc2V0X0NvbHVtbjYA
c2V0X0NvbHVtbjcAc2V0X0NvbHVtbjgAc2V0X0NvbHVtbjkAPE1vZHVsZT4AR2V0T3V0cHV0SUQA
U3lzdGVtLklPAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBNYXJrT3V0cHV0c0Zpbmlz
aGVkAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBH
ZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAU3RyaW5nAFNyY0ZpbGVQYXRoAGdldF9MZW5ndGgAaQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU0NfZTIwYTFmMzNkNjgzNDQ1NTg5NGMxNjNhN2VmNzNiZjUuZGxsAHNldF9Db2x1bW4xMF9J
c051bGwAc2V0X0NvbHVtbjBfSXNOdWxsAHNldF9Db2x1bW4xMV9Jc051bGwAc2V0X0NvbHVtbjFf
SXNOdWxsAHNldF9Db2x1bW4xMl9Jc051bGwAc2V0X0NvbHVtbjJfSXNOdWxsAHNldF9Db2x1bW4x
M19Jc051bGwAc2V0X0NvbHVtbjNfSXNOdWxsAHNldF9Db2x1bW4xNF9Jc051bGwAc2V0X0NvbHVt
bjRfSXNOdWxsAHNldF9Db2x1bW4xNV9Jc051bGwAc2V0X0NvbHVtbjVfSXNOdWxsAHNldF9Db2x1
bW4xNl9Jc051bGwAc2V0X0NvbHVtbjZfSXNOdWxsAHNldF9Db2x1bW43X0lzTnVsbABzZXRfQ29s
dW1uOF9Jc051bGwAc2V0X0NvbHVtbjlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJl
c291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbgBnZXRfQ29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAdGV4dFJlYWRlcgBPdXRwdXQwQnVmZmVyAFBp
cGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0
aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURz
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU0NfZTIwYTFmMzNkNjgzNDQ1NTg5NGMxNjNhN2VmNzNiZjUuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2UyMGExZjMzZDY4MzQ0NTU4
OTRjMTYzYTdlZjczYmY1LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBBY3F1aXJlQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5p
c2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAT2JqZWN0AFNldEVuZE9mUm93c2V0AFNwbGl0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxp
bmVIb3N0AFByaW1lT3V0cHV0AEFkZFJvdwBUb0NoYXJBcnJheQBnZXRfQXNzZW1ibHkAAAMsAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAA
MAAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AAHFTAEMAXwBlADIAMABhADEAZgAzADMAZAA2ADgAMwA0
ADQANQA1ADgAOQA0AGMAMQA2ADMAYQA3AGUAZgA3ADMAYgBmADUALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAFQFWmGdSIdEsDN+l9AD+80ABCABAQgDIAABBSABARER
BCABAQ4FIAEBEWEEBwESQQQgARwcBwcDDh0OHQMEIAAdAwMgAA4DIAAIBiABHQ4dAwkgAwESSR0I
Ek0FIAIBCBwDIAACAwcBCAYAAggSTQ4FIAEdCAgEIAASfQUgABKAgQYgARKAhQ4EIAASQQgAARKA
iRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIGDgIGCAMGEhQDBhIYAwYS
DAMGElEDBhJZAwYSXQMGEiAEIAEBHAQgAQECCyAEAQgdCB0SSRJNBSABARJRBAAAElkEAAASXQUA
AQESXQQAABIgAwAAAQMoAA4DKAACBCgAEkEECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2UyMGExZjMzZDY4MzQ0NTU4
OTRjMTYzYTdlZjczYmY1AAAFAQAAAAAYAQATVW5pdmVyc2l0eSBvZiBMZWVkcwAAKQEAJENvcHly
aWdodCBAIFVuaXZlcnNpdHkgb2YgTGVlZHMgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAKD8AAAAAAAAAAAAAQj8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ/AAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAA4BAAAAAAAAAAAAAA4BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEmAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAdAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAAEgAFAABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAVQBuAGkAdgBlAHIAcwBpAHQAeQAgAG8AZgAgAEwAZQBlAGQAcwAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBlADIAMABhADEAZgAzADMAZAA2
ADgAMwA0ADQANQA1ADgAOQA0AGMAMQA2ADMAYQA3AGUAZgA3ADMAYgBmADUAAAAwAAgAAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAFMAQwBfAGUAMgAwAGEAMQBmADMAMwBkADYAOAAzADQANAA1ADUAOAA5ADQA
YwAxADYAMwBhADcAZQBmADcAMwBiAGYANQAuAGQAbABsAAAAbgAlAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAVQBuAGkAdgBlAHIAcwBpAHQA
eQAgAG8AZgAgAEwAZQBlAGQAcwAgADIAMAAxADYAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAQwBfAGUAMgAwAGEAMQBmADMAMwBkADYAOAAzADQANAA1ADUAOAA5ADQAYwAxADYAMwBh
ADcAZQBmADcAMwBiAGYANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAEMAXwBlADIAMABhADEAZgAzADMAZAA2ADgAMwA0ADQANQA1ADgAOQA0AGMAMQA2ADMAYQA3
AGUAZgA3ADMAYgBmADUAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAVD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_e20a1f33d6834455894c163a7ef73bf5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">f1175906cdf3ddf48f914d385724911b</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">095c609b9fb0c789b8dedb903d63b5b2b4681004</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Test]"
                      connectionManagerRefId="Package.ConnectionManagers[Test]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column16]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column16]"
                          name="Column16" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column15]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column15]"
                          name="Column15" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column14]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column14]"
                          name="Column14" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]"
                          name="Column13" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]"
                          name="Column12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]"
                          name="Column11" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]"
                          name="Column10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column16]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column16"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column16]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",17),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",17),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column15]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column15"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column15]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",16),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",16),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column14]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column14"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column14]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",15),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",15),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column13]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",14),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",14),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column12]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",13),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",13),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column11]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",12),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",12),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column10]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",11),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",11),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Test Source Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Test Source Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Therapy Upload to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{4221d813-2a97-4b5d-9152-13676f03dc1c}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Therapy Upload to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">FINDSTRING( @[User::varFileName] , "Extract_Therapy", 1 ) == 0</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Dump in tblUploadStage"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblUploadStage]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SEEDSQL1.Database]"
                      connectionManagerRefId="Package.ConnectionManagers[SEEDSQL1.Database]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column13]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column11]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column10]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column8]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          externalMetadataColumnId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i8"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column0]"
                          codePage="1252"
                          dataType="text"
                          name="Column0" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column1]"
                          codePage="1252"
                          dataType="text"
                          name="Column1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column2]"
                          codePage="1252"
                          dataType="text"
                          name="Column2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column3]"
                          codePage="1252"
                          dataType="text"
                          name="Column3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column4]"
                          codePage="1252"
                          dataType="text"
                          name="Column4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column5]"
                          codePage="1252"
                          dataType="text"
                          name="Column5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column6]"
                          codePage="1252"
                          dataType="text"
                          name="Column6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column7]"
                          codePage="1252"
                          dataType="text"
                          name="Column7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column8]"
                          codePage="1252"
                          dataType="text"
                          name="Column8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column9]"
                          codePage="1252"
                          dataType="text"
                          name="Column9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column10]"
                          codePage="1252"
                          dataType="text"
                          name="Column10" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column11]"
                          codePage="1252"
                          dataType="text"
                          name="Column11" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column12]"
                          codePage="1252"
                          dataType="text"
                          name="Column12" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column13]"
                          codePage="1252"
                          dataType="text"
                          name="Column13" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column14]"
                          codePage="1252"
                          dataType="text"
                          name="Column14" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column15]"
                          codePage="1252"
                          dataType="text"
                          name="Column15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column16]"
                          codePage="1252"
                          dataType="text"
                          name="Column16" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column17]"
                          codePage="1252"
                          dataType="text"
                          name="Column17" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column18]"
                          codePage="1252"
                          dataType="text"
                          name="Column18" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column19]"
                          codePage="1252"
                          dataType="text"
                          name="Column19" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input].ExternalColumns[Column20]"
                          codePage="1252"
                          dataType="text"
                          name="Column20" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Split columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column13]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column13"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column13]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",14),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",14),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column12"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column12]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",13),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",13),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column11]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column11"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column11]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",12),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",12),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column10]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column10"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column10]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",11),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",11),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column9]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column9"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column9]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",10),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",10),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column8]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column8]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",9),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",9),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column7"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column7]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",8),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",8),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column6]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column6]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",7),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",7),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column5"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column5]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",6),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",6),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column4]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",5),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",5),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column3"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column3]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",4),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",4),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column2]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",3),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",3),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column1"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column1]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",2),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",2),"~","")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input].Columns[Column0]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Column0"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[REPLACE]([TOKEN]([REPLACE](#{Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]},"	","~	~"),"	",1),"~","")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACE(TOKEN(REPLACE(Column0,"	","~	~"),"	",1),"~","")</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Therapy Source to single column"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_cbc5ce0ad75240a383068647da433b94.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{38ef12da-e8da-41ac-8ef5-5f0575c8f15b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_cbc5ce0ad75240a383068647da433b94</RootNamespace>
    <AssemblyName>SC_cbc5ce0ad75240a383068647da433b94</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_cbc5ce0ad75240a383068647da433b94" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    //StramReader to read the input file stream
    private StreamReader textReader;

    //String to save the source file path
    private string SrcFilePath;

    //Int to count the number of records read.
    private int i = 1;

    //Override the AcquireConnections Method to set up the connection once for the file.
    public override void AcquireConnections(object Transaction)
    {
        IDTSConnectionManager100 connMgr = this.Connections.Connection;
        SrcFilePath = (string)connMgr.AcquireConnection(null);
    }

    public override void PreExecute()
    {
        base.PreExecute();

        //Set the textReader at the PreExecute Phase so that we donot initialize it for each record.
        textReader = new StreamReader(SrcFilePath);
    }


    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;
        char[] RowDelimiters;
        RowDelimiters = ",".ToCharArray();

        //Read next line from the file to the string variable
        nextLine = textReader.ReadLine();

        //Read the file till nextLine variable is not NULL ie. EOF
        while (nextLine != null)
        {
            if (i > 0 && nextLine.Length > 0)
            {
                this.Output0Buffer.AddRow();
                //Split the records by commas to later extract the data and not the column Name in each record.
                columns = nextLine.Split(RowDelimiters);
                {
                    this.Output0Buffer.Column0 = columns.Length > 0 ? columns[0] : null;
                    this.Output0Buffer.Column1 = columns.Length > 1 ? columns[1] : null;
                    this.Output0Buffer.Column2 = columns.Length > 2 ? columns[2] : null;
                    this.Output0Buffer.Column3 = columns.Length > 3 ? columns[3] : null;
                    this.Output0Buffer.Column4 = columns.Length > 4 ? columns[4] : null;
                    this.Output0Buffer.Column5 = columns.Length > 5 ? columns[5] : null;
                    this.Output0Buffer.Column6 = columns.Length > 6 ? columns[6] : null;
                    this.Output0Buffer.Column7 = columns.Length > 7 ? columns[7] : null;
                    this.Output0Buffer.Column8 = columns.Length > 8 ? columns[8] : null;
                    this.Output0Buffer.Column9 = columns.Length > 9 ? columns[9] : null;
                    this.Output0Buffer.Column10 = columns.Length > 10 ? columns[10] : null;
                    this.Output0Buffer.Column11 = columns.Length > 11 ? columns[11] : null;
                    this.Output0Buffer.Column12 = columns.Length > 12 ? columns[12] : null;
                    this.Output0Buffer.Column13 = columns.Length > 13 ? columns[13] : null;
                }
            }
            i++;
            //Read the next line
            nextLine = textReader.ReadLine();
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();

        //Close the Text reader once the file has been read in the PostExecute Phase.
        textReader.Close();
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Column13
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Column13_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column12
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column11
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Column11_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column10
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Column10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column9
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Column9_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column8
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Column8_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column7
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Column7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column6
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Column6_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column5
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Column5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column4
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Column4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column3
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Column3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column2
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Column2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column1
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Column1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Column0
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Column0_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc5ce0ad75240a383068647da433b94.Properties.Settings.get_Default():SC_cbc5ce0ad75240a383068647da433b94.Properties.Sett" +
    "ings")]

namespace SC_cbc5ce0ad75240a383068647da433b94.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_cbc5ce0ad75240a383068647da433b94</msb:CodeName>
		<msb:DisplayName>SC_cbc5ce0ad75240a383068647da433b94</msb:DisplayName>
		<msb:ProjectId>{D38CBD35-F261-4635-B192-F075C3E65293}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_cbc5ce0ad75240a383068647da433b94.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cbc5ce0ad75240a383068647da433b94")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("University of Leeds")]
[assembly: AssemblyProduct("SC_cbc5ce0ad75240a383068647da433b94")]
[assembly: AssemblyCopyright("Copyright @ University of Leeds 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc5ce0ad75240a383068647da433b94.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc5ce0ad75240a383068647da433b94.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc5ce0ad75240a383068647da433b94.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cbc5ce0ad75240a383068647da433b94.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cbc5ce0ad75240a383068647da433b94.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_cbc5ce0ad75240a383068647da433b94.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJFeG1gAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAfj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACw9AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
PQAAAAAAAEgAAAACAAUApCUAANAWAAABAAAAAAAAAHQ8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwAfAAAAAQAAEQJ7BAAABG8sAAAGCgIGFG8QAAAKdBwA
AAF9AgAABCpiAigRAAAKAgJ7AgAABHMSAAAKfQEAAAQqEzADALIBAAACAAARcgEAAHAoEwAACgwC
ewEAAARvFAAACgo4jwEAAAJ7AwAABBY+aQEAAAZvFQAAChY+XQEAAAJ7BgAABG8jAAAGBghvFgAA
CgsCewYAAAQHji0DFCsDBxaabyEAAAYCewYAAAQHjmkXMAMUKwMHF5pvHwAABgJ7BgAABAeOaRgw
AxQrAwcYmm8dAAAGAnsGAAAEB45pGTADFCsDBxmabxsAAAYCewYAAAQHjmkaMAMUKwMHGppvGQAA
BgJ7BgAABAeOaRswAxQrAwcbmm8XAAAGAnsGAAAEB45pHDADFCsDBxyabxUAAAYCewYAAAQHjmkd
MAMUKwMHHZpvEwAABgJ7BgAABAeOaR4wAxQrAwcemm8RAAAGAnsGAAAEB45pHwkwAxQrBAcfCZpv
DwAABgJ7BgAABAeOaR8KMAMUKwQHHwqabw0AAAYCewYAAAQHjmkfCzADFCsEBx8Lmm8LAAAGAnsG
AAAEB45pHwwwAxQrBAcfDJpvCQAABgJ7BgAABAeOaR8NMAMUKwQHHw2abwcAAAYCAnsDAAAEF1h9
AwAABAJ7AQAABG8UAAAKCgY6a/7//ypKAigXAAAKAnsBAAAEbxgAAAoqOgIXfQMAAAQCKCYAAAYq
KgIDBAUoGQAACiomAhYDKBoAAAoqWgMsCAIWKBsAAAoqcgUAAHBzHAAACnomAhcDKBoAAAoqWgMs
CAIXKBsAAAoqcgUAAHBzHAAACnomAhgDKBoAAAoqWgMsCAIYKBsAAAoqcgUAAHBzHAAACnomAhkD
KBoAAAoqWgMsCAIZKBsAAAoqcgUAAHBzHAAACnomAhoDKBoAAAoqWgMsCAIaKBsAAAoqcgUAAHBz
HAAACnomAhsDKBoAAAoqWgMsCAIbKBsAAAoqcgUAAHBzHAAACnomAhwDKBoAAAoqWgMsCAIcKBsA
AAoqcgUAAHBzHAAACnomAh0DKBoAAAoqWgMsCAIdKBsAAAoqcgUAAHBzHAAACnomAh4DKBoAAAoq
WgMsCAIeKBsAAAoqcgUAAHBzHAAACnoqAh8JAygaAAAKKl4DLAkCHwkoGwAACipyBQAAcHMcAAAK
eioCHwoDKBoAAAoqXgMsCQIfCigbAAAKKnIFAABwcxwAAAp6KgIfCwMoGgAACipeAywJAh8LKBsA
AAoqcgUAAHBzHAAACnoqAh8MAygaAAAKKl4DLAkCHwwoGwAACipyBQAAcHMcAAAKeioCHw0DKBoA
AAoqXgMsCQIfDSgbAAAKKnIFAABwcxwAAAp6HgIoHQAACioeAigeAAAKKh4CKB8AAAoqfgIoIAAA
CgICcysAAAZ9BAAABAICcy0AAAZ9BQAABCoGKm4CewYAAAQsEgJ7BgAABG8kAAAGAhR9BgAABCoA
AAATMAUASQAAAAMAABEWCisuBAaUDgRyogAAcCghAAAKMxkCBQaaAgQGlCgiAAAKDgRzBgAABn0G
AAAEBhdYCgYDMs4CbyoAAAYCbycAAAYCKCgAAAYqOgIoIwAACgIDfQcAAAQqggJ7BwAABG8kAAAK
byUAAApytAAAcG8mAAAKbycAAAoqOgIoIwAACgIDfQgAAAQqHgIoIwAACiqufgkAAAQtHnLKAABw
0AcAAAIoKAAACm8pAAAKcyoAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoeAigr
AAAKKi5zMwAABoALAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAARAkA
ACN+AACwCQAAxAkAACNTdHJpbmdzAAAAAHQTAAA8AQAAI1VTALAUAAAQAAAAI0dVSUQAAADAFAAA
EAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACQAAAAIAAAACwAAADQAAAAn
AAAAKwAAABAAAAADAAAABAAAACAAAAAhAAAAAQAAAAYAAAABAAAAAAB1BAEAAAAAAAYAVgPaBwYA
6gPaBwYAogLHBw8ATggAAAYAzwIQBgYAOQMQBgYAGgMQBgYA0QMQBgYAdgMQBgYAjwMQBgYA5gIQ
BgYAAQMlBAoAqgPpAQYA6AZUAQYAAQm8BQ4AVgBfBwoAKAfpARIAGQfpAQoAiQbpAQoARwnpAQYA
hQLHBwYAOQf6BwYAfQbvBRYAVQJfBBYAtgJfBBYANwLaBQYAagLaBwYAPwS8BQYA9QZUAQYAYwa8
BRoAAQCHBxoAGgCHBxoAPQCHBwYACgK8BQYAoQG8BQYAuAkQBgAAAAA/AQAAAAABAAEAAQAQAM8F
AAAQAAEAAQABABAACwcAAEUABAAGAAEAEAApCQAAUQAEACYAAQAQAMsIAAA9AAcAKwABABAAjAgA
AD0ACAAtAAAAEAABCF0IPQAJAC4AAAEQALsIXQhpAAsAMgABAAAHpgABAEYEqgABAF0ErQAGAMsI
sAAGAIwItAAGAAsHuAABADcJvAABADcJvAARAMMFwAARACcCxAARAJEByABQIAAAAADGAMQIzAAB
AHsgAAAAAMYACAQGAAIAlCAAAAAAxgDtCAYAAgBSIgAAAADGABMEBgACAGUiAAAAAIYYsAcGAAIA
dCIAAAAAhhiwB0EAAgB/IgAAAACGCLoAEAAFAIkiAAAAAIYIEgXRAAYAoCIAAAAAhgihABAABwCq
IgAAAACGCOsE0QAIAMEiAAAAAIYIiAAQAAkAyyIAAAAAhgjEBNEACgDiIgAAAACGCG8AEAALAOwi
AAAAAIYInQTRAAwAAyMAAAAAhggzARAADQANIwAAAACGCJgF0QAOACQjAAAAAIYIJwEQAA8ALiMA
AAAAhgiFBdEAEABFIwAAAACGCBsBEAARAE8jAAAAAIYIcgXRABIAZiMAAAAAhggPARAAEwBwIwAA
AACGCF8F0QAUAIcjAAAAAIYIAwEQABUAkSMAAAAAhghMBdEAFgCoIwAAAACGCPcAEAAXALMjAAAA
AIYIOQXRABgAyyMAAAAAhgjHABAAGQDWIwAAAACGCCYF0QAaAO4jAAAAAIYIrgAQABsA+SMAAAAA
hgj/BNEAHAARJAAAAACGCJUAEAAdABwkAAAAAIYI2ATRAB4ANCQAAAAAhgh8ABAAHwA/JAAAAACG
CLEE0QAgAFckAAAAAIYAoQkGACEAXyQAAAAAhgAICQYAIQBnJAAAAACGAAsJUQAhAG8kAAAAAIYY
sAcGACEAjyQAAAAAxgHfCAYAIQCRJAAAAACBAH0BBgAhALAkAAAAAMYAlQnWACEAjyQAAAAAxgHt
CAYAJQAFJQAAAACGGLAH4gAlABQlAAAAAIYIQgZ4ACYANSUAAAAAhhiwB+IAJgBEJQAAAACDGLAH
BgAnAEwlAAAAAJMINQfoACcAeCUAAAAAkwgPAu0AJwB/JQAAAACTCBsC8gAnAIclAAAAAJYIHQn4
ACgAjiUAAAAAhhiwBwYAKACWJQAAAACRGLYH/QAoAAAAAQAEBgAAAQAuBwAAAgCWCAAAAwCXBgAA
AQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAf
BAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAA
AQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQAfBAAAAQDl
CAAAAgC9BwAAAwDXCAAABACXBgAAAQBNCQAAAQBNCQAAAQAfBAkAsAcBABEAsAcGABkAsAcKACkA
sAcQADEAsAcQADkAsAcQAEEAsAcQAEkAsAcQAFEAsAcQAFkAsAcQAGEAsAcQAGkAsAcGAKkAsAcG
AMkAsAcVANkAsAcGAIEAUQYgAKEACAQGAHEAsAcQAOEAqAktAOkA4AEyAOEAUgQ2AOEAFwk6AKEA
EwQGAOkATwIGAIkAsAdBAIkAswVLAIkAqwUBAPEAsAcQAIkAoQkGAIkACAkGAIkACwlRAKEAsAcG
AKEASAFZAKEAqghgAHkAsAcGAKEAXgFmAPkAIgZrAAEBxQFxAAkBSQd4ABEBswF9ABEBtAmGALEA
sAeMANEAsAcGAC4ACwAdAS4AEwAmAS4AGwBFAS4AIwBOAS4AKwB3AS4AMwB3AS4AOwB9AS4AQwBO
AS4ASwCWAS4AUwB3AS4AWwDAAUMAYwAKAuMAawAKAmEBewAKAskDcwBFAekDcwBFARsAJQBVAAMA
AQAFAB0ABwAeAAgAIAAAAL4AAQEAABYFBQEAAKUAAQEAAO8EBQEAAIwAAQEAAMgEBQEAAHMAAQEA
AKEEBQEAADcBAQEAAJwFBQEAACsBAQEAAIkFBQEAAB8BAQEAAHYFBQEAABMBAQEAAGMFBQEAAAcB
AQEAAFAFBQEAAPsAAQEAAD0FBQEAAMsAAQEAACoFBQEAALIAAQEAAAMFBQEAAJkAAQEAANwEBQEA
AIAAAQEAALUEBQEAAFgGCQEAADkHDgEAAC8CEwEAACEJGAEBAAcAAwABAAgABQABAAkABwABAAoA
CQABAAsACwABAAwADQABAA0ADwABAA4AEQABAA8AEwABABAAFQABABEAFwABABIAGQABABMAGwAB
ABQAHQABABUAHwABABYAIQABABcAIwABABgAJQABABkAJwABABoAKQABABsAKwABABwALQABAB0A
LwABAB4AMQABAB8AMwABACAANQABACEANwABACIAOQACACwAOwACAC8APQACADAAPwABADEAPwAC
ADIAQQAEgAAAAQAAAAAAAAAAAAAAAADTAAAABAAAAAAAAAAAAAAAlAB0AQAAAAANAAAAAAAAAAAA
AACdAFcJAAAAAA0AAAAAAAAAAAAAAJ0AoQYAAAAADQAAAAAAAAAAAAAAnQB0CQAAAAAEAAAAAAAA
AAAAAACUALwFAAAAAA0AAAAAAAAAAAAAAJ0AxAYAAAAAAAAAAAEAAAALCAAAAAAASURUU0NvbXBv
bmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1
bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABzZXRfQ29sdW1uMTAA
c2V0X0NvbHVtbjAAc2V0X0NvbHVtbjExAHNldF9Db2x1bW4xAHNldF9Db2x1bW4xMgBzZXRfQ29s
dW1uMgBzZXRfQ29sdW1uMTMAc2V0X0NvbHVtbjMAU0NfY2JjNWNlMGFkNzUyNDBhMzgzMDY4NjQ3
ZGE0MzNiOTQAc2V0X0NvbHVtbjQAc2V0X0NvbHVtbjUAc2V0X0NvbHVtbjYAc2V0X0NvbHVtbjcA
c2V0X0NvbHVtbjgAc2V0X0NvbHVtbjkAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAGdl
dF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJ
bnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRSdW50aW1lQ29u
bmVjdGlvbkJ5TmFtZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBU
eXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVF
eGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5n
AFNyY0ZpbGVQYXRoAGdldF9MZW5ndGgAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfY2JjNWNl
MGFkNzUyNDBhMzgzMDY4NjQ3ZGE0MzNiOTQuZGxsAHNldF9Db2x1bW4xMF9Jc051bGwAc2V0X0Nv
bHVtbjBfSXNOdWxsAHNldF9Db2x1bW4xMV9Jc051bGwAc2V0X0NvbHVtbjFfSXNOdWxsAHNldF9D
b2x1bW4xMl9Jc051bGwAc2V0X0NvbHVtbjJfSXNOdWxsAHNldF9Db2x1bW4xM19Jc051bGwAc2V0
X0NvbHVtbjNfSXNOdWxsAHNldF9Db2x1bW40X0lzTnVsbABzZXRfQ29sdW1uNV9Jc051bGwAc2V0
X0NvbHVtbjZfSXNOdWxsAHNldF9Db2x1bW43X0lzTnVsbABzZXRfQ29sdW1uOF9Jc051bGwAc2V0
X0NvbHVtbjlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AVHJhbnNhY3Rp
b24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRf
Q29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEN1
bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRT
UnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAU3RyZWFtUmVh
ZGVyAFRleHRSZWFkZXIAdGV4dFJlYWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0Nf
Y2JjNWNlMGFkNzUyNDBhMzgzMDY4NjQ3ZGE0MzNiOTQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2NiYzVjZTBhZDc1MjQwYTM4MzA2ODY0N2RhNDMzYjk0
LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBBY3F1aXJlQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0
ZU5ld091dHB1dFJvd3MAT2JqZWN0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0
cHV0AEFkZFJvdwBUb0NoYXJBcnJheQBnZXRfQXNzZW1ibHkAAAAAAAMsAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAFUMAbwBuAG4A
ZQBjAHQAaQBvAG4AAHFTAEMAXwBjAGIAYwA1AGMAZQAwAGEAZAA3ADUAMgA0ADAAYQAzADgAMwAw
ADYAOAA2ADQANwBkAGEANAAzADMAYgA5ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAJhVW4eQDQZPtPLSyeQXC7sABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEE
BwESQQQgARwcBwcDDh0OHQMEIAAdAwMgAA4DIAAIBiABHQ4dAwkgAwESSR0IEk0FIAIBCBwDIAAC
AwcBCAYAAggSTQ4FIAEdCAgEIAASfQUgABKAgQYgARKAhQ4EIAASQQgAARKAiRGAjQUgABKAkQcg
AgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIGDgIGCAMGEhQDBhIYAwYSDAMGElEDBhJZAwYS
XQMGEiAEIAEBHAQgAQECCyAEAQgdCB0SSRJNBSABARJRBAAAElkEAAASXQUAAQESXQQAABIgAwAA
AQMoAA4DKAACBCgAEkEECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2NiYzVjZTBhZDc1MjQwYTM4MzA2ODY0N2RhNDMz
Yjk0AAAFAQAAAAAYAQATVW5pdmVyc2l0eSBvZiBMZWVkcwAAKQEAJENvcHlyaWdodCBAIFVuaXZl
cnNpdHkgb2YgTGVlZHMgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
VD0AAAAAAAAAAAAAbj0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA9AAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAOAQAAAAAAAAAAAAAOAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBJgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHQDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABIABQAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAFUAbgBpAHYAZQByAHMAaQB0AHkAIABvAGYAIABMAGUAZQBkAHMAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYwBiAGMANQBjAGUAMABhAGQA
NwA1ADIANAAwAGEAMwA4ADMAMAA2ADgANgA0ADcAZABhADQAMwAzAGIAOQA0AAAAMAAIAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwBjAGIAYwA1AGMAZQAwAGEAZAA3ADUAMgA0ADAAYQAzADgAMwAw
ADYAOAA2ADQANwBkAGEANAAzADMAYgA5ADQALgBkAGwAbAAAAG4AJQABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFUAbgBpAHYAZQByAHMAaQB0
AHkAIABvAGYAIABMAGUAZQBkAHMAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAEMAXwBjAGIAYwA1AGMAZQAwAGEAZAA3ADUAMgA0ADAAYQAzADgAMwAwADYAOAA2ADQA
NwBkAGEANAAzADMAYgA5ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBDAF8AYwBiAGMANQBjAGUAMABhAGQANwA1ADIANAAwAGEAMwA4ADMAMAA2ADgANgA0ADcA
ZABhADQAMwAzAGIAOQA0AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_cbc5ce0ad75240a383068647da433b94</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">eb516a87a6e036ab2b0857b9abab6726</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">5fc6a059d897f69f1ee70370f62424f679a03c8b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[Therapy]"
                      connectionManagerRefId="Package.ConnectionManagers[Therapy]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column13]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column13]"
                          name="Column13" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column12]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column12]"
                          name="Column12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column11]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column11]"
                          name="Column11" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column10]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column10]"
                          name="Column10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column9]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column9]"
                          name="Column9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column8]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column8]"
                          name="Column8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column7]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column7]"
                          name="Column7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column6]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column6]"
                          name="Column6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column5]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column5]"
                          name="Column5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column4]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column4]"
                          name="Column4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column3]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column3]"
                          name="Column3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column2]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column2]"
                          name="Column2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column1]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column1]"
                          name="Column1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0].Columns[Column0]"
                          name="Column0" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Therapy Upload to Stage.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Therapy Upload to Stage.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{70BBFF2E-C21E-4E43-8BC9-F8A25664BD3D}"
          DTS:From="Package\Foreach Loop Container\Define Referral Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{418EAC99-401F-424A-8B8B-166081644702}"
          DTS:From="Package\Foreach Loop Container\Define Results Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{780FABC3-0FA1-4A11-9E8A-23021EAEF969}"
          DTS:From="Package\Foreach Loop Container\Additional Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{28D7F9E2-8767-454C-90F8-D68C1C8A37D1}"
          DTS:From="Package\Foreach Loop Container\Practice Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{50AF91E5-7DAB-4139-BBFE-FC430CD5A4A5}"
          DTS:From="Package\Foreach Loop Container\Consultation Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{71FAF875-999F-473A-9F2E-10C0818DF4C8}"
          DTS:From="Package\Foreach Loop Container\Immunisation Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{49C49A75-3650-4B4E-B60A-F5E124781259}"
          DTS:From="Package\Foreach Loop Container\Define Clinical Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{CC913D23-7E5B-4B9E-B9C3-6C61F54FDD8D}"
          DTS:From="Package\Foreach Loop Container\Define Test Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{FFE90D3E-E46C-4847-A680-45798FABFC77}"
          DTS:From="Package\Foreach Loop Container\Patient Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{4E6C3A7F-5444-4B87-A959-CA057C5916B4}"
          DTS:From="Package\Foreach Loop Container\Staff Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{011AA429-0F95-49D3-950E-E263643017B7}"
          DTS:From="Package\Foreach Loop Container\Clinical Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{511F1DBD-41D0-487F-906E-B084B32D78AF}"
          DTS:From="Package\Foreach Loop Container\Therapy Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{DF084C52-A47B-44AF-B220-EB9D611860FD}"
          DTS:From="Package\Foreach Loop Container\Referral Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{32A8224F-7742-4A8B-8D4B-78D04D36180E}"
          DTS:From="Package\Foreach Loop Container\Test Source Upload to Stage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Foreach Loop Container\Insert into target table" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{0D6D891A-9182-4252-9237-8A153D9CF81B}"
          DTS:ObjectName="{0D6D891A-9182-4252-9237-8A153D9CF81B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove Foreign Keys"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{53A6971C-B7AE-47A7-8EE7-1135D7276BFF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove Foreign Keys"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
          SQLTask:SqlStatementSource="if OBJECT_ID ('dbo.[FK_DefineResults_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblDefineResults] drop constraint [FK_DefineResults_Patient]&#xA;if OBJECT_ID ('dbo.[FK_DefineTest_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblDefineTest] drop constraint [FK_DefineTest_Patient]&#xA;if OBJECT_ID ('dbo.[FK_DefineClinical_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblDefineClinical] drop constraint [FK_DefineClinical_Patient]&#xA;if OBJECT_ID ('dbo.[FK_DefineReferral_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblDefineReferral] drop constraint [FK_DefineReferral_Patient]&#xA;&#xA;if OBJECT_ID ('dbo.[FK_Additional_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblAdditional] drop constraint [FK_Additional_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Clinical_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblClinical] drop constraint [FK_Clinical_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Clinical_Staff]') is not null&#xA;&#x9;alter table [dbo].[tblClinical] drop constraint [FK_Clinical_Staff]&#xA;if OBJECT_ID ('dbo.[FK_Consultation_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblConsultation] drop constraint [FK_Consultation_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Consultation_Staff]') is not null&#xA;&#x9;alter table [dbo].[tblConsultation] drop constraint [FK_Consultation_Staff]&#xA;if OBJECT_ID ('dbo.[FK_Immunisation_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblImmunisation] drop constraint [FK_Immunisation_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Immunisation_Staff]') is not null&#xA;&#x9;alter table [dbo].[tblImmunisation] drop constraint [FK_Immunisation_Staff]&#xA;if OBJECT_ID ('dbo.[FK_Referral_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblReferral] drop constraint [FK_Referral_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Referral_Staff]') is not null&#xA;&#x9;alter table [dbo].[tblReferral] drop constraint[FK_Referral_Staff]&#xA;if OBJECT_ID ('dbo.[FK_Test_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblTest] drop constraint [FK_Test_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Test_Staff]') is not null&#xA;&#x9;alter table [dbo].[tblTest] drop constraint [FK_Test_Staff]&#xA;if OBJECT_ID ('dbo.[FK_Therapy_Patient]') is not null&#xA;&#x9;alter table [dbo].[tblTherapy] drop constraint [FK_Therapy_Patient]&#xA;if OBJECT_ID ('dbo.[FK_Therapy_Staff]') is not null&#xA;&#x9;alter table [dbo].[tblTherapy] drop constraint [FK_Therapy_Staff]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{7CDA80E0-680C-4A87-A04A-0631B48B28DF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D1B7DAC1-9769-4272-B64A-3C0D7D4789CE}"
          SQLTask:SqlStatementSource="truncate table [dbo].[tblDefineResults]&#xA;truncate table [dbo].[tblDefineTest]&#xA;truncate table [dbo].[tblDefineClinical]&#xA;truncate table [dbo].[tblDefineReferral]&#xA;truncate table [dbo].[tblClinical]&#xA;truncate table [dbo].[tblConsultation]&#xA;truncate table [dbo].[tblImmunisation]&#xA;truncate table [dbo].[tblPractice]&#xA;truncate table [dbo].[tblReferral]&#xA;truncate table [dbo].[tblTherapy]&#xA;truncate table [dbo].[tblAdditional]&#xA;truncate table [dbo].[tblTest]&#xA;truncate table [dbo].[tblPatient]&#xA;truncate table [dbo].[tblStaff]&#xA;truncate table [dbo].[tblUploadStage]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{D2CF4CC8-980D-4818-9DE9-D90FAEC06A75}"
      DTS:From="Package\Truncate Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{DC9A900F-9E98-4926-90F9-5AD0D1A8906B}"
      DTS:From="Package\Create Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{18334D3D-AC49-4269-B6DF-581694AACAC4}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Drop tblUploadStage" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <NodeLayout
          Size="146,42"
          Id="Package\Create Tables"
          TopLeft="603.202380952382,183.922619047619" />
        <NodeLayout
          Size="178,42"
          Id="Package\Drop tblUploadStage"
          TopLeft="953.952380952381,183.922619047619" />
        <NodeLayout
          Size="188,42"
          Id="Package\Foreach Loop Container\Insert into target table"
          TopLeft="442.892857142857,226.746031746032" />
        <NodeLayout
          Size="192,42"
          Id="Package\Foreach Loop Container\Patient Upload to Stage"
          TopLeft="169.5,228.174603174603" />
        <NodeLayout
          Size="181,42"
          Id="Package\Foreach Loop Container\Staff Upload to Stage"
          TopLeft="712.285714285714,226.746031746032" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="159,119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="323.892857142857,107.746031746032"
              Start="0,0"
              End="323.892857142857,100.246031746032">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5830371949774" />
                  <mssgle:CubicBezierSegment
                    Point1="0,71.5830371949774"
                    Point2="0,75.5830371949774"
                    Point3="4,75.5830371949774" />
                  <mssgle:LineSegment
                    End="319.892857142857,75.5830371949774" />
                  <mssgle:CubicBezierSegment
                    Point1="319.892857142857,75.5830371949774"
                    Point2="323.892857142857,75.5830371949774"
                    Point3="323.892857142857,79.5830371949774" />
                  <mssgle:LineSegment
                    End="323.892857142857,100.246031746032" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="429.5,119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="89.3928571428573,107.746031746032"
              Start="0,0"
              End="89.3928571428573,100.246031746032">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.577217553688" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.577217553688"
                    Point2="0,59.577217553688"
                    Point3="4,59.577217553688" />
                  <mssgle:LineSegment
                    End="85.3928571428573,59.577217553688" />
                  <mssgle:CubicBezierSegment
                    Point1="85.3928571428573,59.577217553688"
                    Point2="89.3928571428573,59.577217553688"
                    Point3="89.3928571428573,63.577217553688" />
                  <mssgle:LineSegment
                    End="89.3928571428573,100.246031746032" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          TopLeft="670,555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110.607142857143,-286.253968253968"
              Start="0,0"
              End="-110.607142857143,-278.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-158.585335443342" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-158.585335443342"
                    Point2="0,-162.585335443342"
                    Point3="-4,-162.585335443342" />
                  <mssgle:LineSegment
                    End="-106.607142857143,-162.585335443342" />
                  <mssgle:CubicBezierSegment
                    Point1="-106.607142857143,-162.585335443342"
                    Point2="-110.607142857143,-162.585335443342"
                    Point3="-110.607142857143,-166.585335443342" />
                  <mssgle:LineSegment
                    End="-110.607142857143,-278.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          TopLeft="942,555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-360.107142857143,-286.253968253968"
              Start="0,0"
              End="-360.107142857143,-278.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-184.166944166944" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-184.166944166944"
                    Point2="0,-188.166944166944"
                    Point3="-4,-188.166944166944" />
                  <mssgle:LineSegment
                    End="-356.107142857143,-188.166944166944" />
                  <mssgle:CubicBezierSegment
                    Point1="-356.107142857143,-188.166944166944"
                    Point2="-360.107142857143,-188.166944166944"
                    Point3="-360.107142857143,-192.166944166944" />
                  <mssgle:LineSegment
                    End="-360.107142857143,-278.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 12]"
          TopLeft="944,466">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-339.607142857143,-197.253968253968"
              Start="0,0"
              End="-339.607142857143,-189.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-149.874464862017" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-149.874464862017"
                    Point2="0,-153.874464862017"
                    Point3="-4,-153.874464862017" />
                  <mssgle:LineSegment
                    End="-335.607142857143,-153.874464862017" />
                  <mssgle:CubicBezierSegment
                    Point1="-335.607142857143,-153.874464862017"
                    Point2="-339.607142857143,-153.874464862017"
                    Point3="-339.607142857143,-157.874464862017" />
                  <mssgle:LineSegment
                    End="-339.607142857143,-189.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 13]"
          TopLeft="944,379">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-339.607142857143,-110.253968253968"
              Start="0,0"
              End="-339.607142857143,-102.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-82.0072449450044" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-82.0072449450044"
                    Point2="0,-86.0072449450044"
                    Point3="-4,-86.0072449450044" />
                  <mssgle:LineSegment
                    End="-335.607142857143,-86.0072449450044" />
                  <mssgle:CubicBezierSegment
                    Point1="-335.607142857143,-86.0072449450044"
                    Point2="-339.607142857143,-86.0072449450044"
                    Point3="-339.607142857143,-90.0072449450044" />
                  <mssgle:LineSegment
                    End="-339.607142857143,-102.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="697,119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-142.107142857143,107.746031746032"
              Start="0,0"
              End="-142.107142857143,100.246031746032">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.577217553688" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.577217553688"
                    Point2="0,59.577217553688"
                    Point3="-4,59.577217553688" />
                  <mssgle:LineSegment
                    End="-138.107142857143,59.577217553688" />
                  <mssgle:CubicBezierSegment
                    Point1="-138.107142857143,59.577217553688"
                    Point2="-142.107142857143,59.577217553688"
                    Point3="-142.107142857143,63.577217553688" />
                  <mssgle:LineSegment
                    End="-142.107142857143,100.246031746032" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="957.5,119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-366.607142857143,107.746031746032"
              Start="0,0"
              End="-366.607142857143,100.246031746032">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5830371949774" />
                  <mssgle:CubicBezierSegment
                    Point1="0,71.5830371949774"
                    Point2="0,75.5830371949774"
                    Point3="-4,75.5830371949774" />
                  <mssgle:LineSegment
                    End="-362.607142857143,75.5830371949774" />
                  <mssgle:CubicBezierSegment
                    Point1="-362.607142857143,75.5830371949774"
                    Point2="-366.607142857143,75.5830371949774"
                    Point3="-366.607142857143,79.5830371949774" />
                  <mssgle:LineSegment
                    End="-366.607142857143,100.246031746032" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="361.5,248.460317460317">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.3928571428572,0"
              Start="0,0"
              End="73.8928571428572,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="73.8928571428572,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="712.285714285714,247.746031746032">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81.3928571428571,0"
              Start="0,0"
              End="-73.8928571428571,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-73.8928571428571,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="155,379">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="336.892857142857,-110.253968253968"
              Start="0,0"
              End="336.892857142857,-102.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.4746364746366" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-68.4746364746366"
                    Point2="0,-72.4746364746366"
                    Point3="4,-72.4746364746366" />
                  <mssgle:LineSegment
                    End="332.892857142857,-72.4746364746366" />
                  <mssgle:CubicBezierSegment
                    Point1="332.892857142857,-72.4746364746366"
                    Point2="336.892857142857,-72.4746364746366"
                    Point3="336.892857142857,-76.4746364746366" />
                  <mssgle:LineSegment
                    End="336.892857142857,-102.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="157,466">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="357.392857142857,-197.253968253968"
              Start="0,0"
              End="357.392857142857,-189.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-108.035486500743" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-108.035486500743"
                    Point2="0,-112.035486500743"
                    Point3="4,-112.035486500743" />
                  <mssgle:LineSegment
                    End="353.392857142857,-112.035486500743" />
                  <mssgle:CubicBezierSegment
                    Point1="353.392857142857,-112.035486500743"
                    Point2="357.392857142857,-112.035486500743"
                    Point3="357.392857142857,-116.035486500743" />
                  <mssgle:LineSegment
                    End="357.392857142857,-189.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="151.5,555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="317.892857142857,-286.253968253968"
              Start="0,0"
              End="317.892857142857,-278.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-219.301850754133" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-219.301850754133"
                    Point2="0,-223.301850754133"
                    Point3="4,-223.301850754133" />
                  <mssgle:LineSegment
                    End="313.892857142857,-223.301850754133" />
                  <mssgle:CubicBezierSegment
                    Point1="313.892857142857,-223.301850754133"
                    Point2="317.892857142857,-223.301850754133"
                    Point3="317.892857142857,-227.301850754133" />
                  <mssgle:LineSegment
                    End="317.892857142857,-278.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          TopLeft="401.5,555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="135.392857142857,-286.253968253968"
              Start="0,0"
              End="135.392857142857,-278.753968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-139.126984126984" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-139.126984126984"
                    Point2="0,-143.126984126984"
                    Point3="4,-143.126984126984" />
                  <mssgle:LineSegment
                    End="131.392857142857,-143.126984126984" />
                  <mssgle:CubicBezierSegment
                    Point1="131.392857142857,-143.126984126984"
                    Point2="135.392857142857,-143.126984126984"
                    Point3="135.392857142857,-147.126984126984" />
                  <mssgle:LineSegment
                    End="135.392857142857,-278.753968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="226,42"
          Id="Package\Foreach Loop Container\Define Clinical Upload to Stage"
          TopLeft="551,8.29166666666698" />
        <NodeLayout
          Size="227,42"
          Id="Package\Foreach Loop Container\Define Results Upload to Stage"
          TopLeft="282.666666666667,8.29166666666698" />
        <NodeLayout
          Size="213,42"
          Id="Package\Foreach Loop Container\Define Test Upload to Stage"
          TopLeft="818.333333333334,8.29166666666698" />
        <NodeLayout
          Size="230,42"
          Id="Package\Foreach Loop Container\Define Referral Upload to Stage"
          TopLeft="11.3333333333335,8.29166666666698" />
        <GroupLayout
          Text="Definitions of samples"
          ParentId="Package\Foreach Loop Container"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1044,105"
          Size="1044,148"
          Id="f6157e56-7808-499b-8d06-89d8849635f8"
          TopLeft="33.0000000000016,26.3333333333333">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Foreach Loop Container\Define Clinical Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Define Results Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Define Test Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Define Referral Upload to Stage</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="192,42"
          Id="Package\Foreach Loop Container\Clinical Upload to Stage"
          TopLeft="28.1339285714287,15.9583333333335" />
        <NodeLayout
          Size="218,42"
          Id="Package\Foreach Loop Container\Consultation Upload to Stage"
          TopLeft="804.5,102.958333333333" />
        <NodeLayout
          Size="224,42"
          Id="Package\Foreach Loop Container\Immunisation Upload to Stage"
          TopLeft="800.970238095239,15.9583333333335" />
        <NodeLayout
          Size="197,42"
          Id="Package\Foreach Loop Container\Referral Upload to Stage"
          TopLeft="21.6339285714287,191.651785714286" />
        <NodeLayout
          Size="215,42"
          Id="Package\Foreach Loop Container\Test Source Upload to Stage"
          TopLeft="262.71130952381,191.651785714286" />
        <NodeLayout
          Size="198,42"
          Id="Package\Foreach Loop Container\Therapy Upload to Stage"
          TopLeft="27.2113095238101,102.958333333333" />
        <NodeLayout
          Size="206,42"
          Id="Package\Foreach Loop Container\Additional Upload to Stage"
          TopLeft="536.5,191.651785714286" />
        <NodeLayout
          Size="196,42"
          Id="Package\Foreach Loop Container\Practice Upload to Stage"
          TopLeft="812.970238095239,191.651785714286" />
        <GroupLayout
          Text="Patient data"
          ParentId="Package\Foreach Loop Container"
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1039,289"
          Size="1039,332"
          Id="2bc3733a-be32-4242-9466-de3dbd526616"
          TopLeft="31.3452380952353,319.77380952381">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Foreach Loop Container\Clinical Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Consultation Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Immunisation Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Referral Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Test Source Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Therapy Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Additional Upload to Stage</s:String>
            <s:String>Package\Foreach Loop Container\Practice Upload to Stage</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1104,707"
          Size="1104,750"
          Id="Package\Foreach Loop Container"
          TopLeft="309.086219336221,306.509740259741" />
        <NodeLayout
          Size="157,42"
          Id="Package\Truncate Tables"
          TopLeft="598.566919191918,77.1224146224147" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="676.63465007215,119.122414622415">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.8002044252047"
              Start="0,0"
              End="0,57.3002044252047">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.3002044252047" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="677.310966810968,225.922619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80.587121212122"
              Start="0,0"
              End="0,73.087121212122">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.087121212122" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1043.35263347763,306.509740259741">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80.587121212122"
              Start="0,0"
              End="0,-73.087121212122">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-73.087121212122" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Add Foreign Keys"
          TopLeft="170.490981240974,69.6462241462241" />
        <NodeLayout
          Size="183,42"
          Id="Package\Remove Foreign Keys"
          TopLeft="35.1145382395362,18.1904761904764" />
        <GroupLayout
          Text="Foreign Keys"
          ParentId="Package"
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="378,146"
          Size="378,43"
          Id="eafd6101-e88f-406c-940a-acf91650caac"
          TopLeft="1359.30158730159,50.0000000000003">
          <GroupLayout.ChildrenIds>
            <s:String>Package\Add Foreign Keys</s:String>
            <s:String>Package\Remove Foreign Keys</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Additional Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="205,42"
          Id="Package\Foreach Loop Container\Additional Upload to Stage\Dump into tblUploadStage"
          TopLeft="24.5,209.5" />
        <NodeLayout
          Size="243,42"
          Id="Package\Foreach Loop Container\Additional Upload to Stage\Additional Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Additional Upload to Stage\Split columns"
          TopLeft="55.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Additional Upload to Stage.Paths[Output 0]"
          TopLeft="127,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Additional Upload to Stage.Paths[Derived Column Output]"
          TopLeft="127,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Clinical Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Clinical Upload to Stage\Split columns"
          TopLeft="48.5,107.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Clinical Upload to Stage\Dump in tblUploadStage"
          TopLeft="22.5,209.5" />
        <NodeLayout
          Size="229,42"
          Id="Package\Foreach Loop Container\Clinical Upload to Stage\Clinical Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Clinical Upload to Stage.Paths[Output 0]"
          TopLeft="120,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Clinical Upload to Stage.Paths[Derived Column Output]"
          TopLeft="120,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Consultation Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Consultation Upload to Stage\Split columns"
          TopLeft="59.5,107.5" />
        <NodeLayout
          Size="251,42"
          Id="Package\Foreach Loop Container\Consultation Upload to Stage\Consultaion Source to single column"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Consultation Upload to Stage\Dump in tblUploadStage"
          TopLeft="33.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Consultation Upload to Stage.Paths[Output 0]"
          TopLeft="131,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Consultation Upload to Stage.Paths[Derived Column Output]"
          TopLeft="131,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Define Clinical Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach Loop Container\Define Clinical Upload to Stage\Split to columns"
          TopLeft="57.5,107.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage"
          TopLeft="38,209.5" />
        <NodeLayout
          Size="260,42"
          Id="Package\Foreach Loop Container\Define Clinical Upload to Stage\DefineClinical Source to single column"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Clinical Upload to Stage.Paths[Output 0]"
          TopLeft="135.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Clinical Upload to Stage.Paths[Derived Column Output]"
          TopLeft="135.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Define Clinical Upload to Stage\Dump in tblUploadStage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Define Referral Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach Loop Container\Define Referral Upload to Stage\Split to columns"
          TopLeft="59.5,107.5" />
        <NodeLayout
          Size="188,42"
          Id="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table"
          TopLeft="43.5,211.5" />
        <NodeLayout
          Size="264,42"
          Id="Package\Foreach Loop Container\Define Referral Upload to Stage\DefineReferral Source to single column"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Referral Upload to Stage.Paths[Output 0]"
          TopLeft="137.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Referral Upload to Stage.Paths[Derived Column Output]"
          TopLeft="137.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Define Referral Upload to Stage\Dump in Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Define Results Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Define Results Upload to Stage\Split columns"
          TopLeft="48.5,107.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage"
          TopLeft="22.5,209.5" />
        <NodeLayout
          Size="229,42"
          Id="Package\Foreach Loop Container\Define Results Upload to Stage\Define Results to single column"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Results Upload to Stage.Paths[Output 0]"
          TopLeft="120,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Results Upload to Stage.Paths[Derived Column Output]"
          TopLeft="120,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Define Results Upload to Stage\Dump in tblUploadStage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Define Test Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Define Test Upload to Stage\Split columns"
          TopLeft="59.5,107.5" />
        <NodeLayout
          Size="205,42"
          Id="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage"
          TopLeft="28.5,209.5" />
        <NodeLayout
          Size="251,42"
          Id="Package\Foreach Loop Container\Define Test Upload to Stage\Define Test Source to single column"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Test Upload to Stage.Paths[Output 0]"
          TopLeft="131,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Define Test Upload to Stage.Paths[Derived Column Output]"
          TopLeft="131,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Define Test Upload to Stage\Dump into tblUploadStage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Immunisation Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Immunisation Upload to Stage\Dump in tblUploadStage"
          TopLeft="38.5,209.5" />
        <NodeLayout
          Size="261,42"
          Id="Package\Foreach Loop Container\Immunisation Upload to Stage\Immunisation Source to single column"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Immunisation Upload to Stage\Split columns"
          TopLeft="64.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Immunisation Upload to Stage.Paths[Output 0]"
          TopLeft="136,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Immunisation Upload to Stage.Paths[Derived Column Output]"
          TopLeft="136,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Patient Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="229,42"
          Id="Package\Foreach Loop Container\Patient Upload to Stage\Patient Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Patient Upload to Stage\Split columns"
          TopLeft="48.5,107.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage"
          TopLeft="22.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Patient Upload to Stage.Paths[Output 0]"
          TopLeft="120,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Patient Upload to Stage.Paths[Derived Column Output]"
          TopLeft="120,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Patient Upload to Stage\Dump in tblUploadStage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Practice Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Practice Upload to Stage\Split columns"
          TopLeft="51,107.5" />
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop Container\Practice Upload to Stage\Practice Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="205,42"
          Id="Package\Foreach Loop Container\Practice Upload to Stage\Dump into tblUploadStage"
          TopLeft="20,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Practice Upload to Stage.Paths[Output 0]"
          TopLeft="122.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Practice Upload to Stage.Paths[Derived Column Output]"
          TopLeft="122.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Referral Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop Container\Referral Upload to Stage\Referral Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Referral Upload to Stage\Split columns"
          TopLeft="51,107.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Referral Upload to Stage\Dump in tblUploadStage"
          TopLeft="25,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Referral Upload to Stage.Paths[Output 0]"
          TopLeft="122.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Referral Upload to Stage.Paths[Derived Column Output]"
          TopLeft="122.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staff Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="219,42"
          Id="Package\Foreach Loop Container\Staff Upload to Stage\Staff Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Staff Upload to Stage\Split columns"
          TopLeft="43.5,107.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage"
          TopLeft="17.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staff Upload to Stage.Paths[Output 0]"
          TopLeft="115,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staff Upload to Stage.Paths[Derived Column Output]"
          TopLeft="115,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staff Upload to Stage\Dump in tblUploadStage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Test Source Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Test Source Upload to Stage\Split columns"
          TopLeft="51,107.5" />
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop Container\Test Source Upload to Stage\Referral Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Test Source Upload to Stage\Dump into Stage"
          TopLeft="42.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Test Source Upload to Stage.Paths[Output 0]"
          TopLeft="122.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Test Source Upload to Stage.Paths[Derived Column Output]"
          TopLeft="122.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Therapy Upload to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Therapy Upload to Stage\Split columns"
          TopLeft="51.5,107.5" />
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Loop Container\Therapy Upload to Stage\Therapy Source to single column"
          TopLeft="5.50000000000001,5.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach Loop Container\Therapy Upload to Stage\Dump in tblUploadStage"
          TopLeft="25.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Therapy Upload to Stage.Paths[Output 0]"
          TopLeft="123,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Therapy Upload to Stage.Paths[Derived Column Output]"
          TopLeft="123,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>